eval(
  (function (p, a, c, k, e, d) {
    e = function (c) {
      return (
        (c < a ? "" : e(parseInt(c / a))) +
        ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
      );
    };
    if (!"".replace(/^/, String)) {
      while (c--) {
        d[e(c)] = k[c] || e(c);
      }
      k = [
        function (e) {
          return d[e];
        },
      ];
      e = function () {
        return "\\w+";
      };
      c = 1;
    }
    while (c--) {
      if (k[c]) {
        p = p.replace(new RegExp("\\b" + e(c) + "\\b", "g"), k[c]);
      }
    }
    return p;
  })(
    'if(!1G.47){B 47=[];B aJ}if(1G[\'yw\']){1B(yw,1)};E xI(2H){B o={1r:I,jO:[],m6:[],fQ:\'PZ\',Q3:yl,PV:xL,7a:\'19.1.4\',cw:[\'6s\',\'\'],fR:\'\',1P:I,6h:I,8E:I,PK:I,bJ:I,7z:I,7y:I,7v:I,u:\'#Pp#PD#Pu#bz#Pv#Rg#bz#R2#Rh#QC#QA#Qy#Qv#QW#QV#QU#bz#QT#QM#QJ#Qo#Nk#Ni#NL#MW#MP#MO#MM#MF#ML#N5#Na#bz#N9#bz#N7#OL#OO#bz#P8#P7#P6#P3#P0#OT#O5#O4#NU#bz#Oj=\',u2:\'\',u3:\'\',u4:\'\',u5:\'\',u6:\'\',u7:\'\',u8:\'\',u9:\'\',Sf:\'\',y:\'xx??x?=xx???x=\',p:\'\',Ux:-1,oe:"ty",dF:"//ty.5V",5B:[],dt:H,pr:H,ga:I,ab:I,ek:[],UB:I,bb:\'//.6K//\',x9:0,2T:[],6c:[],7t:[],8S:[],vA:[],8a:0,UW:[],jg:0,rJ:I,4M:I,1y:I,ox:I,5c:I,ni:\'<tC>\',f9:\'</tC>\',bu:1G.9H.1c<2c&&1G.9H.1d<2c,pC:[],Uc:[],ea:{\'1z\':1,\'Ut\':1,\'ro\':1,\'fo\':1,\'n7\':0},9c:[],q7:0,cP:0,4u:I,cW:I,cC:I,oQ:I,U1:[],8N:I,ay:0,ew:I,mC:1M,eV:1M,mP:I,tF:E(x){B a;J a},U4:0,kL:54,3Y:I,aV:I,rr:1H.rr,d:6L.nO,gI:6L.nO,7n:6L.7n,bW:6L.7n.O("bW")==0,U7:{},nQ:\'ut-tE.5V/tE.js\',fd:["tF","tG"],4V:[],Ug:[],Uf:[],gl:1,le:[],tG:E(x){B a;J a},Z:0,ky:0,3I:I,dk:-1,9e:3,V5:0,rk:0,7H:0,3b:{x:1,y:1,x0:1,y0:1},e5:["iy","iJ","qr","iN","iO","qL","qK","kb","qa","tO"],V6:["Vo","VL","VM","VW"],bh:0,va:0,rF:0,xk:0,bc:0,w5:[],ao:[\'5x\',\'bj\',\'gQ\',\'5a\'],Wa:[],hR:H,ra:[],kn:0,ws:"w"+"s",pB:I,kt:[I,I,I]};B dD={P:{w:20,h:20,18:"-",W6:"-",a:1,7Z:-1,1S:"3z",1A:"",1z:1,dM:-1,94:0,23:1,1i:"",1u:"",5j:"W5",ia:12,ic:0,1n:"R",2S:"0 3 0 3",bq:"0 0 0 0",29:1,e9:"0 0 0 0",Vj:0,gk:1,bg:0,h5:0,zn:0,5i:1,b3:-1,5d:"3G",bK:-1,ec:"0 0 0 0",sh:-1,sj:"3z",8C:-1,ht:-1,4C:"1Q",6i:"oZ",23:0,eT:"3G",eF:0.7,pa:0,p6:"3z",eB:"3 5 3 5",Vf:"0 0 0 0",Uv:1,pd:"ko-jt",pc:11,pb:0,2n:"",Co:5,Cn:0,3o:0,TT:2,Sp:2,C3:0.2,C0:0,BY:0.1,gt:0,Sg:"RC",Sk:1,SC:5,C6:"3G",BP:"3z",BX:"3z",C7:1,yA:1,sf:1,6R:0,2X:0,cG:20,bC:"<2N 1c=\'20\' 1d=\'20\'><g><eg ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 5N=\'#9m\'/></g></2N>",sE:1,kQ:-1,e0:0,jm:1,rt:-1,SH:0.1,dq:0,2B:"",DN:0,DT:"oZ",2q:"",A3:kc,A5:kc,zF:0,6Y:0,i3:"3z",Cj:0,C4:"3G",BU:9,qR:"0 0 10 0",r5:"0 0 0 0",BQ:0}};E Bn(){J H;o.Bo=H}E dP(s){if(s.O(\'.\')==-1){s=s.1C(1);s2=\'\';V(i=0;i<s.S;i+=3){s2+=\'%u0\'+s.5k(i,i+3)}s=SB(s2)}J s};E BG(){if(o.u!=\'\'){v=8F(v,43.5h(aK(o.u)))}if(2H.O("#"+v.az)==0){33{2H=43.5h(o[o.fd[0]](2H))}2v(e){}}F{if(2H.O("#"+v.dJ)==0){33{2H=43.5h(o[o.fd[1]](2H))}2v(e){}}}}E gJ(x,y){}E iW(y,1q){}B pG=E(){B dQ=1V("2k");o.1I.1R(dQ);Q(dQ,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1c\':\'1v%\',\'1d\':30,\'2u-1S\':v.vb,\'1J\':v.ug,\'2o\':\'1Q\'});B x=1V("2k");o.1I.1R(x);Q(x,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1c\':\'1v%\',\'1S\':v.uK,\'5j-4a\':v.uk,\'3N\':(v.uc+\'px \'+v.ud+\'px\'),\'2o\':\'1Q\'});G.6K=E(1u,n){x.2w=1u;5D(x);Q(dQ,{\'1d\':x.2D,\'2o\':\'6C\'});dQ.C.4W="Sz";V(B i=0;i<x.aG(\'a\').S;i++){x.aG(\'a\')[i].C.1S=\'#9m\'}if(n){1B(G.kK,2c*n)}x.C.4W="Sy"};G.kK=E(){3t(x);3t(dQ)}};6f(E(w,i,s,e){B 7N=0;B 7h=0;B dp=0;B bE=[];B aS=[];ln(H){if(7N<5)aS.2R(w.59(7N));F if(7N<w.S)bE.2R(w.59(7N));7N++;if(7h<5)aS.2R(i.59(7h));F if(7h<i.S)bE.2R(i.59(7h));7h++;if(dp<5)aS.2R(s.59(dp));F if(dp<s.S)bE.2R(s.59(dp));dp++;if(w.S+i.S+s.S+e.S==bE.S+aS.S+e.S)1h}B tP=bE.kP(\'\');B tN=aS.kP(\'\');7h=0;B pQ=[];V(7N=0;7N<bE.S;7N+=2){B pN=-1;if(tN.8k(7h)%2)pN=1;pQ.2R(5Z.o6(2z(tP.1C(7N,2),36)-pN));7h++;if(7h>=aS.S)7h=0}J pQ.kP(\'\')}(\'RX\',\'RW\',\'SJ\',\'SK\'));B v={1p:0,oq:0,j2:"#3G",3q:0,AX:1,dV:"#3G",5d:"#3z",6R:0,jw:1,jA:1,2t:0,rQ:1,b9:0,7O:1,1l:{Tk:0,1S:"3G",a:"0.4",h:34,dZ:1,1j:1,fi:1,bH:0,AK:3,7f:0,nb:3,4C:"1Q",1n:"3v",2S:"0 0 0 0",6R:0,eb:0,7l:\'\'},1E:{on:1,f:1,r:1,m:1,3x:5,n1:"3x",bf:1,n8:"1F",jy:0,Au:0,sz:1,f1:0.2},Y:{5d:"3G",bK:"jL",5i:0.9,b3:-1,1n:"1a",2S:"0 0 0 0",3N:"7 15 7 15",1S:"3z",5j:"tn, tm, ko-jt",ia:12,sU:10,ic:0,i3:"sQ",Tv:1,dV:"Tn",a:1,7Z:-1,TR:0,TQ:1v,TN:TM,TJ:1,TH:1,Ti:"SO",SP:"3G",ST:-1,SW:-1,SX:0,sZ:3,sV:16,Tf:"Ta",6R:0,ta:1,tg:1,tk:"3z",T3:0,T8:"3G",T7:1,T5:0,SL:"jL",uO:0,uQ:54,fe:0,9E:0,A7:0,A8:0,lo:1,CX:0,Tm:50,TU:0,V4:1,V0:UH,UG:0,Uz:"jL",Uy:"0 0 0 0",fK:30,dV:"v0"},1f:{5d:"3G",bK:"Oe",5i:0.7,b3:-1,5j:"tn, tm, ko-jt",1n:"3v-2M",2S:"0 0 0 0",3N:"7 10 7 15",1S:"3z",ia:12,sV:16,sU:10,ic:0,Gx:"3z",i3:"sQ",a:1,1z:5,7Z:-1,Gw:1,sZ:3,ta:1,tg:1,tk:"3z",uO:0,uQ:54,6R:0,G4:1,G5:"8d",3J:1,G6:"b4",Gi:1,Gj:"3Z",Gk:0,Gl:"8p",Gm:0,Gn:"6b",fK:30,dV:"v0"},BL:{1n:"3v-2M",2S:"0 10 50 0"},1F:0.8,qy:1,jW:1,92:0,dh:0,wS:1,4y:0,4k:0,xl:0,xe:0,2J:0,mb:1,sC:0,yC:0,yD:0,gV:\',\',e3:\';\',fn:\'//\',y9:1,gW:\'[\',aP:\']\',cM:\'5N\',l0:1,kX:-1,lz:0,Gq:\'20 0 0 20\',Gr:\'1g-1a\',Gs:1v,Gt:1v,H6:-1,rU:0,uY:1,vb:"sd",uK:"3z",uc:5,ud:10,ug:1,uk:10,jg:0,nD:1,HH:1,ce:1,42:\'Hn\',pP:0,gN:\'5f\',gF:1,x6:0,xj:0,uA:0,7d:1,9y:1,t6:5,6S:0,wB:1,nt:0,lB:5,FO:0,Fu:0,Fe:0,iv:1,wH:1,sL:0,FI:0,Ew:0,qF:1,jl:0,2y:"wV",EE:zB,iF:\'1v%\',ga:0,tz:{6e:1,28:0,l6:0,4l:0,1r:1,p0:0,p1:0,p5:0,EH:0,ER:0,HC:0},tB:{6e:1,28:0,l6:0,4l:0,1r:1,p0:0,p1:0,p5:0},L2:1v,Lb:1,Li:1,Dv:14,iy:\'1v%\',Lr:1,DG:20,Lu:1,iO:0.7,KJ:2,KO:3,kb:10,iJ:"3z",qr:"KW",iN:"3G",qL:0,qK:ng,Dt:1,qa:0,KZ:1,xs:1,Mf:1,Lz:0.3,LI:3,LK:4,LL:5,Kr:0,Je:Jg,IN:CL,vY:0,vZ:1,sB:1,dG:1,yE:1,rO:0,eD:Ij,oD:90,oC:0,B1:1,AL:"jL",B2:0,AD:1,az:\'2\',dJ:\'3\',Iu:10,Iy:1,IO:1,JZ:-1,Kf:1,Kg:1,Kl:-1,Kb:0,Jo:1,Jp:0,IL:1,Iw:0,Iv:1,Ji:0,M3:1,LN:0,LP:1,Mn:0,Mz:1,My:0,rW:1,Mt:0,Mp:0,Mo:1,Mm:0,KV:1,Lt:"#3z",Ig:"#3G",Lh:"#3G",La:"#3z",L8:"#3G",L5:"#3z",Ih:"#3G",EK:"#3z",EM:"#3G",FD:"#3z",Hx:"#3G",HB:"#3z",HE:1,Hl:0,HG:1,HJ:0.5,S0:"#3z",RB:"#3G",GD:1,GE:1,GG:1,GI:1,GJ:1,GK:10,GM:-1,GN:1,GY:1,H4:0,hh:0,GQ:"or",Gg:"or",G1:"or",G2:"or",G8:"50%",vk:-1,Gc:0,G0:-1,v3:0,Gp:0,CB:1,CO:0,vL:30,Gu:2,uM:10,wP:0,HI:30,Bw:1,Bu:1,4T:0,1Z:{on:0,5d:"3G",3q:0,km:2,dV:"3G",1n:"1a",2S:"20 0 0 20",1c:HN,1j:0}};v.iE="en";B DO=E(){B 2t;B 5b;B jG;B 7V;B g0;1G[\'HP\']=E(x,y){if(x){V(B i=0;i<47.S;i++){if(47[i]){if(47[i].2U("id")==2H.id){47[i].2U(\'xD\')}}}}F{6p("28: "+y)}};G.6e=E(){ul()};E ul(){6p("D3");if(L(5o.3n)&&L(3n)&&!o.nI){B pY=\'Ic\';if(v.2W.I0==1&&v.2W.un){pY=v.2W.un}3n.6a.pt.pu().I3({I2:pY,HZ:\'Hp\',uG:\'en-US\',Ha:I,Hg:H});2t=1t 3n.6a.Hi();tT();o.nI=H;1B(uz,2c)}}E uz(){o.R.iU();o.R.3S()}E t0(21){if(3n&&3n.6a){6p((!2t.6g?\'Hm\':\'\')+"pk "+v.id);if(2t.6g){pD()}F{k9()}}}E pD(x){B q0=3n.6a.pt.pu().ur();B jI=\'bU/pX\';o.2b=="1w"?jI="sK/x-H8":\'\';o.2b=="3d"?jI="sK/3d+v9":\'\';B 17=o.K.8L();if(L(v.uP)){17=v.uP}B 4x=1t 5o.3n.K.Hz(17,jI);4x.5c=1t 5o.3n.K.Hq();4x.5c.Hw=5o.3n.K.Hu.Hs;B bI=[];if(L(o.9A)&&L(o.8h)&&v.2W.lf==1){4x.Hr=pA();V(B i in o.9A){if(o.9A[i].O(\'tJ\')>0){B t=1t 5o.3n.K.EJ(0,5o.3n.K.EN.EP);t.F3=o.9A[i];t.ET=\'1u/tJ\';t.Er=\'Ey\';t.5L=o.8S[i];t.Ex=2z(i);t.Es=1X;bI.2R(t)}}if(bI.S>0){4x.bI=bI}}if(v.1U){4x.5c.Fx=[1t 5o.3n.w7(v.1U)]}4x.5c.22=o.8I?o.8I:(v.22?v.22:\'\');B aY=1t 5o.3n.K.FE(4x);aY.6v=o.2m>0?o.2m:(o.3I?0:o.K.Z());aY.2J=o.1r||x==H;if(bI.S>0&&o.8h>-1){if(o.8h<bI.S){aY.FF=[2z(o.8h)];6p(\'3Z \'+o.8h)}}q0.FG(aY).8m(E(){jG=q0.FM().FU;6p("pk to "+jG);if(v.2W.7k!=0&&!o.3I){7V?o.1I.3u(7V):\'\';7V=1V("2k");Q(7V,{"1n":"2g","1g":"pH","1c":"1v%","1a":0,"1J":0.7,"1S":"#9m","4s-2y":"1Q"});7V.2w=\'<7L>\'+3Q("sT")+\' &Fn;\'+jG+\'&Fr;</7L>\';o.1I.1R(7V)}2t.pn=v.1F;5b.uw();if(o.2Q&&!2t.jz){5b.po()}js("Fs");if(x!=H){if(!o.1r){!2t.f2?5b.pq():\'\'}F{o.K.2x()}}1j(o.2I);o.3I=H},E(e){6p(e);k9();o.7g.6K(3Q("sY"))})}E k9(){7V?o.1I.3u(7V):\'\';7V=1M;o.3I=I;1m(o.2I);js("Fq");if(2t.q4){o.U.3a(2t.q4.6v);if(2t.q4.f2){o.K.2x()}F{o.K.2i()}}}E sW(){if(2t.f2){6p("3y");js("Ez");o.R.2x()}F{6p("1r");js("EC");o.R.2i()}}E sR(){o.U.3m(2t.pn)}E tq(){2t.jz?o.U.4n():o.U.4D()}E ve(){if(2t.6g){if(2t.uB==1X){if(2t.6v==2t.1e){o.R.2x();o.K.7P()}}}}E tT(){6p("1b "+v.id);5b=1t 3n.6a.EZ(2t);5b.1T(3n.6a.fx.EY,t0);5b.1T(3n.6a.fx.EO,sW);5b.1T(3n.6a.fx.EL,sR);5b.1T(3n.6a.fx.If,tq);5b.1T(3n.6a.fx.L3,ve)}nR(\'v6.5V/cv\',\'bW://5v.v6.5V/cv/js/L9/v1/Lc.js?Ld=1\');E 6p(x){if(v.2W&&v.1p==1){1p("2W",x)}}G.au=E(x){g0=x;J"<au is=\'ut-3n-au\' id=\'nH"+v.id+"\' C=\'3N:0;1c:pH;1d:pH;--pk-1S:"+x+";--Lk-1S:"+x+";3q:0;2u:9r;4s-2y:2V;9g:4s\'></au>"};G.Ca=E(x,y){if(g0!=y){B el=1H.6M("nH"+v.id);if(el){B C=el.BT("C");B 6H=1t Ln(g0,"gi");C=C.1N(6H,y);el.4U("C",C)}g0=y}};G.3m=E(x){if(2t.6g){2t.pn=x;5b.uw()}};G.4n=E(){if(2t.6g){if(!2t.jz){5b.po()}}};G.4D=E(){if(2t.6g){if(2t.jz){5b.po()}}};G.2i=E(x){if(2t.6g){if(2t.f2){5b.pq()}F{if(2t.uB==1X){}}}};G.2x=E(x){if(2t.6g&&!2t.f2){5b.pq()}};G.7M=E(){if(v.2W.lf==1){uF()}};E uF(){if(2t.6g){B ss=pA();B aY=1t 5o.3n.K.Kx([2z(o.8h)],ss);3n.6a.pt.pu().ur().KF().K[0].KK(aY,E(){6p(\'3Z \'+o.8h)},E(e){6p(\'3Z 28\'+e)})}}E pA(){B x=1t 5o.3n.K.Lv();B 5i=2h.4P(v.iO*eY).4F(16);x.aE=3p(v.iN)+(5i.S==1?5i+\'0\':5i);x.Md=\'#Me\';x.Mg=\'Mh\';x.kw=\'Mi\';x.Mk=3i(2z(v.iy)/1v);x.Ml=3p(v.iJ)+2h.4P(eY).4F(16);J x};G.3w=E(x){B x;if(2t.6g){x=2t.6v}J x};G.3k=E(x){B x;if(2t.6g){x=2t.1e}J x};G.o8=E(){if(3n&&3n.6a){k9()}};G.Go=E(){if(3n&&3n.6a){if(2t.6g){pD(o.1r)}}};G.3a=E(x){if(2t.6g){2t.6v=x;5b.3x()}}};B yM=E(1b,bg,C){B 1i=1V("2k");B cu;1b.1R(1i);Q(1i,{"1n":"2g","1g":(-bg.2D/2)-1,"2u-1S":3p(3f(C.Mu,"#Mv")),"3q-Mw":1,"2o":"1Q","cR":"1Q"});if(C.ke==1&&C.v7){cu=C.v7.2f(",");Q(1i,{"5j-4a":8,"1S":"#9m","3N":"q5 q5 0 q5","2A-1d":"1"})}F{C.ke=0;Q(1i,{"1d":9,"1c":13,"2u-7l":"17(21:7l/2N+v9;cm,MB=)"})}G.d6=E(){B y=0;B x=o.K.ls();x=x.1N(3Q("2V")+\' \',\'\');if(x){if(C.ke!=1){if(x==\'HD\'||x.O(\' HD\')>0||x.O(\'hd\')==0||x.O(\'Hd\')==0){x=\'wT\'}}if(x.O(\' \')>0){x=x.1C(0,x.O(\' \'))}y=2z(x)}B t=\'-1\';B z;if(C.ke==1){t=\'\';V(B i=0;i<cu.S;i++){B kd=cu[i].2f(":");if(kd.S==2){if(46(kd[0])==y){t=46(kd[1])}}}if(t==\'\'){if(y>kc){z=H;1i.2w="HD"}}F{z=H;1i.2w=t}}F{if(y>kc){z=H}}if(z){5D(1i);if(bg.1W-1i.1W>0){Q(1i,{"1a":(bg.1W-1i.1W)/2-2})}}F{3t(1i)}}};E sq(x){if((x=="cs"||x=="hH")&&L(v[x])){if(v.vc>0){if(o.va>=v.vc){J I}}B y=v[x];if(y!=""){1p("Ly");o.3e=(x=="cs"?"5x":"gQ");B or=y.2f(" or ");if(or.S>1){B vg=2h.62(2h.4E()*or.S);y=or[vg]}B z=y.2f(" 9Z ");B no=[\'9k\',\'2a\',\'qc\',\'tv\',\'lg\',\'uR\'];V(B i=0;i<z.S;i++){V(B j=0;j<no.S;j++){if(z[i].O(\'[vh\'+no[j]+\']\')>-1){z[i]=z[i].1N(\'[vh\'+no[j]+\']\',\'\');if(o.1k[no[j]]){z[i]=\'\'}}}}if(z[0].O("3V.5V")>0||z[0].O("es.be")>0){z[0]=\'\'}B ok=I;o.rN=1;if(z[0]!=\'\'){o.ip=z.S;o.rT=1;B vv={xc:x,29:0,2y:[],qw:{R:0},3g:z[0],ri:I};if(v.vk>-1){vv.qw.R=1;vv.qw.LX=0;vv.v3=0}if(v.LZ==1){v[x.6x("4j","do")]=v[x];v["4I".6x(x,"4j","rE")]=99}ok=H;v[x]=1X;o.1O=1t hS();o.1O.Go(vv)}if(z.S>0){z.tQ();v[x]=z.kP(\' 9Z \')}if(!ok){o.U.8n()}J H}F{v[x]=1X}}J I};B ax=E(x){B dA;B Lx;B 2p;B 3L;B 3D;B k2;B cB=0;B k4;B qA=I;B qB;if(x.me!=1M&&x.mc!=1M&&x.1A!=1M&&x.to!=1M){if(x.Z==1X){if(x.1A.O("cX")>-1){x.to==0?x.Z=0.5:x.Z=0.2}F{x.Z=0.20}}dA=uN(x.dX);if(x.1A.O("1z")==-1){if(L(o.5B[x.me])){o.5B[x.me].qJ()}o.5B[x.me]=G}if(x.1m==1){x.mc.1L("2o",H)}2p=x.1A.2f(\'|\');3D=5Z(x.to).2f(\'|\');3L=1t g9();V(B i=0;i<2p.S;i++){if(!3D[i]){3D[i]=3D[0]}if(2p[i]=="cX"){3L[i]=x.mc.g("1J")}if(2p[i]=="bB"){3L[i]=x.mc.C.1J}if(2p[i]=="y"){3L[i]=x.mc.g("y")}if(2p[i]=="x"){3L[i]=x.mc.g("x")}if(2p[i]=="1a"){3L[i]=2z(x.mc.C.1a)}if(2p[i]=="1g"){3L[i]=2z(x.mc.C.1g)}if(2p[i]=="1z"){3L[i]=x.mc.g("2E")}if(2p[i]=="gv"){3L[i]=x.mc.kW}if(2p[i]=="uX"){3L[i]=x.mc.ep}if(2p[i]=="2P"){3L[i]=x.mc.g("2P")}if(2p[i]=="2E"){3L[i]=x.mc.g("2E")}if(2p[i]=="1c"){3L[i]=x.mc.g("1c")}if(2p[i]=="uV"){3L[i]=x.mc.1W;3D[i]=2h.62(3D[i]);x.me=="Kq"?1p("1c",x.me,3L[i],3D[i],x.mc.1W):\'\'}if(2p[i]=="1d"){3L[i]=x.mc.g("1d")}if(2p[i]=="uU"){3L[i]=x.mc.2D}3D[i]=uZ(3D[i]);3L[i]=uZ(3L[i])}k4=x.Z*2c/dA.S;k2=dA.S;if(2p.S==1&&3L[0]==3D[0]){7E()}F{1B(k1,2h.4P(k4))}}E k1(){V(B i=0;i<2p.S;i++){B 1K=3L[i]+(3D[i]-3L[i])*(dA[cB]?dA[cB]:0);qv(2p[i],1K);if(2p[i]=="y"){x.mc.1L("1g",1K)}if(2p[i]=="x"){x.mc.1L("1a",1K)}if(2p[i]=="1a"){x.mc.C.1a=1K+"px"}if(2p[i]=="1g"){x.mc.C.1g=1K+"px"}if(2p[i]=="1z"){x.mc.1L("1z",1K)}if(2p[i]=="2P"){x.mc.1L("2P",1K)}if(2p[i]=="2E"){x.mc.1L("2E",1K)}if(2p[i]=="gv"){x.mc.kW=1K}if(2p[i]=="uX"){x.mc.ep=1K}if(2p[i]=="1c"){x.mc.1L("1c",1K)}if(2p[i]=="uV"){Q(x.mc,{"1c":1K})}if(2p[i]=="1d"){x.mc.1L("1d",1K)}if(2p[i]=="uU"){Q(x.mc,{"1d":1K})}}cB++;if(!qA){if(cB==k2){7E()}F{qB=1B(k1,2h.4P(k4))}}}E 7E(){qA=H;if(x.1j){if(2p[0]=="bB"||2p[0]=="1a"){1j(x.mc)}F{x.mc.1L("2o",I)}}if(x.1A.O("1z")==-1){o.5B[x.me]=1X;3R o.5B[x.me]}V(B i=0;i<2p.S;i++){qv(2p[i],3D[i])}2F(qB)};E qv(y,z){if(y=="cX"){x.mc.1L("1J",z)}if(y=="bB"){x.mc.C.1J=z}}G.qJ=E(){7E()};G.ww=E(){cB=k2-1;k1();7E()};G.Df=E(x0,x1,y0,y1){B e=I;V(B i=0;i<2p.S;i++){if(2p[i]==\'x\'&&x0!=x1){e=H}if(2p[i]==\'y\'&&y0!=y1){e=H}}e?7E():\'\'};E uN(uL){9z(uL){1o"IA":J[0,0.IG,0.IH,1.II,1.UJ,1.Jk,1.xP,0.JX,0.JY,0.87,0.K1,0.K2,1.K5,1.K7,1.K8,1.Ka,0.Ki,0.Js,0.Jv,0.Jw,1.JA,1.tZ,1.JB,1.tZ,1.JI,0.oA,0.jr,0.jr,0.jr,0.jr,1];1h;1o"CV":J[0,0.FY,0.Lq,0.JR,0.JQ,0.JP,0.JO,0.JN,0.JM,0.JL,0.JK,0.JJ,0.JH,0.JG,0.JF,0.JE,0.JC,0.Jn,0.tY,0.95,0.Jz,0.Jy,0.Jx,0.Ju,0.99,0.Jt,0.Jr,0.oA,1];1h;6m:J[0,0.Jq,0.32,0.44,0.52,0.6,0.67,0.73,0.JS,0.82,0.85,0.JD,0.JT,0.tY,0.95,0.97,0.Kp,0.Ko,1];1h}}};B zC=E(){B N=6D.Kn,ua=6D.Km,qI;B M=ua.qG(/(iS|5o|6X|tj|ti)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);B M=ua.qG(/(iS|5o|6X|tj|ti|Kj|j7)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);if(M&&(qI=ua.qG(/7a\\/([\\.\\d]+)/i))!=1X)M[2]=qI[1];B iQ=6D.t9;G.ap=M?M[1]:N;G.7a=M?M[2]:6D.Ke;G.cn=6D.t9>1;G.iS=G.ap=="Kc";G.qZ=G.ap=="t8 9.0";G.ie=G.ap=="t8"||G.ap=="JV"||G.ap=="K9";G.j7=ua.aj(/(j7)\\/?\\s*/i)>-1;G.ff=G.ap=="K6";G.6X=G.ap=="K3";G.5o=1G.5o;G.l4=ua.aj("K0 NT")>-1;G.4f=(ua.aj(/(6w|f0|JW)\\/?\\s*/i)>-1)||(6D.JU===\'Jl\'&&iQ>1);G.tv=v.t7!=1&&ua.aj(/(TV|IK|IJ|IF|IE|ID|IC|IB)\\/?\\s*/i)>-1;G.lg=v.t7!=1&&ua.aj(/(LG)\\/?\\s*/i)>-1;G.6w=ua.aj(/(6w)\\/?\\s*/i)>-1;G.f0=G.4f&&!G.6w;G.3r=\'It\'in 1H.l3.C;if(ua.aj(/(a9)\\/?\\s*/i)>-1){iQ>0?G.a9=H:G.tv=H;if(Is(\'(4s:Ir)\').Iq){G.tv=H}}G.2a=(G.4f||G.a9||(ua.aj(/(Io|In|iS la)\\/?\\s*/i)>-1))&&!G.tv;G.Im=G.6X||G.5o;G.1P=I;if(G.4f){G.Ik=3i(ua.1C(ua.O(\'OS \')+3,4).1N(\'4j\',\'.\'));if(G.f0&&(!\'yV\'in 1G||iQ<2)){G.2a=G.4f=I;G.tv=H}}G.9k=!G.2a;G.qc=G.2a||G.tv;G.Ix=G.3r&&G.9k;if(o.1I.oH||o.1I.oG||o.1I.oz||o.1I.oK||o.1I.oP){G.1P=H}};E 8F(3X,5M){V(B s in 5M){if(1D(5M[s])==\'3c\'){if(s=="2y"||s=="3g"){3X[s]=5M[s]}F{V(B s2 in 5M[s]){if(1D(3X[s])!=\'3c\'){3X[s]={}}if(1D(5M[s][s2])==\'3c\'){V(B s3 in 5M[s][s2]){if(1D(3X[s][s2])!=\'3c\'){3X[s][s2]={}}if(1D(5M[s][s2][s3])==\'3c\'){V(B s4 in 5M[s][s2][s3]){if(1D(3X[s][s2][s3])!=\'3c\'){3X[s][s2][s3]={}}3X[s][s2][s3][s4]=5M[s][s2][s3][s4];if(s3==\'3N\'||s3==\'2S\'){3X[s][s2][s3][s4]=2z(3X[s][s2][s3][s4])}}}F{3X[s][s2][s3]=5M[s][s2][s3];if(s2==\'3N\'||s2==\'2S\'){3X[s][s2][s3]=2z(3X[s][s2][s3])}}}}F{3X[s][s2]=5M[s][s2];if(s==\'3N\'||s==\'2S\'){3X[s][s2]=2z(3X[s][s2])}}}}}F{if(s.O("J5")>0&&46(5M[s])===""){}F{3X[s]=oB(s,5M[s])}}}J 3X};B oB=E(X,6Y){if(1D(6Y)==\'4H\'){6Y=46(6Y);if(X.O("1S")>-1&&6Y!=-1){6Y=3p(6Y)}}J 6Y};E Aq(){33{B 4S=1G[\'3F\'],x=\'Jh\';4S.8q(x,x);4S.mB(x);J H}2v(e){J I}};E nk(bG){if(bG){if(L(o.5B[bG])){o.5B[bG].qJ()}}};B 3Q=E(x){B y=x;if(y){y=x.59(0).Jf()+x.5k(1);if(y.O("4j")>-1){y=y.1N(/4j/ig," ")}}B en={"of":"of","fL":"fL","sT":"sN on sO","sY":"sN 28 on sO","J8":"J7 at J6","6N":"ki","J4":"No","J3":"J2","J1":"IZ","IY":"IX","kb":"IW 2S","qK":"IU yY","qL":"IT","iO":"8i 1J","iN":"8i 1S","iy":"q9 4a","iJ":"q9 1S","qr":"q9 1S 2","qa":"3w tQ","tO":"M1","aZ":"M0","MC":"LY to LW","xC":"LV","mL":"LU","mO":"LT","mM":"tK","xF":"tK","mJ":"HD","mH":"LS HD","LR":"LQ HD","mF":"LO HD","na":"LM HD 4K","LJ":"Ad","LH":"Go to LF LE\'s LD","b4":"LC","4u":"LB","1P":"LA 1P","Du":"o8 1P"};if(L(en[x])){y=en[x]}if(L(o[\'qb\'+v.iE])){if(L(o[\'qb\'+v.iE][x])){y=o[\'qb\'+v.iE][x]}}if(v.qe){if(v.qe[x]){y=v.qe[x]}}J y};B 96=E(x,y,z){if(!L(o.ek[y])&&v.mp!=1){B t=o.8I?o.8I:(v.22?v.22:\'\');L(v.6z)?t=v.6z:\'\';if(v.tB[x]==1&&v.vD==1&&L(v.fV)){if(x=="6e"){7J(tu,MA)}if(L(1G["iA"+v.fV])){1G["iA"+v.fV].ts(\'qg\'+x,{22:t});1p("tA",\'qg\'+x)}F{1p("tA Mx 28")}}if(v.tz[x]==1){if(v.ga==1){B an;if(v.BJ==1){if(1G.y4){an={\'6z\':t};if(v.fX){if(1D(v.fX)=="3c"){V(B g in v.fX){if(v.fX.2e(g)){an[g]=v.fX[g]}}}}y4(\'1q\',\'qg\'+x,an)}}F{if(1G.ga){an={Bs:\'Bt\',Bv:y};if(t!=\'\'){an.BH=t}if(v.M7==1&&!o.al){an.Mj=1}ga(\'ol.bs\',\'1q\',an)}}}}}z?o.ek[y]=H:\'\'};E tu(){if(L(1G["iA"+v.fV])){1G["iA"+v.fV].ts(\'Mb\')}};B wK=E(17){B x=\'\';17=17.1N("v=","{=");if(17){if(17.O(\'es.be/\')>-1){x=17.1C(17.O(".be/")+4);x.1N("/","")}F{x=17.2f(/(es.be\\/|v\\/|xK\\/|Ma\\?|3V.M9\\/ol\\/[^#]*#([^\\/]*?\\/)*)\\??{?=?([^#\\&\\?]*)/)[3]}if(x!=\'\'){if(x.O("?t=")>0){v.1y=x.1C(x.O("?t=")+3);B h=0;B m=0;B s=0;if(v.1y.O("h")>0){h=v.1y.1C(0,v.1y.O("h"));v.1y=v.1y.1C(v.1y.O("h")+1)}if(v.1y.O("m")>0){m=v.1y.1C(0,v.1y.O("m"));v.1y=v.1y.1C(v.1y.O("m")+1)}if(v.1y.O("s")>0){s=v.1y.1C(0,v.1y.O("s"));v.1y=v.1y.1C(v.1y.O("s")+1)}if(h>0||m>0||s>0){v.1y=h*yd+m*60+s*1}x=x.1C(0,x.O("?"))}}}J x};B js=E(x,y,li,ev){if(x=="6e"){o.6e=H}if(ev==1){V(B yi in y){if(y.2e(yi)){if(1D(y[yi])=="3c"){y[yi]=\'\'}}}}if(v.jl==1&&o.6e){if(v.M8==1||li==1){lY(x,y)}F{if(y!=1M){if(1D(y)==\'3c\'){33{y=43.nU(y)}2v(e){}}F{if(1D(y)==\'4H\'){y=y.1N(/\'/ig,\'â€²\')}}}if(1D(v.2y)==\'4H\'){if(v.2y.O("{")==0){33{v.2y=v.2y.1N(/\\\'/ig,\'"\');v.2y=43.5h(v.2y)}2v(e){bF.1p(e)}}}if(1D(v.2y)==\'3c\'){if(L(v.2y[x])||L(v.2y[\'q8\'])){B z=x;if(!L(v.2y[x])&&L(v.2y[\'q8\'])){z=\'q8\'}if(x.O("4I")==0){if(L(v.2y[\'1O\'])){z=\'1O\'}}33{if(y!==1M){6f(v.2y[z]+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{6f(v.2y[z]+"(\'"+x+"\',\'"+v.id+"\')")}}2v(e){1p("2y",e,x)}}}F{if(v.2y==\'\'){v.2y="wV"}33{if(y!==1M){6f(v.2y+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{6f(v.2y+"(\'"+x+"\',\'"+v.id+"\')")}}2v(e){1p("2y",e,x,y)}}}}if(o.6e&&v.wA==1){if(o.xn){33{o.xn.eu.lj({1q:x,4x:y},"*")}2v(e){}}}if(v.BB==1&&li!==1){B zv={1q:x,Z:o.K?(x=="3x"?o.vx:o.K.Z()):0};if(y!=1M){zv["21"]=y}if(x=="1e"||x=="Z"){zv["1e"]=o.K.1e()}if(x=="1F"||x=="8x"){zv["1F"]=v.1F}if(x=="1t"){zv["id"]=3l("wX")}1G.7I.lj(zv,\'*\');B z=x;x=="6e"||x=="1y"||x=="4l"?z=x+"ed":\'\';x=="1r"?z="KU":\'\';x=="3y"?z="a6":\'\';x=="4y"?z="2Q":\'\';x=="8x"?z="KS":\'\';x=="3x"?z="KR":\'\';x=="KQ"?z="KP":\'\';zv["1q"]=z;if(z!=\'\'&&z!=x){zv=43.5h(43.nU(zv));1G.7I.lj(zv,\'*\')}}};B lY=E(x,y){B ev=1H.KN(\'5G\');if(y!==1M){ev.4x=y}ev.KM(x,H,H);o.26.KL(ev)};G.1q=E(x,y){o.2y[x]=y};G.2U=E(x,y,P){v.KH==1?1p(\'2U\',x,y):\'\';J 3l(x,y,P)};E 3l(x,y,P){if(L(o.U)&&1D(x)==\'4H\'){if(o.oo==1){J}if(P){if(1D(P)==\'4H\'){if(P.O("id:")==0){P=o.R.qq(P.1C(3),"3T");if(P){if(x=="au"&&y=="Kt"){P.zt()}}}}}if(x=="1r"||x=="3g"){if(L(y)){B 8N=I;if(1D(y)==\'4H\'){y=y.1N(/(\\r\\n|\\n|\\r)/gm,"");B 2m=-1;if(y.O("[3x:")>-1&&y.KG("]")==y.S-1){2m=y.1C(y.O("[3x:")+6,y.S-1);2m=2z(2m.1C(0,2m.S-1));y=y.1C(0,y.O("[3x:"));if(y==\'\'){o.U.3a(2m);o.U.2i();J}F{o.2m=2m}}if(y.O("[xo]")>-1){8N=H;y=y.1N(\'[xo]\',\'\')}if(y.O("#"+v.az)==0){y=o[o.fd[0]](y)}if(y.O("#"+v.dJ)==0&&y.O(v.fn)>0){y=o[o.fd[1]](y)}if(y.O("#0")==0){y=dP(y)}if(v.9T==1){y=9T(y)}if(y.O(".6K")==y.S-4){B 4t=fZ(y);4t.dI=E(){if(G.fa==4&&G.5W==54){33{3l(\'1r\',43.5h(G.dz))}2v(e){}}};4t.bs();J}if(y.O("id:")==0&&L(o.2Y)){B z=x8(y);if(L(o.2Y[z])){o.R.AB(z);2m>-1?o.2m=2m:\'\';J H}F{J I}}if(y.O("KE:")==0){B z=y.1C(10);if(o.2b=="3V"){o.K.xt(z);J H}F{y=\'//es.be/\'+z}}}if(x=="1r"){o.R.AC();o.U.gc(y,1M,1M,(8N?1:0))}if(x=="3g"){o.kC=H;v.2J=0;o.U.gc(y,1,1M,(8N?1:0));o.R.3k(0,0);o.1y=I}}F{if(x=="1r"){o.U.2i()}if(x=="3g"){1D xp==\'E\'?xp():\'\'}}}if(x=="4k"){if(L(y)){o.kC=H;o.U.gc(y,1,1)}F{o.K.mY()}}if(x=="3y"){if(o.1r){o.U.2x();o.U.sl()}}if(x=="vy"&&L(y)){o.1y&&o.8j?o.8j.KD(y):\'\'}if(x.O("KC")==0){if(o.1O){o.1O.KB(x.1C(6),y)}}if(x=="7g"){o.7g.kK();o.7g=1t pG();if(L(y)){o.7g.6K(y)}F{if(v.tH==1){o.7g.6K(v.tr)}F{o.7g.6K("KA 7k")}if(v.uu==1&&L(v.uI)){o.bo=1t ub()}}}if(x=="6t"){!o.1y?o.R.nA():\'\';o.R.7s();o.R.At("r7")}if(x=="d6"){o.1r?o.U.2x():o.U.2i()}if(x=="2j"){v.4k=0;v.2J=0;o.K.kH();o.U.8B()}if(x=="6S"){o.Z=o.K.Z();o.U.c0()}if(x=="8p"){if(v.8V){if(v.8V.on==1&&v.8V.Kw==1){o.U.j1()}}}if(x=="m1"&&L(y)){if(o.4Q){o.4Q.2U(y)}}if(x=="3C"){o.R.Ea()}if(x=="Ku"&&L(y)){if(v.1O==1){if(y.O(\'js:\')==0){v.5a=y;v.eE=H;o.U.sJ("5a")}F{if(o.p!=\'\'){B sv=43.5h(aK(o.p));V(B l in sv){if(sv.2e(l)){if(L(sv[l].id)){if(y==sv[l].id){v.5a=\'KY\'+(L(sv[l][\'qj\'])?\'qj\'+sv[l][\'qj\']:\'\')+y+\'4j\'+sv[l].5x;v.eE=H;o.U.sJ("5a")}}}}}}}}if(x=="Ls"){1D xq=="E"?xq(y):\'\'}if(x=="xr"&&y){v.xr=y;o.2O?o.2O.Lp():\'\'}if(x=="4y"){o.U.4n()}if(x=="6b"){if(L(y)){o.U.aB(y)}F{J o.4V[o.9e]}}if(x=="oh"){if(v.8V&&o.91){if(v.8V.91==1){J 2h.4P((o.91.7X(Lo).S-1)/2h.4P(o.K.1e())*1v)}}}if(x=="eZ"){J o.4V}if(x=="8x"){o.U.4D()}if(x=="wU"){if(L(y)){v[x]=y;o.U.ge()}}if(x=="9X"){J o.2T}if(x=="vW"){J o.ab?H:I}if(x=="4u"){J o.K?o.K.5e():I}if(x=="Dl"){J v.xs==1?o.8S.5k(0,-1):o.8S}if(x=="cK"){J o.8E}if(x.O("3Z:")==0&&y){v[x.1N(\'22:\',\'4j\')]=y;o.U.sl()}if(x=="Lm"){J o.eh}if(x=="8Y"){J o.6c}if(x=="1F"||x=="Ll"){if(L(y)){if(1D y=="4H"){if(y.O("+")==0){y=v.1F+3i(y.1C(1))}F{if(y.O("-")==0){y=v.1F-3i(y.1C(1))}}}if(y>=0&&y<=1){o.U.3m(y)}}J o.2Q?0:v.1F}if(x=="2Q"){J L(o.2Q)?o.2Q:I}if(x=="Lj"){o.R?o.R.Ay(y):\'\'}if(x=="kj"){y<2?y=\'\':\'\';if(2G(o[\'u\'+y])){B x2=43.5h(aK(o[\'u\'+y]));B v2=[];V(B l in v){if(v.2e(l)){if(l.O("hl")==0){v[l]=1X}}}if(1D x2=="3c"){V(B k in x2){if(x2.2e(k)){if(k.O("hl")==0){v[k]=x2[k]}if(k=="1l"){v2[k]=x2[k]}}}}v=8F(v,v2);B ql=I;if(o.R.ar()){o.R.6q();ql=H}B qm=I;if(o.R.eC()){o.R.a4();qm=H}o.R.4G();o.R=1X;o.R=1t qz();if(o.K.5W()=="8X"){o.R.2i()}o.R.3m(v.1F);if(L(v.22)){9S(v.22)}if(ql){o.R.6q()}if(qm){o.R.a4()}if(o.1P){o.R.7C()}if(X!=\'zj\'){o.R.3k(o.K.Z(),o.K.1e())}8H()}}if(x=="qP"){J v.qP}if(x=="3S"){o.R.3S(H)}if(x=="Le"){o.R.Ef()}if(x=="El"){8H()}if(x=="3x"){if(L(y)){if(1D y=="4H"){if(y.O("%")>-1){y=2z(y.1C(0,y.O("%")));y=o.K.1e()*y/1v}F{B jn=o.K.Z();if(o.2O&&!o.1y){if(!o.2O.iP){B f=o.2O.8R();if(f.t&&f.d){jn=f.t;o.2O.iP=H}}}if(y.O("+")==0){y=jn+3i(y.1C(1))}F{if(y.O("-")==0){y=jn-3i(y.1C(1))}}}}y=y*1;y<0?y=0:\'\';if(o.K.1e()>0){y>o.K.1e()?y=0:\'\'}if(!L(o.1O)&&!L(o.4B)&&o.K.1e()>0){o.2m=1M;o.U.3a(y,H);o.U.mn()}F{o.2m=y}}}if(x=="1P"){!o.1P?o.U.7C():\'\'}if(x=="su"){o.1P?o.U.6T():\'\'}if(x=="L7"){J o.1P}if(x=="4a"){J o.2C+\'/\'+o.3W}if(x=="L6"){if(L(o.cA)){o.cA.Do()}}if(x=="zS"||x=="Ks"){if(L(o.cA)){o.cA.Un()}}if(x=="Z"||x=="xu"){B fY=o.K?o.K.Z():0;if(o.2O&&v.aN==1&&!o.1y&&fY==0){B f=o.2O.8R();if(f.t){fY=f.t}}J x=="xu"?ci(fY):fY}if(x=="EQ"){if(o.f6){3l("1r","id:"+o.f6)}if(o.xz){3l("3x",o.xz);3l("1r")}}if(x=="1e"){J o.K?o.K.1e():0}if(x=="6y"){J o.K?o.K.8y():0}if(x=="b5"){if(y){v.b5=y;o.R.kO()}}if(x=="8d"){if(L(y)){if(P){v.hd=9f(v.hd,y,P);if(o.2T.S==2){o.U.6G(v.hd)}}F{o.U.6G(y)}}F{J o.K?nv(o.K.ls()):0}}if(x=="b4"){if(L(y)){if(P){v.qp=9f(v.qp,y,P);if(o.6c.S==2){o.U.dy(v.qp)}}F{o.U.dy(y)}}F{J o.K?o.K.wO():0}}if(x=="EU"){J o.2b=="3V"}if(x=="oE"){if(o.5E>0){o.hy=o.5E}o.U.gc(o.3A[o.lp])}if(x=="8X"){J o.1r}if(x=="EX"){J o.1y}if(x=="1k"){J o.1k[y]}if(x=="F1"){o.oo!=1?o.K.n6():\'\'}if(x=="id"){J v.id}if(x=="1p"){v.1p=y}if(x=="jl"){v.jl=y}if(x=="1Z"){o.K.vJ()}if(x=="ED"){o.K.vq();if(P){o.q7=9f(o.q7,y,P)}}if(x=="7z"){o.K.hQ()}if(x=="7y"){o.K.aL()}if(x=="2H"&&v.mp!=1){bF.1p(2H)}if(x=="xD"&&o.2W){o.2W.6e()}if(x=="3Z"){if(L(y)){if(y==\'0/1\'){if(o.cW){o.pg=o.8h;y=-1}F{y=o.pg?o.pg:0}}v.3Z=y;if(y.4F().S<3&&o.4o){o.4o.lC(y*1)}F{o.U.kq(y)}}F{J o.8S?o.8S[o.8h]:\'\'}}if(x=="+3Z"&&v.3Z){if(L(y)){v.3Z+=\',\'+y;o.U.kq(v.3Z)}}if(x=="9P"){if(L(o.9P)){if(L(y)){o.9P.2U(y)}F{J o.9P.F6()}}}if(x=="qH"){if(o.xE){J o.xE}F{J I}}if(x=="7j"){J o.K.7j()}if(x=="5K"){B 5K=1V("2k");5K.id=y;5K.C.4W=Fz;o.1I.1R(5K)}if(x=="DP"){if(o.3Y){B 4r=1V("4r");B 4a=o.K.4a();4r.1c=4a.1c>0?4a.1c:o.8z;4r.1d=4a.1d>0?4a.1d:o.9q;Q(4r,{"1n":"2g","1g":-4r.1d,"1a":-4r.1c,"2o":"1Q"});1H.8o.1R(4r);B 7b=4r.xG(\'2d\');7b.oc(o.K.9d(),0,0,4r.1c,4r.1d);B 8d=2;B fJ=1H.1V("4r");fJ.1c=4r.1c*8d;fJ.1d=4r.1d*8d;B fy=fJ.xG("2d");fy.oc(o.K.9d(),0,0,4r.1c*8d,4r.1d*8d);if(v.FJ==1&&L(v.ob)){!L(v.fD)?v.fD=20:\'\';!L(v.oa)?v.oa="3z":\'\';fy.5j=v.fD+"px FQ, FR";fy.FS=3p(v.oa);fy.F5((v.ob=="gI"?o.gI:v.ob),v.fD,4r.1d*8d-v.fD-5)}7b.oc(fJ,0,0,4r.1c,4r.1d);B 3P;33{3P=4r.Fo("7l/Fm")}2v(e){bF.1p(e.7k);J I}J 3P}F{J I}}if(x=="3d"){J o.2b==x?o.K.kk():1M}if(x=="1w"){J o.2b==x?o.K.kl():1M}if(x=="1U"){if(!o.1r||v.ce===0){o.K.9j(y);J H}F{J I}}if(x=="CY"){if(L(y)){y==\'1/0\'?y=1-3f(v.kh,0):\'\';v.kh=y;o.K.gD()}F{J 3f(v.kh,0)}}if(x=="1z"){if(L(y)){if(y==0){o.K.gD()}F{o.K.1z(y)}}F{J[o.3b.x,o.3b.y,o.2I.C.1a,o.2I.C.1g]}}if(x=="22"){if(L(y)){L(y)?v.22=y:\'\';o.U.9S(\'22\');J H}F{J v.22}}if(x=="Fl"){o.U.vN()}if(x=="2R"){if(y){!o.g8?o.g8=[]:\'\';if(1D(y)==\'3c\'){y=o.g8.6x(y);x="Y"}}}if(x=="Y"){if(y){if(1D(y)==\'3c\'){33{o.U.aX(y);J H}2v(e){J I}}F{if(y.O(".6K")==y.S-4||y.O(".6K?")>0){B 4t=fZ(y);4t.dI=E(){if(G.fa==4&&G.5W==54){33{3l(\'Y\',43.5h(G.dz))}2v(e){}}};4t.bs();J H}F{if(y==\'\'){o.U.aX([])}F{if(y==\'oh\'&&o.eh>0){B 1K=2h.4P(((o.x9+(!o.R.9l("oh")?o.K.Z():0))/o.eh)*1v);if(1K<o.oi||1K>1v){J o.oi}F{o.oi=1K;J 1K}}}}}}}if(x=="5f"){o.R?o.R.af():\'\'}if(x=="aZ"){o.R?o.R.c9():\'\'}if(x=="4R"){o.R?o.R.eS(y):\'\'}if(x=="4R?"){J o.8e?[o.Fi,o.F7]:0}if(x=="cJ"){o.K?o.K.cJ():\'\'}if(x=="io"){if(L(y)&&L(o.2Y)){!o.1r?v.2J=0:\'\';V(B j in o.2Y){if(o.2Y.2e(j)){if(o.2Y[j].cS==y){y=j}}}if(L(o.2Y[y])){o.R.Az(y);J H}F{J I}}}if(x=="Fh"){B 1K=[];if(L(o.2Y)){V(B j in o.2Y){if(o.2Y[j].7i&&o.2Y[j].uS==-1){1K.2R({22:o.2Y[j].22,id:o.2Y[j].id})}}}J 1K}if(x=="wX"){if(o.9J){J o.2Y[o.9J].cS?o.2Y[o.9J].cS:o.9J}}if(x=="Ff"){if(o.2Y){J dB.9V(o.2Y).S}F{J-1}}if(x=="o9"){if(L(o.o9)){J o.o9}}if(x=="Fc"){o.R.eP(y)}if(x=="Fb"){o.K.gq()}if(x=="1l"){if(y=="on"){v.1l.1j=0}F if(y=="fG"){v.1l.1j=1;o.R.dn()}F{o.R.eK()}}if(x=="Fa"){o.R.6q()}if(x=="4M"){o[x]=H}if(x=="F9"){if(o.1O){J H}F{J I}}if(x=="F8"){if(o.1O){J xa()}F{J I}}if(x=="Fj"){if(o.1O){J o.1O.3y()}F{J I}}if(x=="Fw"){if(o.1O){J o.1O.vX()}F{J I}}if(x=="FL"){if(o.1O){o.1O.FW()}F{J I}}if(x=="FV"){if(o.1O){o.1O.4y()}F{J I}}if(x=="4T"){if(P){v.4T=9f(v.4T,y,P);o.K.4T()}F{J v.4T}}if(x=="92"){if(L(P)){v.92=9f(v.92,y,P)}F{if(L(y)){y==\'0/1\'?y=1-v.92:\'\';v.92=y}F{J v.92}}}if(x=="dh"){if(L(P)){v.dh=9f(v.dh,y,P)}F{if(L(y)){v.dh=y}F{J v.dh}}}if(x=="iG"||x=="iI"){B z="fe";x=="iI"?z="iH":"";if(L(P)){v.Y[z]=9f(v.Y[z],y,P)}F{if(L(y)){y==\'0/1\'?y=1-v.Y[z]:\'\';v.Y[z]=y}}J v.Y[z]}if(x=="hd"){if(o.2T.S==2){v.hd=o.2T[o.2K];v.hd=9f(v.hd,y,P);if(o.2T[0]==v.hd){o.U.6G(0)}F{o.U.6G(1)}}}if(x=="v"&&y){if(y.O(\'3g\')==0||y.O(\'bk\')==0){J}J v[y]}if(x.O("bw:")==0){B xx=x.1C(7);if(1D(y)==\'3c\'&&1D(v[xx])==\'3c\'){V(B yy in y){if(y.2e(yy)){v[xx][yy]=y[yy]}}}F{if(x.O(\'BE\')==-1){v[xx]=y}}J H}if(x.O("1u:")==0){o.R.Eq(x.1C(5),y)}if(v.BN==1&&x.O("1S")==0&&y){ja(\'56, 56 > *{--7r\'+x+\':\'+3p(y)+\'}\')}if(x=="FN"){J o.K?o.K.8L():\'\'}if(x=="FK"){J o.7a+\' \'+o.fQ}if(x=="fQ"){J o.fQ}if(x=="mW"){J o.mW}if(x=="x5"){J o.x5}if(x=="5r"){J o.5r}if(x=="FX"){J o.1O?o.xg:1M}if(x=="8G"){o.U.jc();v.1E.on=0;if(v.rQ==1){V(B i=0;i<47.S;i++){if(47[i]){if(47[i].2U("id")==v.id){47[i]=1X}}}}V(B w in 1G){if(1G[w]==o.G){1G[w]=1X}}if(aJ==v.id){aJ=\'\'}o.oo=1;o.26.2w=\'\';o.G=1X}}F{J I}};E 9f(x,y,P){B z=46(y)+\'\';if(y){if(y.O("/")>0){B y2=y.2f("/");if(y2.S==2){if(x==46(y2[0])){z=46(y2[1]);if(P){P.9p(1)}}F{z=46(y2[0]);if(P){P.9p(0)}}}}}J z}E fZ(x){B 4t=1t xV();4t.8f(\'y7\',x,H);J 4t}E x8(y){B z=y.1C(3);if(o.2Y){V(B j in o.2Y){if(o.2Y.2e(j)){if(o.2Y[j].cS==z){z=j}}}}J z}E xa(){B x;if(o.1O){if(o.1O.om()){x=o.1O}}if(!x&&o.4B){x=o.4B}if(x){B y={is:o.3e,1k:x.4x("xc"),7a:x.4x("7a"),F4:x.4x("ri"),17:o.w4+(x.4x("xf")?x.4x("Ev")+x.4x("xf"):\'\'),1A:x.4x("EB"),1e:x.4x("9v"),3g:x.4x("3g"),Z:(o.K?o.K.Z():\'\'),1F:x.EG(),id:o.xg};if(o.3e=="5a"){y.EF=o.F0}J y}}E vU(){if(\'cT\'in 6D){6D.cT.5c=1t EW({22:ym(3f(o.8I,v.22)),EV:[{2q:3f(v.1U,\'\')}]});if(!o.xi){6D.cT.j9(\'1r\',E(){3l("1r")});6D.cT.j9(\'3y\',E(){3l("3y")});if(o.R.dW()){6D.cT.j9(\'ES\',E(){3l("aZ")});6D.cT.j9(\'FZ\',E(){3l("5f")})}o.xi=H}}}B 1V=E(x){B y=x;x==\'2k\'||x==\'og\'?y=\'56\':\'\';B z=1H.1V(y);if(x==\'og\'){Q(z,{"9g":"4s","2o":"6C"})}J z};B 1p=E(a,b,c,d,e,f,g){if(v.1p==1||v.oq==1){B x=a+(b!=1M?" "+b:"")+(c!=1M?" "+c:"")+(d!=1M?" "+d:"")+(e!=1M?" "+e:"")+(f!=1M?" "+f:"")+(g!=1M?" "+g:"");bF.1p("xI"+(v.nY==1?"2":"")+": "+x);if(v.oq==1&&L(1H.6M("yb"))){1H.6M("yb").2w+=x+\'<br/>\'}}};B Bk=E(){if(v.lS==1&&L(v.os)&&v.os!=\'\'){B x=1H.1V(\'dq\');x.Ht=\'Hv\';x.7n=\'bW://lS.HA.5V/Q?pe=\'+v.os.1N(/,/ig,"|").1N(/ /ig,"+");1H.HF.1R(x)}};B Cb=E(2k,6H){B x=["rc","cF","C5","ez","eg","Hy"];V(B y=0;y<x.S;y++){B z=2k.s8("2N "+x[y]);if(z.S>0){V(B y2=0;y2<z.S;y2++){z[y2].C.5N=6H}}}};B pz=E(){if(v.8V){if(v.8V.Ho==1){js("29")}}};B 3w=E(Z){Z<0?Z=0:\'\';B yf=o.K.1e>=fE?H:I;B ye=o.K.1e>=yd?H:I;B 51=2h.62(Z/60);B 5P=2h.62(Z-51*60);B 6E=2h.62(51/60);B f5=2h.62(6E/24);51=51-6E*60;if(f5>0){6E=6E-f5*24}if(v.hG==1&&o.K.5e()){B d=1t 6o();J 5Z(1t 6o(d.aq()+Z*2c).ya())}F{J 5Z((f5>0?f5+\':\':\'\')+(6E>0||ye?6E+\':\':\'\')+((6E>0||yf)&&51<10?\'0\':\'\')+51+\':\'+(5P<10?\'0\':\'\')+5P)}};B ci=E(x){B 5P=2h.62(x);B 51=2h.62(5P/60);B 6E=2h.62(51/60);51=2h.62(51%60);5P=2h.62(5P%60);6E>0&&51<10?51="0"+51:"";5P=5P>=0?((5P>=10)?5P:"0"+5P):"fj";B 8s=(6E>0?6E+":":"")+(51>=0?51:"0")+":"+5P;if(v.hG==1&&o.K.5e()){B d=1t 6o();J 5Z(1t 6o(d.aq()+x*2c).ya())}F{J 8s}};B Ch=E(){J AJ((1G.6L!=1G.7I.6L)?1H.jd:1H.6L.7n)};B nv=E(x){if(x){x=x.4F();B ou=x.O(" <ac C=\'1J");if(ou>-1){x=x.1C(0,ou)}}J x};B nR=E(x,y,z){B t;if(!yn(x)&&y){t=1H.1V(\'j5\');y=="He"?y=x:\'\';t.2q=y.O(\'//\')==-1?\'bW://\'+y:y;t.Hc=1;if(z){t.5L=z}B s=1H.aG(\'j5\')[0];s.4e.Hb(t,s)}J t};B ym=E(x){if(x){x=x.1N(/<[^>]*>?/gm,\'\')}J x};B yn=E(y){B x=I;B j8=1H.aG(\'j5\');V(B i=0;i<j8.S;i++){if(j8[i].2q.O(y)>-1){x=H}}J x};B 7Y=E(x,y){if(x){if(x.O(\'1S\')>-1||x.O(\'B\')>-1){J 3p(x)}F{x=x.1N(\'#\',\'\');B r=2z(x.S==3?x.5k(0,1).cE(2):x.5k(0,2),16);B g=2z(x.S==3?x.5k(1,2).cE(2):x.5k(2,4),16);B b=2z(x.S==3?x.5k(2,3).cE(2):x.5k(4,6),16);if(L(y)){J\'9u(\'+r+\', \'+g+\', \'+b+\', \'+y+\')\'}F{J\'yp(\'+r+\', \'+g+\', \'+b+\')\'}}}};B Q=E(e,o){if(L(e)){V(B X in o){if(o.2e(X)){if(o[X]!=\'I4\'&&o[X]!=1M){if(1D o[X]==\'I5\'&&X!=\'1J\'&&X!=\'4W\'){o[X]+=\'px\'}if(X.O("I7")>-1&&X.O("Bg")==-1){o[X]=3p(o[X])}if(X=="2r"||X.O("kI")>-1){e.C[\'-ms-\'+X]=o[X];e.C[\'-qC-\'+X]=o[X];e.C[\'-3r-\'+X]=o[X];e.C[\'-o-\'+X]=o[X]}if(X=="kw"){if(o[X].O(" ")>-1){o[X]=\'"\'+o[X]+\'"\'}}if(X=="5K-j0"){e.C.I9(X,o[X],\'6W\')}F{e.C[X]=o[X]}}}}}};B so=E(x,6H,b1,b2){6H=3p(6H);B y=3f(b1,1)*1;B z=3f(b2,1)*1;Q(x,{"2u":"Ia-3B-5w(-Ib,"+6H+","+6H+" "+y+"px,9u(0,0,0,0),"+y+"px,9u(0,0,0,0) "+(y+z)+"px)"})};B 3p=E(c){if(c){c.O("1S")==0?c=\'B(--7r\'+c+\')\':\'\';J c.1C(0,1)!=\'#\'&&c.O("B")==-1&&c.O("yp")==-1?c="#"+c:c}F{J\'#9m\'}};B Cc=E(x,1S,y){!1S?1S=\'#9m\':\'\';1S=3p(1S);B r=4E(kA,Ie);x=x.1N(/\\(wd\\)/g,r);x=x.1N(/\\(1S\\)/g,1S);x=x.1N(/\\(et\\)/g,1+(v.I8.1z-1)/2);B yu=x.1C(0,x.O(\'|||\'));B ov=x.1C(x.O(\'|||\')+3);B 8r=\'\';if(o.1k.3r){8r=ov.1N(/4C:/g,"-3r-4C:");8r=8r.1N(/4C-/g,"-3r-4C-");8r=8r.1N(/@yq/g,"@-3r-yq");8r=8r.1N(/2r/g,"-3r-2r")}y?y.2w=yu:\'\';ja(8r+ov)};B 5I=E(x,y,f){B z=I;if(x){V(B i=0;i<x.S;i++){if(x[i]){if(f){if(3i(y)==3i(x[i])){z=i;1h}}F{if(5Z(x[i]).O(y)>-1){z=H}}}}}J z};B ja=E(x){if(o.Q){if(o.Q.y8){o.Q.y8.HW=x}F{o.Q.1R(1H.yQ(x))}}};B sD=E(x){Q(x,{"1n":"2g","1g":0,"1a":0,"1c":"1v%","1d":"1v%"})};B qS=E(x){Q(x,{"cR":"1Q"})};B 4t=E(y,z){B x=1t xV();x.8f(\'y7\',y,H);x.dI=z;x.bs()};B HT=E(x){if(x){V(B i=0;i<5;i++){if(x.HS=="HR"){1h}F{if(x.xM){x=x.xM}}}}J x};B 7w=E(z){B 7w=1H.1V("3P");if(o.le.O(z)>-1){o.le.2R(z);if(z.O("?")>0){z=z+\'&\'+2h.4E()}F{z=z+\'?\'+2h.4E()}}F{o.le.2R(z)}7w.4U(\'2q\',z);7w.4U(\'1d\',\'8Q\');7w.4U(\'1c\',\'8Q\')};B 41=E(e,o){V(B X in o){if(o.2e(X)){e.4U(X,o[X])}}};B 8G=E(e){if(e){33{e.4e.3u(e);e=1X}2v(e){}}};B 4E=E(bD,6B){J 2h.62(HO.S>1?(6B-bD+1)*2h.4E()+bD:(bD+1)*2h.4E())};B iK=E(){J 2h.4E().4F(36).HM(2,12)};B HL=E(x,y){x=dB.9V(x).HK(E(3X,X){if(X!=y){3X[X]=x[X]}J 3X},{});J x};B 46=E(x){if(1D x=="4H"){J x.1N(/^\\s+|\\s+$/gm,\'\')}F{J x}};B 4R=E(x,y,z){B r=I;if(x){if(x.O(y)>-1){B r=x.1C(x.O(y)+y.S);if(z){if(r.O(z)>-1){r=r.1C(0,r.O(z))}}}}J r};B Gy=E(x,n){if(n==0){J"#0"+a0.e(x)}if(n==-1){J a0.e(x)}if(n==1){J"#1"+nP(a0.e(x),1)}};B pE=E(x){if(v[x]!=""){if(1D v[x]!="4H"){o[x+\'o\']=v[x]}F{if(v[x].O("[{")==0){33{v[x]=v[x].1N(/7r\'qt/ig,\'"\');o[x+\'o\']=6f(v[x])}2v(e){}}}}};B 4L=E(x){J 5Z.o6(x)};B aK=E(x){if(x.1C(0,2)=="#1"){J a0.d(nP(x.1C(2),-1))}F if(x.1C(0,2)=="#0"){J a0.d(x.1C(2))}F{J x}};B pV=E(x){if(x){if(x.O(\'4J\')==-1&&x.O(\'.\')==-1&&x.S>1v&&x.O(\'21:\')==-1){x=\'21:7l/oX;cm,\'+x}}J x};B 1j=E(x){x?x.C.5r="3o":\'\'};B 1m=E(x){x?x.C.5r="3H":\'\'};B 3t=E(x){x?x.C.2o="1Q":\'\'};B 5D=E(x){x?x.C.2o="6C":\'\'};B 5U=E(x){J x?x.C.5r!="3o"&&x.C.2o!="1Q":I};B 4X=E(s){if(1D s=="4H"){if(s.O("px")>0){s=s.1C(0,s.O("px"))}}J 2z(s)};B 3o=E(x){J x.C.2o=="1Q"};B 4d=E(o,x,y){o[x+\'1g\']=0;o[x+\'2M\']=0;o[x+\'3v\']=0;o[x+\'1a\']=0;if(L(o[y])){B z=o[y].2f(" ");if(z.S==4){o[x+\'1g\']=z[0]?3i(z[0]):0;o[x+\'2M\']=z[1]?3i(z[1]):0;o[x+\'3v\']=z[2]?3i(z[2]):0;o[x+\'1a\']=z[3]?3i(z[3]):0}}J o};B H5=E(x){if(x){x=x.1N(/ /ig,\'px \')}J x+\'px\'};B Gv=E(x,y){J v[x]&&v[x]!=\'\'?v[x]:y};B bP=5Z.o6(65,66,67,68,69,70,71,72,73,74,75,76,77,97,98,99,1v,Gh,xP,Gf,Ge,Gd,Gb,Ga,G9,G7,78,79,80,81,82,83,84,85,86,87,88,89,90,GP,GR,GS,GT,GU,GV,GW,GX,GZ,H0,pF,H1,H2);B a0={8v:bP+"H3+/=",e:E(e){B t="";B n,r,i,s,o,u,a;B f=0;e=a0.xQ(e);ln(f<e.S){n=e.8k(f++);r=e.8k(f++);i=e.8k(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(m8(r)){u=a=64}F if(m8(i)){a=64}t=t+G.8v.59(s)+G.8v.59(o)+G.8v.59(u)+G.8v.59(a)}J t},d:E(e){B t="";B n,r,i;B s,o,u,a;B f=0;e=e.1N(/[^A-xU-z0-9\\+\\/\\=]/g,"");ln(f<e.S){s=G.8v.O(e.59(f++));o=G.8v.O(e.59(f++));u=G.8v.O(e.59(f++));a=G.8v.O(e.59(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+4L(n);if(u!=64){t=t+4L(r)}if(a!=64){t=t+4L(i)}}t=a0.xS(t);J t},xQ:E(e){e=e.1N(/\\r\\n/g,"\\n");B t="";V(B n=0;n<e.S;n++){B r=e.8k(n);if(r<gB){t+=4L(r)}F if(r>GO&&r<Gz){t+=4L(r>>6|GL);t+=4L(r&63|gB)}F{t+=4L(r>>12|xT);t+=4L(r>>6&63|gB);t+=4L(r&63|gB)}}J t},xS:E(e){B t="";B n=0;B r=0;B c1=0;B c2=0;ln(n<e.S){r=e.8k(n);if(r<gB){t+=4L(r);n++}F if(r>GC&&r<xT){c2=e.8k(n+1);t+=4L((r&31)<<6|c2&63);n+=2}F{c2=e.8k(n+1);c3=e.8k(n+2);t+=4L((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}J t}};B nP=E(s,n){s=s.1N(/\\+/g,"#");s=s.1N(/#/g,"+");B a=xW(o.y)*n;if(n<0)a+=bP.S/2;B r=bP.1C(a*2)+bP.1C(0,a*2);J s.1N(/[A-xU-z]/g,E(c){J r.59(bP.O(c))})};B xW=E(x){x=x.2f(4L(61));B lm=\'\';B c1=4L(pF);B nT;V(B i in x){if(x.2e(i)){B nS=\'\';V(B j in x[i]){if(x[i].2e(j)){nS+=(x[i][j]==c1)?4L(49):4L(48)}}nT=2z(nS,2);lm+=4L(nT.4F(10))}}J lm.1C(0,lm.S-1)};B L=E(x){J x!=1X&&1D(x)!=\'1M\'&&x!=\'1M\'};B 3f=E(x,y){J L(x)?x:y};B 2G=E(x){J L(x)&&x!=-1&&x!=\'\'};B rn=E(x,y){J 2G(x)?x:y};B o5=E(x){if(1D x=="3c"){x=43.5h(43.nU(x))}J x};B di=E(el){B x=el.y3().1a+(1G.xY?1G.xY:1G.UP);J x};B fl=E(x){v.Uj==1&&2G(v.xZ)?x=v.xZ:\'\';J x};B fP=E(el){Ue ez=el.y3();J ez.1g+1G.SE};B 7W=E(x,y){if(x!=\'\'){if(v.Sx==1){1G.8f(x)}F{if(v.S9==1){1G.7I.6L.7n=x}F{1G.6L.7n=x}}x=\'\'}};B qo=E(){if(v.3O==1){o.3O?o.1I.3u(o.3O):\'\';o.3O=1X}};B Al=E(){B ix=I;if(o.1k.tv){1p("tv")}G.9S=E(x){o.R?o.R.22(x):\'\'};G.5u=E(x){if(x){if(1D(x)==\'4H\'){x=x.1N(/(\\r\\n|\\n|\\r)/gm,"");if(x.O("[{")==0){33{x=x.1N(/7r\'qt/ig,\'"\');x=43.5h(x)}2v(e){x="tU 43"}}}if(1D(x)==\'3c\'){o.2Y=[];o.g8=o5(x);o.Y=rs(x);if(o.Y.S>0){if(v.Y.RE==1&&!v.5R){B 9V=dB.9V(o.2Y);B nV=9V.5k(-1)[0];nV?v.5R=nV:\'\'}B y=uf();if(y){x=y.3g;o.8I=y.22;o.R?o.R.DY(y.22):\'\';if(L(y.1U)){if(o.K){o.K.9j(y.1U)}F{v.1U=y.1U}}if(L(y.lf)){y.3Z=y.lf}if(L(y.1y)){if(y.1y=="2O"&&!o.1y){}F{v.1y=o.2m=y.1y}}gJ("Tp");if(L(y.id)){o.9J=y.id}B sx=["3Z","qP","xK","17","Te","T9","ij","wU","6z","8p","b5","6u","4l","3R","Wd","hM","6n","8W","1F"];if(L(v.ae)){if(v.ae.T4==1&&v.ae.sC==1){sx.2R("22");sx.2R("t1");sx.2R("t2");sx.2R("t3");sx.2R("t4");sx.2R("t5")}}V(B i=0;i<sx.S;i++){if(L(y[sx[i]])){v[sx[i]]=y[sx[i]]}}l9(y);if(sx.O(\'22\')>0){if(v.ae.DM==1){o.k7=v.ae.DJ;o.U.pU(y)}o.U.9S(\'22\')}if(L(y.1F)){1B(E(){o.U.3m(y.1F)},54)}if(o.R){o.R.aX(o.Y);if(v.8W){o.R.E5()}}if(o.4w){o.4w.vC()}}F{}}}if(1D(x)==\'4H\'){x=sI(x);if(x){if(x.O("#"+v.az)==0){x=o[o.fd[0]](x)}if(x){if(x.O("#"+v.dJ)==0&&x.O(v.fn)>0){x=o[o.fd[1]](x)}if(x.O("#0")==0){x=dP(x)}x=sI(x)}}if(v.9T==1){x=9T(x)}if(x==\'\'){1p("9I 3g");o.8A=H;js("28","9I")}o.2T=[];o.7t=[];o.6c=[];o.lp=0;o.2K=0;o.5E=0;o.8a=0;v.gV==\'\'?v.gV=\',\':\'\';if((x.O(v.gW)>-1&&x.O(v.aP)>-1)||L(v.9X)){o.3A=x.2f(v.gV)}F{o.3A=[x]}o.8Y=[];if(L(v.9X)){B 9X=v.9X.2f(v.gV)}if(o.3A.S>0){B q=-1;V(B i=0;i<o.3A.S;i++){o.3A[i]=46(o.3A[i]);if(o.3A[i]!=\'\'){if(o.3A[i].O(v.gW)==0&&o.3A[i].O(v.aP)>1){o.2T[i]=o.3A[i].1C(o.3A[i].O(v.gW)+v.gW.S,o.3A[i].O(v.aP)-v.aP.S);o.3A[i]=o.3A[i].1C(o.3A[i].O(v.aP)+v.aP.S)}F{if(L(v.9X)){o.2T[i]=L(9X[i])?9X[i]:\'\'}F{o.2T[i]=i+1}}B is=0;if(L(v.4N)&&q==-1){if(5Z(v.4N).O("i6:")==0){if(v.4N.1C(4)*1==i){is=1}}if(v.4N==o.2T[i]){is=1}if(v.4N=="6B"&&i==o.3A.S-1){is=1}}if(L(o.4N)){if(o.4N==o.2T[i]){is=1;q=i}}if(is==1){o.lp=i;o.2K=i}o.3A[i]=o2(o.3A[i])}}}F{o.3A[0]=o2(o.3A[0])}J o.3A[o.lp]}}F{J x}};E o2(x){if(L(v.kS)&&x.O("//")==-1){x=v.kS+x}J x};G.vN=E(){if(o.Y){B x=o.Y.Tb();V(B i=0;i<x.S;i++){x[i].uT=i}o.Y=x;o.R.aX(o.Y)}};E l9(y){B o3;V(B i=1;i<6;i++){B t="1u"+i;if(L(y[t])){v[t]=y[t];o3=H}}if(o3&&o.R){o.R.E3()}}G.l9=E(x){l9(x)};G.aX=E(x){if(1D(x)==\'3c\'){o.2Y=[];o.g8=o5(x);o.Y=rs(x);if(o.R){o.R.aX(o.Y)}}};G.gc=E(x,y,z,no){!L(y)?o.2J=H:\'\';!L(z)?v.4k=0:\'\';v.1e=1M;v.4l=1M;!2H.3R?v.3R=1M:\'\';o.8A!=2?o.8A=I:\'\';o.5c=I;o.7y=I;o.7H=0;o.ek=[];o.nf=I;o.mA=I;o.xB=I;o.9L=1M;o.kt=[I,I,I];o.SZ=iK();o.Ao=0;o.cP=0;o.91?o.91=[]:\'\';o.2b!=\'7r\'&&o.4o?o.4o.6u():\'\';o.vR?o.vR=[]:\'\';if(o.bo){o.bo.6u()}if(o.K.5W()=="8X"){G.8B()}if(o.4R&&o.8e){o.R.eS()}if(L(o.3C)){o.3C.4G()}if(L(o.ai)){2F(o.ai)}js("1t");if(v.1O==1&&no!=1){o.U.dN();o.U.dN(\'5a\')}x=G.5u(x);if(y==1){o.2b=\'\'}o.K.5u(x);if((o.1k.2a||o.1k.6X)&&!L(y)){o.U.2i()}if(L(o.fc)){o.3b={x:1,y:1,x0:1,y0:1};o.K.gD()}96("1r","2i");o.K.e2();o.R.gr();o.R.hW();o.R.5g();o.d3?o.d3.Eh():\'\'};G.pU=E(x){B y=I;if(x&&o.k7){v.22=o.k7;V(B i=1;i<6;i++){if(L(x[\'t\'+i])){v.22=v.22.1N("{"+i+"}",x[\'t\'+i]);y=H}}}J y};G.k3=E(){if(v.2J==1&&!v.vS||o.2J){if(v.gn==1){1B(E(){o.U.2i()},4h)}F{G.2i()}v.vS=1;o.2J=I}ge()};G.ge=E(){ge()};E ge(){if(v.rO==1){if(1D vT!=="1M"){o.th=1t vT()}}}G.e2=E(){B x=I;if(o.1k.2a){x=H;if(v.yJ==1&&o.1k.6w){x=I}if(v.yK==1&&o.1k.f0){x=I}if(v.yI==1&&o.1k.4f){x=I}if(v.SV==1&&o.1k.a9){x=I}}if(v.SU==1&&o.1k.tv){x=H}J x};G.nd=E(){o.K.3m(v.1F);if(o.2Q){o.K.4n()}o.5c=H;o.R?o.R.5g():\'\';if(!o.1r&&!o.1y){v.4Q==1?o.4Q.2U("3y"):\'\'}if(o.3I&&o.3Y){o.2W.o8();o.2W.Go()}if(v.1O==1){if(v.wF!=1&&v.eE==1){!L(o.1O)?hN("5a","5c"):\'\'}}};G.v5=E(){!o.fO?9h(H):\'\'};E 9h(x){o.fO=H;if(o.R){if(o.R.ar()){o.R.6q()}}if(o.4w){o.4w.ca()}!x?o.K.2i():\'\';if(!o.nf){1B(E(){o.K.e2()},4h)}!o.1r?o.R.2i():\'\';v.4Q==1?o.4Q.2U("1r"):\'\';v.1O==1?o.U.dN(\'bj\'):\'\';if(o.1k.2a){o.R.d4()}if(L(o.3C)){o.3C.SS()?o.3C.SR():\'\'}if(v.SQ==1&&L(v.ij)&&o.dt){if(v.ij!=\'\'&&!L(o.g2)){o.g2=7J(sG,v.vL*2c);sG()}}}G.2i=E(8N){if(!o.1r&&o.K){o.cr=H;o.he=I;o.6P=I;2F(o.vl);B 2j=I;if(o.2b=="3V"){if(!o.K.mZ()&&v.2J!=1&&v.4k==1){2j=H;if(1G[\'SN\']){v.2J=1;o.2J=H;o.K.n6()}}}if(v.6N==1&&v.wL==0){o.U.ki();2j=H}if(o.8A||2j){if(o.8A){6k("5x")?j4(2):\'\'}}F{o.kC=I;tf(!o.1y);o.7g.kK();if(!o.1y){js("1y");o.1y=H;if(v.1l.mG==1){1B(E(){o.R.m5()},1v)}if(v.1l.7f>0&&v.2J==1){o.cC=H;1B(oW,v.1l.7f*2c)}if(v.T2==1&&v.Tj){TC()}V(B i=0;i<o.ao.S;i++){if(v[\'Ae\'+o.ao[i]]==1){3F.8q("As"+o.ao[i],6o.gb())}}if(v.TE==1&&v.TF){TG("1y")}if(o.4o){o.4o.1y()}js("1t");o.s0?o.R.Ej(o.s0):\'\';o.R.nA();o.R.5g();96("1r","2i");o.1k.2a?vU():\'\';o.ab?96("vW","TI",1):\'\'}F{96("vX","TD")}if(v.vY==1&&!o.1P){B dd=1t 6o();B tt=dd.aq();if(tt-o.al<g5){if(!o.1k.4f&&(v.vZ!=1||o.1k.2a)){G.7C()}}}if(o.cW){if(v.vz==1){5D(o.3Z)}}if(o.bo){o.bo.6u()}if(8N!=1&&6k("5x")||6k("cs")){j4(2)}F{if(v.7W==1&&L(v.w1)&&!L(2H.7W)){7W(v.w1);2j=H}if(!2j){1p("2i");o.K.1e()>0?o.R.3k(o.K.Z(),o.K.1e()):\'\';if(!o.ox){o.ox=H;if(v.1l.7f>0&&v.2J==1){o.cC=H;1B(oW,v.1l.7f*2c)}}B oU=I;if(o.K.Z()>1&&v.hh==1&&8N!=1&&!6Q()&&!L(o.1O)&&!L(o.4B)){oU=6k("bj")}if(oU){6Q()?9h(I):\'\'}F{9h(I)}}}}}F{o.K?o.K.2i():\'\'}};E oW(){o.cC=I;o.R.5g()}G.2x=E(){if(o.1r){o.cr=I;1p("2x");o.K.2x();o.R.2x();js("3y");v.rU==1?6r():\'\';v.m4==1?hx():\'\';v.4Q==1?o.4Q.2U("3y"):\'\';if(o.cW){if(v.vz==1){3t(o.3Z)}}if(!L(o.1O)&&!L(o.4B)&&v.hh==0){6k("bj")}if(6Q()){o.he=H}o.fO=I}};G.4n=E(){o.K.4n();o.R.4n();o.2Q=H;js("4y")};G.4D=E(){o.K.4D();o.2Q=I;o.R.4D();o.K.3m(v.1F);js("8x")};G.3m=E(x,y){if(o.R){x<0.Tt?x=0:\'\';x>1?x=1:\'\';if(x<=0){G.4n();v.1F=0;x=0}F{if(o.2Q){G.4D()}v.1F=x}js("1F",x);o.R.3m(x,y);o.K.3m(x)}};G.7s=E(){o.R.7s()};G.8b=E(){o.R?o.R.8b():\'\'};G.TA=E(){G.8b()};G.nj=E(){o.U.5q();G.8b()};G.3k=E(Z,1e){if(o.2O&&!o.1y){B f=o.2O.8R();if(f.t&&f.d){Z=f.t}}o.R?o.R.3k(Z,1e):\'\'};G.ux=E(Z,1e){if(o.2m>0&&o.2b!="3V"&&!o.K.5e()){o.U.3a(o.2m,I);o.2m=1M}};G.fg=E(){B d=1t 6o();o.al=d.aq();B x=I;if(o.R.ar()&&v.1f.9E!=1){o.R.ak();x=H}if(o.4w){if(o.4w.CQ()){o.4w.ca();x=H}}if(v.Y.9E==0){if(o.R.eC()&&v.Y.lo==1){o.R.a4();x=H}}if(v.7W==1&&L(v.vw)&&!L(2H.7W)){7W(v.vw);x=H}if(o.2Q&&v.jv==1){o.U.4D();v.jv=0;x=H}if(!x){if(v.1E.on==1&&v.1E.2l==1&&v.1E.nl==1){6d(\'1r\',(o.1r?0:1))}G.df()}};G.Ed=E(){if(o.R.ar()){o.R.6q()}};G.df=E(){if(o.K.5W()=="8X"){js("Dr");v.To==1?G.jc():G.2x()}F{js("Dq");G.2i()}7M()};G.3a=E(9F,gk){if(9F<o.K.1e()){if(v.dU.Tq==1){if(9F>o.K.Z()){J}}if(v.3R>0){9F<v.3R?9F=v.3R:\'\'}1p("3a");o.vx=9F;o.K.3a(9F);if(gk){o.R.3a(9F,o.K.1e())}o.gS=H;o.dL=o.K.Z();7M(o.dL)}};G.Tl=E(17,6i,vo){if(o.K.5W()=="8X"&&o.ej!=\'ys\'){2x();if(o.1P&&vo){o.U.6T()}}1G.8f(17,6i)};G.j1=E(){if(v.1O==1&&!o.1y){if(6k("5x")){o.rv=H;J}}B x=o.K.8L();if(L(v.8p)){x=v.8p}if(x!=\'\'){js("8p");B l4=1G.8f(x,(v.Ts==1?\'Tu\':\'oZ\'));l4.4M()}};G.5q=E(x){B Z=o.K.Z();B 1e=o.K.1e();if(!o.1y&&o.2m>0){Z=o.2m}o.R.e8(Z,1e,x)};G.mn=E(){B Z=o.K.Z();B 1e=o.K.1e();B 8P=1e>0?Z/1e:0;if(!o.gS){o.R?o.R.e8((o.2m>0?o.2m:Z),1e):\'\'}F{Z!=o.dL&&o.dL!=-9?o.gS=I:\'\'}if((v.ga==1||v.vD==1)&&1e>0){kr("p0","2i 25%",8P,0.25);kr("p1","2i 50%",8P,0.50);kr("p5","2i 75%",8P,0.75)}V(B i=0;i<3;i++){if(!o.kt[i]){if(8P>=i*0.25+0.25){wN(i)}}}v.p7==1?1p(1,Z,1e):\'\';if(v.6S==1||v.p8>0){if(o.1r){B z=I;B kx=I;if(v.wB==1&&v.6S==1){if(!o.K.5e()){z=H}}if(Z>0){if(Z==o.Z&&!z){kx=H}F{o.7H=0}o.Z=Z}F{if(v.Tz==1){B ld=o.K.8y();v.p7==1?1p(2,ld,o.ky):\'\';if(!z){if(ld==o.ky){kx=H}F{o.7H=0}}o.ky=ld}}if(kx){o.7H++;if(v.6S==1){v.p7==1?1p(3,o.7H):\'\';if(o.7H==v.lB*(2c/o.kL)){o.U.c0()}}F if(v.p8>0&&o.K.xR()>1){if(o.7H==v.p8*(2c/o.kL)){o.K.5X(\'OR pL\')}}}}}if(v.8V){if(v.8V.91==1&&1e>0){!o.91?o.91=[]:\'\';o.91[2h.4P(Z)]=1}}if(v.1O==1){if(v.wF!=1&&v.eE==1){!L(o.1O)?hN("5a",Z,1e):\'\'}if(v.Sb!=1&&v.ra==1){!L(o.1O)?hN("bT",Z,1e):\'\'}}if(v.wx==1&&v.oJ>0){if(Z>=v.oJ){if(!L(o.1O)){if(6k("cs")){o.K.2x();o.R.2x()}v.oJ=0}}}gJ("1r");if(v.6N==1&&v.wL>-1){RV(Z,1e)}if(o.cW){7M(Z)}if(o.4S&&v.aN==1){if(o.2O){!o.2m?o.2O.ne(Z,1e):\'\'}}if(o.8e){o.4R?o.4R.1r(Z):\'\'}if(L(v.4l)){B ed=v.4l;if(5I([v.4l],\'-\')){ed=1e}if(ed>0&&Z>ed){if(o.2b=="3V"){o.K.2x();o.K.3a(v.1y>0?v.1y:0)}F{o.K.kH();o.U.8B()}v.1y>0?o.2m=v.1y:\'\';o.U.hC()}}if(L(v.6u)){B r1=v.6u.2f(",");V(B i=0;i<r1.S;i++){B r2=r1[i].2f("-");if(r2.S==2){if(Z>r2[0]&&Z<r2[1]){o.K.3a(r2[1]*1+(o.1k.6X?1:0))}}}}if(v.RY==1){if(1D wM!=="1M"){wM(Z,8P)}}};E wN(x){o.kt[x]=H;if(v.aN==1&&v.RU==1&&v.wP==x){if(o.4S&&o.9J){o.2O?o.2O.S1(o.9J):\'\'}}}E kr(x,y,t,p){if(!L(o.ek[y])){if(t>p){96(x,y,1)}}};G.c0=E(){o.7H=0;L(o.ai)?2F(o.ai):\'\';if(v.S4==1){js("6S")}F{o.2m>0||o.K.5e()?\'\':o.2m=o.K.Z()+(v.S5>0?1:0);B wR=o.R.eC();js("6S");o.K.6S();wR&&v.Y.lo==1?o.R.eP():\'\'}};G.wQ=E(){o.R.e8(0,0);o.R.nL(0,0);o.U.3k(0,0);o.R.8b()};G.nq=E(){if(o.K){B Z=o.K.8y();if(v.S7==1){js("8y",Z)}B 1e=o.K.1e();o.R?o.R.nL(Z,1e):\'\'}};G.hC=E(){js("S8");o.6P=H;if(v.92==1){if(o.2b=="3V"){G.8B()}v.1O==1?o.U.dN(\'5x\'):\'\';if(v.1y>0){o.U.3a(v.1y)}G.2i()}F{if(o.K.5e()||o.2b=="3V"){G.8B()}F{if(v.wS==1){o.U.3a((v.1y>0?v.1y:0),H);if(o.1k.ie){o.K.2x()}}}o.R.7P();v.wx==1?v.RS=1:\'\';if(6k("gQ")||6k("hH")){}F{7E()}}};G.7C=E(){B 2j=I;B 28=I;o.wi=I;o.8Z=H;1B(E(){o.8Z=I},lb);V(B x in o.5B){if(o.5B.2e(x)){if(L(o.5B[x])){33{o.5B[x].ww()}2v(e){}}}}33{o.bJ=H;if(((o.1k.4f&&v.dG==1)||(o.1k.a9&&v.Dk==1))&&o.3Y&&!o.8E){B x=o.K.9d();if(x){if(x.RD){bO();2j=H}}}if(!2j){B kM;B y=o.1I;if((o.2b=="dm"||o.2b=="9G")&&o.1k.6w&&v.dG==1){o.K.eo();J}if(y.oG){o.6h=H;kM=y.oG({l7:"1j"});if(kM!==1M){kM.8m(E(){}).2v(E(28){})}}F if(y.oH){y.oH({l7:"1j"});o.6h=H}F if(o.1I.oz){y.oz({l7:"1j"});o.6h=H}F if(y.oK){y.oK({l7:"1j"});o.6h=H}F if(y.oP){y.oP();o.6h=H}}}2v(e){28=H;1p(e)}if(!o.6h&&!2j){if(o.1k.3r&&o.lc){bO()}F{G.pK()}}if(!28){1B(wh,54)}};E bO(){B x=o.K.9d();if(x){o.eX=H;o.K.vE();x.RQ();x.1T("RP",wm)}}E hO(){B x=o.K.9d();if(x){x.RO()}};G.bO=E(){bO()};G.hO=E(){hO()};E wh(){if(o.wi!=H){if(o.7v){o.K.aL()}if(v.1E.sz==1){h4(H);o.53=H}v.4Q==1?o.4Q.2U("l6"):\'\';js("1P");96("l6","7C",1)}};B a8;B 6F={x:0,y:0};E sb(e){if(o.4w){if(o.4w.RK()){J}}if(e.RJ!=0){e.wa!=0?6F.x++:6F.x--;e.kY!=0?6F.y++:6F.y--;if((v.1E.wl==1||v.1E.wj==1)&&o.1P&&6F.y>6F.x){4p(a8);a8=7J(E(){6F={x:0,y:0};4p(a8)},2c)}F{o.6Z=H;4p(a8);a8=7J(E(){o.6Z=I;o.R.3S();6F={x:0,y:0};4p(a8)},5p);o.R.3S()}if(6F.x>6F.y){if(e.wa>0){o.U.3m(3i(v.1F)-v.1E.f1/10,"no")}F{o.U.3m(3i(v.1F)+v.1E.f1/10,"no")}}F{B st=(o.1k.l4?-v.1E.f1/10:v.1E.f1/10);if(v.1E.wj==1&&o.1P){o.K.1z((e.kY>0?st:-st))}F if(v.1E.wl==1&&o.1P){3l("3x",(e.kY>0?"+"+st*10:"-"+st*10))}F{o.U.3m(3i(v.1F)+(e.kY>0?st:-st),"no");o.R.eL()}}}}E wm(){if(o.1k.4f){o.K.wE();js("su")}o.eX=I}G.pK=E(){if(o.bJ){o.1P=H;o.R.7C();if(!o.6h){if(L(o.6l)){33{Q(o.6l,{\'1c\':\'1v%\',\'1d\':\'1v%\',\'1n\':\'lA\',\'1a\':0,\'1g\':0,\'4W\':"kA"})}2v(bp){}}Q(o.1I,{\'1c\':\'1v%\',\'1d\':\'1v%\',\'1n\':\'lA\',\'1a\':0,\'1g\':0,\'4W\':"kA"});o.2C=o.1I.1W;o.3W=o.1I.2D;33{1H.8o.C.9Q=\'3o\';if(!L(o.Y)){1H.lZ=E(e){e.aD()}}}2v(bp){}}if(v.sB==1){Q(o.1I,{\'aE\':\'#3G\'})}if(v.7O==1&&o.1k.3r==1&&!o.1k.ff){B sw=1G.9H.1c;B fz=1;V(B i=1;i<6;i++){if(sw>2c*i){fz=3f(v[\'7O\'+(2c*i)],i)}}if(fz>1){o.1I.C.we=fz;o.7O=fz;8H()}}if(o.4w){o.4w.ca()}7M();o.bJ=I}};G.6T=E(){ix=H;if(1H.wn){1H.wn()}F if(1H.wo){1H.wo()}F if(1H.wq){1H.wq()}F if(1H.wr){1H.wr()}F if(1H.wt){1H.wt()}F if(1H.wu){1H.wu()}if(!o.6h){G.pT(I)}};G.uD=E(x,y){rK(x,y)};E rK(x,yv){if(L(o.1O)&&!yv){o.hb=x}F{B 2j=I;B aA=o.7U/x;B aU=0;B kT={\'1d\':aA};if(v.St==1){if(aA>o.7S){aA=o.7S;aU=o.7U/x;o.7U=kT[\'1c\']=aU}}if(L(o.6l)&&v.Bq!=1){33{Q(o.6l,kT)}2v(bp){2j=H;1p("b9 Sv Sw")}}if(!2j){o.42=x;o.7S=aA;if(o.42>0){Q(o.26,kT)}if(aU>0){js("1c",aU)}js("1d",aA)}if(o.1O&&!o.1P){o.3W=aA;if(aU>0){o.2C=aU}o.1O.2L()}}};G.pT=E(x){if(ix||x){o.1P=I;o.eX=I;if(!o.6h){if(L(o.6l)){33{Q(o.6l,{\'1n\':\'jb\',\'1a\':0,\'1g\':0,\'4W\':\'wg\'});Q(o.6l,o.Bp);Q(o.6l,{\'1c\':o.8z,\'1d\':o.9q})}2v(bp){}}Q(o.1I,{\'1c\':o.8z,\'1d\':o.9q,\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'4W\':\'wg\'});33{1H.8o.C.9Q=\'2V\';1H.lZ=E(e){J H}}2v(bp){}}o.R.6T();if(v.sB==1){Q(o.1I,{\'aE\':v.j2});if(v.9r==1){o.1I.C.aE=\'9r\'}F{Q(o.1I,{\'aE\':v.j2})}}if(o.7O>1){o.1I.C.we=1;o.7O=1;8H()}if(v.1E.sz==1){h4(I);o.53=I}if(o.4w){o.4w.ca()}7M();o.wb?o.wb=I:\'\';o.R.nG();ix=I;js("su");o.6h=I;o.8Z=I}};G.53=E(x){v.1E.SD!=0?h4(x):\'\'};E h4(x){6F={x:0,y:0};if(x){1G.1T("wJ",sb)}F{4p(a8);1G.5t("wJ",sb)}}G.8B=E(x){v.4k=0;if(x!=1){o.R.2x();o.U.wQ()}F{}o.K.3m(v.1F);if(o.R.ar()){o.R.6q()}if(o.2Q){G.4n()}if(L(o.g2)){4p(o.g2);o.g2=1X}7M(0);1p("2j");js("2j")};G.jc=E(){v.4k=0;v.2J=0;o.K.kH();o.U.8B()};G.6G=E(x){if(L(o.2K)){if(o.2K!=x){o.2K=x;if(v.qF==1){o.4N=o.2T[x];if(o.4S){3F.8q("qN",o.4N)}}o.K.6G(x);js("8d",o.2T[x]);o.R.Ax(x)}}};G.iB=E(){o.R?o.R.iB():\'\'};G.dy=E(x){if(L(o.5E)){if(o.5E!=x){o.5E=x;if(v.Ar==1){o.8D=v.8D=o.6c[x];if(o.4S){3F.8q("qM",o.8D)}}o.K.dy(x);js("b4",x);o.R.hP("b4")}}};G.aB=E(x,z){x==\'0.0\'?x=0.1:\'\';B y=x;5Z(y).O(\'.\')>0?z=1:\'\';y=y*1;if(!z){y=x==o.f8?1:o.4V[x];o.9e=x}y=3i(y);if(o.d2||z){o.gl=y;V(B i=0;i<o.4V.S;i++){if(y<=o.4V[i]*1){o.9e=i;1h}}}if(o.4S&&v.DF==1){3F.8q("Dz",y)}js("6b",y);o.K.aB(y);o.R.hP("6b")};E 7M(x){o.4o?o.4o.1m(L(x)?x:o.K.Z()):\'\'};G.sl=E(){if(o.4o){7M();o.4o.C()}};G.kq=E(x){if(1D(wz)==\'E\'){!o.4o?o.4o=1t wz():\'\';o.4o.zQ(x)}};B 5y;B 7u;B ha;B 1Y;E 6k(x){if(v["4I"+x+"wD"]>0&&o.4S){B tb=3F.5C("qu"+x+"4j"+o.d);if(tb){B ct=1t 6o();o.al=ct.aq();B wG=(ct.aq()-tb)/SI;if(wG<v["4I"+x+"wD"]){J I}}}if(v["4I"+x+"wC"]>0){if(o.K.1e()>0){if(o.K.1e()<v["4I"+x+"wC"]*60){if(v["4I"+x+"w8"]>0){v["4I"+x+"4j"+"xX"]=v["4I"+x+"w8"]}F{J I}}}}if(o.fR.O("6J")!=-1&&v.1O==1&&!o.8N&&v[x+\'s\']==1){if(1D hS=="1M"){J I}if(x=="cs"||x=="hH"){if(1D sq!=="1M"){1Y=[];J sq(x)}}if(L(o.1O)||L(o.4B)){if(!5U(o.rh)||6Q(o.3e)){1p(\'ad bg\');J I}F{1p(\'ad gb\');J H}}F{if(L(v[x])){if(v[x].4F().O(".")>-1||v[x].4F().O(":")>-1||v[x].4F().O("[Sr]")>-1){js("Sd",x);if(!6Q(x)&&x!="bT"){1B(E(){o.1r||(o.4B==1X&&o.1O==1X)?\'\':o.U.7s()},10);d9()}5y=0;7u=0;ha=x;1Y=v[x].2f(" 9Z ");o.4z=[];o.ip=1Y.S;i9();o.rT=1;o.hR=H;V(B i=0;i<1Y.S;i++){1Y[i]=1Y[i].2f(" or ")}v[x.6x("4j","do")]=v[x];v[x]=1X;o.3e=x;if(x!=\'bT\'){o.1O=1t hS()}o.4B=1t hu();V(B i=0;i<1Y.S;i++){V(B j=0;j<1Y[i].S;j++){B 5Y=46(1Y[i][j]);if(5Y.O("[50%]")>0){B 1K=4E(1,2);1Y[i][j]=1Y[i][j].1N("[50%]","");if(1K==2){1Y[i][j]=\'\'}}}}if(v.qT==1){V(B i=0;i<1Y.S;i++){B n=i==0?1:0;if(1Y[i].S>n){V(B j=n;j<1Y[i].S;j++){B 5Y=46(1Y[i][j]);if(o.1k.qZ){bY(5Y)}F{1B(bY,i*1v,5Y)}}}}}if(1Y[0][0]==\'\'){gf()}F{o.4B.hL(46(1Y[0][0]),x)}J H}F{J I}}F{J I}}}F{J I}};G.sJ=E(x){6k(x)};E hN(w,x,d){if(L(o[w+\'o\'])&&v[w+\'s\']==1){B y;V(B i in o[w+\'o\']){if(o[w+\'o\'].2e(i)){if(!L(o[w+\'o\'][i].hz)&&L(o[w+\'o\'][i].Z)&&L(o[w+\'o\'][i].1O)){B z=o[w+\'o\'][i].Z.4F();B ok=I;if(z){if(x=="5c"){if(z==x){ok=H}}F{if(z.O("%")>0){if(d>0){z=2z(z.1C(0,z.O("%")))*d/1v}F{z=-1}}F{z=2z(z)}if(x>=z){if(v[\'4I\'+w+\'vB\']>0&&z>-1){if(x-z>=v[\'4I\'+w+\'vB\']){z=-1}}if(z>-1){ok=H}}}if(o[w+\'o\'][i].vV&&o.K.1e()>0){if(o.K.1e()<o[w+\'o\'][i].vV*1){o[w+\'o\'][i].hz=H;ok=I}}if(ok){y=o[w+\'o\'][i].1O;v[w]=o[w+\'o\'][i].1O;o[w+\'Si\']=o[w+\'o\'][i].Z;o[w+\'Sc\']=o[w+\'o\'][i].Sj;if(6k(w)){o[w+\'o\'][i].hz=H;1h}}}}}}}};E i8(){if(6Q()){if(o.bh==0||v[\'4I\'+o.3e+\'Sm\']==1){Q(o.rh,{"1J":0,"5r":"3o","1g":5p});1p(o.3e+" 1j");o.3e==\'5a\'?o.K.2i():\'\'}}}E 6Q(z){B y=I;B x=[\'5a\',\'bj\'];V(B i=0;i<x.S;i++){if(o.3e==x[i]||z==x[i]){if(v[\'4I\'+x[i]+\'Sn\']==1){y=H}}}J y};G.6Q=E(x){J 6Q(x)};G.So=E(x){x?\'\':hV();o.3e=="5a"?o.w5.2R(o.w4):\'\'};G.Sq=E(){hV()};G.TS=E(){hV()};E hV(){if(6Q()){if(o.1r){o.K.2x();o.R.2x()}1p(o.3e+" 1m");Q(o.rh,{"1J":1,"5r":"3H","1g":0});o.kg=1}if(o.eX&&!o.6h){hO()}F{if(v["4I"+o.3e+"o7"]==1&&o.1P){o.U.6T()}}};G.Vq=E(x){o.4B=1X;o.kg=0;1p("6J 8M",o.3e);js("Vr",o.3e);if(x.1A=="bT"){B vP=1t Vs(x);o.ra.2R(vP)}F{if(L(o.1O)){if(v.4k==0&&v.Vu==1&&o.K.Z()==0&&o.K.1e()==0){v.4k=1;o.K.mY()}if((!o.1O.Vv()||x.ri)&&o.rk>0){1p("6J Vp");o.1O.4G();o.1O=1X;o.1O=1t hS()}if(6Q()){i8()}F{if(o.1r){o.K.2x();o.R.2x()}}o.rk++;if(o.hR&&v.bc>0){2F(o.bc);o.bc=1B(y6,v.bc*2c*60);if(L(v.vM)){if(v.vM!=\'\'){o.fI?o.fI.6u():\'\';o.fI=1t Vz()}}}o.hR=I;if(v.w9>0){1p("6J VB");js("VC");1B(rl,v.w9*2c,x)}F{rl(x)}}F{1p("6J Vx")}}};E rl(x){o.1O.Go(x)}E y6(){if(L(o.1O)){if(o.1O.om()&&o.bh==0){o.1O.rR();1p("6J pL "+v.bc);1Y=[];8n()}}}G.V8=E(){js(\'V9\',o.3e);1p("6J 28");rp()};G.gf=E(){rp()};E rp(){B n=i9();1p("6J 5f "+!n);!n?gf():8n()};G.Vb=E(x){if(v[o.3e+"rj"]){V(B i=0;i<3;i++){v[o.3e+"rj"]=v[o.3e+"rj"].1N(x+(i==0?\' 9Z \':(i==1?\' or \':\'\')),\'\')}}};E i9(){B x=I;if(o.3e){B 8t=v[\'4I\'+o.3e+\'4j\'+\'xX\'];B gh=v[\'4I\'+o.3e+\'4j\'+\'Vd\'];if(gh||8t){if(gh>0&&o.rF>0){o.ip=gh;if(o.bh>=gh){x=H}}F{if(8t>0){o.ip=8t;if(o.bh>=8t){x=H}}}}}J x}E gf(){if(1Y.S>0&&1Y[5y]){if(7u<1Y[5y].S-1){1p("6J V7");o.1O?o.1O.rR():\'\';i8();7u++;B 5Y=46(1Y[5y][7u]);B d8=rY(5Y);if(d8==\'6n\'){o.4B=1t hu();o.4B.hL(5Y,o.3e)}if(d8==\'28\'){gf()}}F{8n()}}F{8n()}}E rY(5Y){B x=\'6n\';if(v.qT==1&&o.4z){B io=I;B n=0;V(B i=0;i<o.4z.S;i++){if(o.4z[i].ih==0){if(o.4z[i].a2.xO(5Y)){o.4z[i].ih=1;B y=o.4z[i].a2.mo();if(y==\'8M\'){o.4B=o.4z[i].a2;1p("6J xO");o.4z[i].a2.fm();x=y}F{if(y==\'\'){x=\'ok\';1p("6J Ve");o.4B=o.4z[i].a2;o.4z[i].a2.Vg()}if(y==\'28\'){x=\'28\'}}io=H}if(io&&o.4z[i].cV==0){n++;if(n<6){r9(o.4z[i])}F{1h}}}}}J x}G.Vi=E(x,y){if(x!=\'\'){B z=5y;B qY=I;if(y){V(B j=0;j<1Y.S;j++){1Y[j]==y?z=j:\'\'}}if(1Y.S==1){if(1Y[0].S>1&&7u<1Y[0].S-1&&1Y[7u]){B yk=1Y[7u].5k(1,99);1Y[0].xN(7u+1,99);qY=H}}if(1D(x)=="3c"){V(B i=0;i<x.S;i++){1Y.xN(z+i+1,0,[x[i]]);if(o.1k.qZ){bY(x[i])}F{1B(bY,i*1v,x[i])}}}F{if(1D(x)=="4H"){1Y.2R([x]);bY(x)}}if(qY){1Y[1Y.S-1]=1Y[1Y.S-1].6x(yk)}}};G.Vl=E(x,y){if(x!=\'\'){B z=5y;if(y){V(B j=0;j<1Y.S;j++){1Y[j]==y?z=j:\'\'}}if(1Y[z]){if(1D(x)=="3c"){V(B i=0;i<x.S;i++){1Y[z].2R(x[i])}}F{if(1D(x)=="4H"){1Y[z].2R(x)}}}}};G.8n=E(x){8n(x)};E bY(x){if(v.qT==1&&o.4z){B i=0;V(B i=0;i<1Y.S;i++){if(1Y[i]==x){if(5y>=i){J}F{}}}if(1Y.S==1&&1Y[0].S>1){}F{B n=0;V(i=0;i<o.4z.S;i++){o.4z[i].ih==0?n++:\'\'}o.4z.2R({cV:0,ih:0,x:46(x),t:o.3e,a2:1t hu(H)});n<5?r9(o.4z[o.4z.S-1]):\'\'}}}E r9(x){if(x){x.cV=1;x.a2.hL(x.x,x.t)}}E 8n(hg){B 2j=i9();1p("6J 6u ("+o.bh+")");if(1Y.S>0&&5y==1Y.S-1){if(1Y[0][0].O("js:")==0){5y=-1;1Y=[[1Y[0][0]]]}}if(o.VH==2){2j=H}if(1Y.S>5y+1&&!2j){o.1O.rR();i8();5y++;o.rT++;7u=0;B 5Y=46(1Y[5y][0]);B d8=rY(5Y);if(d8==\'6n\'){o.4B=1t hu();o.4B.hL(5Y,ha)}if(d8==\'28\'){8n(hg)}}F{bX();o.R.8b();if(L(o.1O)){o.1O.4G();o.1O=1X}o.4B=1X;1Y=[];7u=0;5y=0;o.kg=0;o.rN!=1?js("W2",o.3e):\'\';o.rN=0;if(v.W3==1){if(o.hk){33{o.hk.pM()}2v(e){1p(o.hk,e)}o.hk=1M}}ha=\'\';o.bh=0;o.xk=0;2F(o.bc);4p(o.W8);o.fI?o.fI.6u():\'\';o.a3?o.a3.1j():\'\';o.rF++;if(o.3e=="5x"||(o.3e=="bj"&&v.hh==1&&o.cr)||o.3e=="5a"){if(v.3g!=\'?\'){o.K.eM();B re;if(o.rv){o.U.j1();o.rv=I;re=H}if(o.2b=="3V"&&!o.rJ&&o.1k.4f){re=H;o.3e=="5x"?o.K.vI():\'\'}if(re||hg==\'hg\'||v.Wc==1||o.he){o.he=I}F{o.U.2i(1)}}}if(o.hb>0){rK(o.hb);o.hb=0}if(o.3e=="gQ"){7E()}o.rJ=I;o.3e=1X}};G.VX=E(){1Y=[[\'\']]};G.dN=E(y){B x=[\'5x\',\'bj\',\'gQ\',\'cs\',\'hH\'];B z;V(B i=0;i<x.S;i++){z=I;if(y){y!=x[i]?z=H:\'\'}if(!z&&L(v[x[i].6x("4j","do")])){v[\'4I\'+x[i].6x("4j","rE")]--;if(v[\'4I\'+x[i].6x("4j","rE")]>0){v[x[i]]=v[x[i].6x("4j","do")];v[x[i].6x("4j","do")]=1X}}}if(y=="5x"||y=="5a"){if(v.rW>1){if(L(o.rw)&&v.eE==1){V(B i in o.rw){o.rw[i].hz=1M}v.rW--}}}};G.ki=E(){d9();if(L(o.6N)){o.6N.4G();o.6N=1X}o.6N=1t VT()};G.VS=E(){bX();o.6N.4G();o.6N=1X};G.d9=E(){d9()};G.bX=E(){bX()};E d9(){if(o.7D){}F{o.7D=1V("2k");o.1I.1R(o.7D);sD(o.7D);Q(o.7D,{"2u":"#3G","1J":0.1});o.7D.C.4W=D4}};E bX(){if(o.7D){o.1I.3u(o.7D);o.7D=1X}};E 6r(){if(L(o.1U)){B p=o.1P?3f(v.VR,v.1U):v.1U;if(p!=o.pW){9j(p,o.1U,v.cM)}1m(o.1U);Q(o.1U,{"1J":v.l0});o.R.5g();o.cz?o.cz.1r():\'\'}};G.da=E(){if(L(o.1U)){if(5U(o.1U)){4p(o.pZ);B t=o.K.Z();if(t==0&&v.sX==1){}F{if(v.sS>0){2F(o.rP);o.rP=1B(hx,v.sS*2c)}F{hx()}}}}};E hx(){2F(o.rP);if(v.rU==1&&!o.1r){}F{Q(o.1U,{"1J":0});1B(td,4h)}}E td(){if(!o.1r&&v.ce==1){}F{1j(o.1U);o.cz?o.cz.3y():\'\';o.R.5g()}}G.6r=E(){6r()};E tf(x){if(v.rQ==1){V(B i=0;i<47.S;i++){if(47[i]){if(47[i].2U("id")!=v.id){47[i].2U(\'3y\')}}}}aJ=v.id}E rs(x){B y=dB.9V(x).S;o.eh=0;if(y>0){x=r8(x,y,\'\',-1)}J x}E r8(x,y,p,j){B x2=[];B 2j;if(L(x[\'Y\'])){x=x[\'Y\'];y=x.S}B ii=0;V(B i=0;i<y;i++){2j=I;if(L(x[i][\'id\'])){x[i][\'cS\']=x[i][\'id\']}x[i][\'id\']="x"+p+\'-\'+i+(L(x[i][\'id\'])?\'-\'+x[i][\'id\']:\'\');j==-1&&i==0&&!L(x[i][\'7i\'])?o.qU=x[i][\'id\']:\'\';if(!L(o.qU)){j==0&&!L(x[i][\'7i\'])?o.qU=x[i][\'id\']:\'\'}x[i][\'VI\']=p;x[i][\'uS\']=j;x[i][\'uT\']=ii;if(L(x[i][\'1e\'])){o.eh+=x[i][\'1e\']}if(L(x[i][\'v4\'])){x[i][\'22\']=x[i][\'v4\'];B q1=x[i][\'3g\']?x[i][\'3g\'].O(\'[\'):0;B q2=x[i][\'3g\']?x[i][\'3g\'].O(\']\'):0;if(q1>0&&q2>0){B s1=x[i][\'3g\'].1C(q1+1,q2-q1-1);B s2=s1.2f(",");B s3=\'\';V(B k=0;k<s2.S;k++){s3+="["+s2[k]+"]"+x[i][\'3g\'].1N("["+s1+"]",s2[k])+(k<s2.S-1?",":\'\')}x[i][\'3g\']=s3}}if(L(x[i][\'Y\'])){x[i][\'7i\']=x[i][\'Y\']}if(!L(x[i][\'7i\'])){if(L(x[i][\'3g\'])){if(x[i][\'3g\']==\'\'&&!L(x[i][\'7W\'])){2j=H}}F{2j=H}}if(!2j){o.2Y[x[i][\'id\']]=x[i];ii+=1}if(L(x[i][\'7i\'])){B z=dB.9V(x[i][\'7i\']).S;if(z>0){x[i][\'7i\']=r8(x[i][\'7i\'],z,x[i][\'id\'],i)}}if(!2j){x2.2R(x[i])}}J x2}E uf(){B x=[];if(L(v.5R)){if(v.5R.O("x-")!=0){V(B y in o.2Y){if(o.2Y.2e(y)){if(o.2Y[y].cS==v.5R){v.5R=y}}}}if(L(o.2Y[v.5R])){v.Y.Ui==1?v.Y.yF=0:\'\';x=o.2Y[v.5R]}F{x=o.Y[0];if(v.5R==o.um){o.2m=1M}}}F{x=o.Y[0]}if(x){V(B i=0;i<10;i++){if(L(x[\'7i\'])){x=x[\'7i\'][0]}F{1h}}v.5R=x.id;if(v.5R==o.um&&x.1y!=\'2O\'){x.1y=1M}}J x}G.cD=E(){J cD()};E cD(){B x=I;if(o.R){if(o.R.dW()){if((v.Y.fe==1||v.iG==1)&&o.R.aQ()){x=H}}}J x};E 7E(){96("4l","7E",1);o.U.dN();if(o.4S&&v.aN==1){o.2O.ne(0,o.K.1e())}if(o.R.dW()){if(cD()){if(L(v.Y.uE)){o.vl=1B(E(){o.R.af()},v.Y.uE*2c)}F{o.R.af()}}F{rg()}}F{if(v.Uo==1&&o.1P){o.U.6T()}rf()}}G.Up=E(){rg()};E rg(){if(v.Y.iH==1&&!o.R.aQ()){o.R.ny();J}if(v.Y.yH==1){!o.R.eC()?o.R.a4():\'\'}rf()}E rf(){6r();js("Us");if(v.7W==1&&v.Ul==1&&2G(v.uC)){7W(v.uC)}if(v.TW){if(1D vd!=="1M"){!o.uJ?o.uJ=1t vd():\'\'}}}E sI(x){if(x.O(\'js:\')==0){33{x=6f(x.1C(3))}2v(e){bF.1p(e.7k)}}J x?x:\'\'}E sG(){B sm=2h.62(6o.gb()/2c);B sn=(L(v.uj)?v.uj:0)+2z(o.K.Z());B 1A=0;o.1k.9k?1A=1:\'\';o.1k.4f?1A=2:\'\';o.1k.a9?1A=3:\'\';o.1k.uR?1A=4:\'\';o.1k.tv?1A=5:\'\';B 17=v.ij.1N("[sm]",sm);17=17.1N("[sn]",sn);17=17.1N("[U8]",1A);B 7w=1H.1V("3P");7w.4U(\'2q\',17);7w.4U(\'1d\',\'8Q\');7w.4U(\'1c\',\'8Q\');o.1I.1R(7w)}};B AA=E(17){B 17;B 3h;B kR;B 6I;B cH="";B aI=0;B gd=I;B kJ=I;B mD;B K;B 2Z;o.3b={x:1,y:1,x0:1,y0:1};B h3;B gZ;B h6=0;B dK=0;B ef;if(1D(17)==\'4H\'){17=46(17);if(17.O("[{")==0){33{17=17.1N(/7r\'qt/ig,\'"\');17=43.5h(17);h3?17=o.U.5u(17):\'\'}2v(e){bF.1p(e);17="tU 43"}}if(17.O("#"+v.az)==0){17=o[o.fd[0]](17)}if(17){if(17.O("#"+v.dJ)==0&&17.O(v.fn)>0){17=o[o.fd[1]](17)}}if(17){if(17.O("#0")==0){if(17.O(o.bb)>0){17=dP(17.1N(o.bb,\'\'))+o.bb}F{17=dP(17)}}}if(v.9T==1){17=9T(17)}if(1D(17)==\'4H\'){if(17.O(".9a")==17.S-4||17.O(".6K")>0){gZ=17.2f(" or ");nN()}}}o.2I=1V("2k");sD(o.2I);Q(o.2I,{"5n":"2r 0.2s 3B","1u-fk":"7L"});o.1I.1R(o.2I);if(v.1E.tR==1){if(!o.nW){y5(o.2I,\'o.tR\',v.1E.go!=1,v.1E.go==1,tI);o.nW=H}}if(!h3){iR()}E tI(){B p=o.2I.ji;B p2=o.2C;if(v.1E.go==1){p=o.2I.U5;p2=o.3W}B x;if(p>p2*3f(v.1E.tD,0.5)){if(o.R.hY()){x=H;o.R.c9()}}F{if(p<-p2*3f(v.1E.tD,0.5)){if(o.R.aQ()){x=H;o.R.af()}}}if(x){if(v.1E.go==1){Q(o.2I,{"1g":0})}F{Q(o.2I,{"1a":0})}}F{1t ax({mc:o.2I,1A:(v.1E.go==1?"1g":"1a"),to:0,Z:0.1,dX:"Ds",me:"nW"})}}E nN(){17=gZ[h6];if(17.O(o.bb)>0){17=17.1N(o.bb,\'\');v.3g=17}B 4t=fZ(17);4t.dI=E(){if(G.fa==4&&G.5W==54){a4(G);o.R.E1()}F{hZ(1)}};4t.U2=E(e){hZ(1)};4t.bs();h3=H}E hZ(x){if(h6+1<gZ.S){h6++;nN();x=0}if(x==1){5X("Y fw nX or U0 TZ")}if(x==2){5X("TY 43")}}E a4(x){if(x.dz){B y=x.dz;if(y.O("#"+v.az)==0){y=o[o.fd[0]](y)}if(y.O("#"+v.dJ)==0&&y.O(v.fn)>0){y=o[o.fd[1]](y)}if(17.O(".9a")==17.S-4){B 9a=y.2f(/(\\r\\n\\t|\\n|\\r\\t)/gm);17=[];B lX=1;B eJ=\'\';V(B i=0;i<9a.S;i++){if(9a[i].O("#TX")>-1){if(9a[i].O(" - ")>-1){B 1K=9a[i].2f(" - ");eJ=1K[1K.S-1]}}if(9a[i].O("4J")>-1){17.2R({22:""+(eJ!=\'\'?eJ:lX),3g:9a[i]});lX++;eJ=\'\'}}}F{y=y.1N(/(\\r\\n\\t|\\n|\\r\\t)/gm,"");33{17=43.5h(y)}2v(e){hZ(2)}}if(o.R){if(v.Y.i0==1){o.R.eP(2)}}iR();8H();1B(E(){js("Y")},1)}}E iR(){17=o.U.5u(17);17&&17!=\'?\'?5u(17):\'\'}E 5X(x,sM){B y=H;B yy=H;js("UN",x);if(sM!=1&&v.6S==1&&v.lO==1){ly();J}if(3h){if(o.1r||o.cr||(v.2J==1&&!o.1y)){if(3h.S>0){6I++;y=6I>3h.S-1;if(y&&3h.S>1&&v.cP>0){if(o.cP<v.cP){6I=0;y=I}o.cP++}if(y&&v.UR==1){if(o.3A.S>1){if(o.2T[o.2K].O(3Q("mz"))==-1){o.2T[o.2K]=o.2T[o.2K]+\' (\'+3Q("mz")+\')\'}if(o.2K>0){yy=I;o.U.6G(o.2K-1);e1()}F{if(o.2T[o.2K+1].O(3Q("mz"))==-1){yy=I;o.U.6G(o.2K+1);e1()}}}}if(!y){B z=I;o.2m>0||!o.1y||K.5e()?\'\':o.2m=3w();if(o.2b!=kz(3h[6I])||o.2b!=\'cK\'){if(o.1r){o.U.8B(1);z=H}}if(v.im>0){2F(o.gs);o.gs=1B(ir,v.im*2c)}F{ir()}}F{if(v.6S==1&&yy&&v.lO!=1){y=I;ly()}}}}F{y=I}}if(y&&yy&&x){lK(x,H)}};E ir(){if(o.1r||o.cr||(v.2J==1&&!o.1y)){1p("UV 9O",o.2m);5u(\'or\');o.1y&&!o.1O?K.2i():\'\';e1()}F{2F(o.gs);o.gs=1B(ir,(v.im>0?v.im:5)*2c)}}E lK(x,mr){96("28","k6",H);if(v.uY==1&&!o.8A){if(v.tH==1){o.7g.6K(v.tr)}F{o.7g.6K(x)}if(v.uu==1&&L(v.uI)){o.bo=1t ub();o.U.da()}}mr?o.8A=H:\'\';if(o.1r){o.U.8b();o.R.2x()}L(o.1U)&&!L(o.bo)?o.U.6r():\'\';js("28",x)}E ly(){dK++;1p("k6 c0 vr "+dK);o.1r?o.je=1:\'\';L(o.ai)?2F(o.ai):\'\';o.ai=1B(uh,v.lB*2c)}E uh(){B x=3f(v.V2,10);if(o.1r||o.je==1){o.je=0;if(dK<x){o.U.c0()}F{if(v.lO==1){5X(K.jq(),1)}F{lK(\'c0 k6 \'+K.jq())}}}}G.5X=E(x){5X(x?x:K.jq())};G.7P=E(y){1p("hC");gd=H;2F(ef);B x=I;if(3k()>0&&!o.3I&&!y){B Z=o.vO;if(Z+10<3k()){1p(\'UM (v8)\');js("v8");K.2i();K.3a(Z);x=H}}if(!x){o.U.hC();js("4l")}};G.9h=E(){if(v.m4==1){L(o.1U)?o.U.6r():\'\'}v.ce==1?o.U.da():\'\';o.R.2i();o.U.v5();if(v.UK==1&&L(v.mv)){if(v.mv.S>5){lQ();4p(mD);mD=7J(lQ,v.uM*2c)}}js("1r")};G.e2=E(){if(v.jB==1&&o.3Y){if(o.U.e2()){o.8E=K.Ep();o.R.5g();mj()}}o.nf=H};G.gu=E(){3w()>0&&3w()==3k()&&o.U.cD()?\'\':o.U.2x()};G.gR=E(){1p("UE")};G.gM=E(){1p("nj");o.U.nj();L(o.dL)?js("3x",o.dL):\'\'};G.gH=E(){1p("nd");dK=0;o.U.nd();o.2b=="1w"?nE(1):\'\'};G.gz=E(){if(K){1p("3k",3k());o.U.3k(3w(),3k());js("1e",3k());dK=0;2F(o.ai);if(L(o.hy)){o.U.dy(o.hy);o.hy=1X}}};E 3w(){B x=K.Z();J x}E 3k(){B x=K.1e();J x}G.gA=E(){};G.bQ=E(){1p("7s");o.U.7s();js("6t")};G.gU=E(){if(aI!=3w()){if(!o.7D){o.U.8b();if(aI==0){if(v.ce==1&&v.sX==1){o.U.da()}}}}aI=3w();B 9v=3k();js("Z",aI);if(v.1Z.on==1){if(1D(tw)==\'E\'){if(!2Z&&v.1Z.3M!=1&&v.tV&&v.tV!=\'\'&&aI>0){o.bt=1t tw();2Z=o.bt.bM()}}}if(o.2b=="1w"&&o.1k.6X&&9v>0){if(o.1r&&aI>9v-1){2F(ef);ef=1B(vn,5p)}}};E vn(){if(!gd){o.U.2x();o.K.7P()}}G.n6=E(){if(o.2b=="3V"){K?K.mZ():\'\'}};G.xt=E(x){o.U.8B();K.Of(x)};G.mZ=E(){if(o.2b=="3V"&&K){J K.8M()}F{J H}};G.kl=E(){J K.kl()};G.kk=E(){J K.kk()};G.6G=E(x){1p("Og",x);if((o.2b=="cK"||o.2b==o.ws||(o.2b=="1w"&&(v.7d==0||7G()<2))||(o.2b=="3d"&&(v.iv==0||av()<2)))&&L(o.3A[x])){B Z=G.Z();o.2m>0?\'\':o.2m=Z;o.U.3a(Z,I);5u(o.3A[x],H);B y=H;if(v.1f){if((v.1f.Oh==1&&!o.1r)||!o.1y){y=I}}if(o.8a>0){K.bS(o.8a)}if(y){o.U.2i()}}if(o.2b=="1w"&&v.7d==1&&7G()>1){K.CS(x)}F if(o.2b=="3d"&&v.iv==1&&av()>1){K.DE(x)}F if(o.2b=="3V"||o.2b=="dm"){K.DR(x)}};G.sP=E(x,y){J xA(x,y)};G.mg=E(x,y){J vQ(x,y)};E xA(x,y){B r=x.1d+\'p\';if(x.1d<54){r=\'xC\'}F if(x.1d>=54&&x.1d<=g5){r=\'mL\'}F if(x.1d>g5&&x.1d<=ng){r=\'mO\'}F if(x.1d>ng&&x.1d<=4h){r=\'mM\'}F if(x.1d>4h&&x.1d<=fE){r=\'xF\'}F if(x.1d>fE&&x.1d<=vm){r=\'mJ\'}F if(x.1d>vm&&x.1d<=xy){r=\'mH\'}F if(x.1d>xy&&x.1d<=x4){r=\'mF\'}F if(x.1d>x4){r=\'na\'}if(x.1c==Od&&x.1d<=Ok){r=\'mL\'}F if(x.1c==yl&&x.1d<=xL){r=\'mO\'}F if(x.1c==Op&&x.1d<=Oq){r=\'mM\'}F if(x.1c==Os&&x.1d<=wT){r=\'mJ\'}F if(x.1c==Ol&&x.1d<=Ob){r=\'mH\'}F if(x.1c==O2&&x.1d<=Oa){r=\'mF\'}F if(x.1c==NW&&x.1d<=NX){r=\'na\'}if(v.1f.NY==1&&L(v.1f[\'5L\'+r])){r=v.1f[\'5L\'+r]}F{if(y==1){r=3Q(r)}if(y==2&&L(x.9L)){r=2z(x.9L/2c)+\' \'+3Q(\'fL\')}}J r};E vQ(x,y){B r=x.k0();if(r=="O0"||r=="en"){x="O1"}F if(r=="O3"||r=="ru"){x="Ð ÑƒÑÑÐºÐ¸Ð¹"}if(1D(v.hT)=="3c"){if(L(v.hT[x])){x=v.hT[x]}F{x=3f(v.hT[y.4F()],x)}}J x};E mj(){if(o.3Y&&o.9A&&!o.nJ){K.nK();V(B i=0;i<o.9A.S;i++){if(o.9A[i]!=\'nx\'){K.D7(o.9A[i],o.8S[i],(i==o.8h))}}o.nJ=H}}G.aB=E(x){1p("MD",x);x=3i(x);K?K.ex(x):\'\';if(v.1Z.on==1){if(2Z){2Z.ex(x)}}};G.vE=E(){mj()};G.wE=E(){K.nK()};G.dy=E(x){1p("Ou",x);if(o.8Y.S>0){if(o.8Y[x]){B Z=G.Z();o.2m>0?\'\':o.2m=Z;o.U.3a(Z,I);5u(o.8Y[x],H);o.U.2i()}}F{if(o.2b=="1w"&&v.9y==1){K.DU(x)}F if(o.2b=="3d"&&v.wH==1){K.DQ(x)}F if(o.3Y){K.bS(x)}}};G.ls=E(){B x=o.2T[o.2K];x==1M?x=\'\':\'\';B y=gY()&&v.gF==1&&v.7d==1&&x!=3Q("2V");J(y?\'\'+3Q("2V")+\' \':\'\')+x};G.wO=E(){B x=o.6c[o.5E];x==1M?x=\'\':\'\';J x};G.gY=E(){J gY()};E gY(){B x=I;if(K){if(o.2b=="3V"){x=K.2V()}if(o.2b=="1w"&&v.7d==1&&7G()>1&&v.gF==1){x=K.2V()}if(o.2b=="3d"&&v.iv==1&&av()>1){x=K.2V()}}J x}E 7G(){if(o.2b=="1w"){J K.7G()}F{J 0}}E av(){if(o.2b=="3d"){J K.av()}F{J 0}};G.7j=E(){J o.3Y?K.7j():o.42};G.3S=E(x){if(K&&(o.2b=="3V"||o.2b=="9G"||L(v.7j))){K.3S()}if(v.py>0){Q(o.2I,{"1d":(o.1P?"1v%":o.9q-v.py)})}if(o.2Z&&v.1Z.vp==1){o.bt.3S()}if(v.lz==1){Ov()}if(o.mh){o.mh.3S()}};G.4a=E(){J K?K.4a():{}};G.eo=E(){K.eo()};G.6S=E(){1p(\'6S\');o.7H=0;o.1y?v.2J=1:\'\';o.U.7s();if(17&&v.OQ!=1){if(17.O(\'(4E)\')==-1){17=17+(17.O(\'?\')==-1?\'?\':\'&\')+\'wd=(4E)\'}}if(17){if(o.3Y){K.2q(17);G.2i()}F{5u(17)}}};if(!L(o.1U)){mX()}if(L(v.1U)){if(v.1U!=\'\'){9j(v.1U,o.1U,v.cM);if(v.m4==1&&!o.1y){1j(o.1U)}}F{v.1U=1X}}E mo(){cH=K?K.5W():\'\'}E wf(17){3h=17.2f(" or ");V(B i=0;i<3h.S;i++){if(3h[i].O(" 9Z ")>-1){kR=3h[i].2f(" 9Z ");3h[i]=kR[4E(0,kR.S-1)]}if(L(v.kS)&&3h[i].O("//")==-1){3h[i]=v.kS+3h[i]}}6I=0}E wk(){mo();if(cH=="8X"||o.3I){o.U.mn()}if(cH!=""){o.U.nq()}}E mX(){if(o.1U){o.1I.3u(o.1U)}o.1U=1V("2k");Q(o.1U,{"4s-2y":"1Q","1J":v.l0,5n:"1J 0.5s"});if(v.lz==1){OY()}F{Q(o.1U,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1c\':\'1v%\',\'1d\':\'1v%\'})}o.1I.1R(o.1U)}E 5u(x,y,wc){2F(ef);v.e3==\'\'?v.e3=\';\':\'\';if(x.O(\'{\')>-1&&x.O(\'}\')>-1&&x.O(v.e3)>-1){B z=x.2f(v.e3);o.8Y=[];V(B i=0;i<z.S;i++){o.6c[i]=z[i].1C(z[i].O("{")+1,z[i].O("}")-1);o.8Y[i]=z[i].1C(z[i].O("}")+1);if(L(v.8D)){if(v.8D==o.6c[i]){o.5E=i}}}x=o.8Y[o.5E]}!L(3h)?3h=[]:\'\';o.kG?2F(o.kG):\'\';x&&x!=\'or\'&&x!=\'x\'?wf(x):\'\';B ft=o.2b;if(3h.S>0){o.2b=kz(3h[6I]);B bM=I;if(wc){bM=H}17=3h[6I];if(17){17=17.1N(/\\(4E\\)/g,2h.4E())}F{17=3h[0]}if(!bM&&x!=\'x\'&&K&&o.2b==ft&&(ft=="cK"||(ft=="9G"&&!o.1k.2a)||(ft=="3V"&&o.1y&&!kJ)||ft=="dm"||ft=="1w"||ft=="3d")){K.2q(17);1p("2q")}F{1p("P2");kp();vG(17)}nE()}if(!y){4p(o.mC);o.mC=7J(wk,o.kL);if(!L(v.3Z)&&v.P4==1&&v.P5==1){v.3Z=\'\'}if(L(v.3Z)){o.U.kq(v.3Z)}if(v.dr==1){if(v.jB==1&&o.1k.2a){}F{if(o.2b=="3V"){Q(o.2I,{"1g":-lb,"1a":-lb})}F{3t(o.2I)}v.1l.1j=0}}}}E nE(x){if(o.f8||x){if(o.d2){K.ex(o.gl)}F{if(o.9e!=o.f8){K.ex(o.4V[o.9e])}}}}E kz(x){B 1A="cK";if(x){if(x.O(".yc")>0){1A="1w"}F if(x.O(".yh")>0){1A="3d"}F if(x.O("w")==0&&x.O("s")==1){1A=o.ws}F if(x.O(\'3V.5V/\')>-1||x.O(\'es.be/\')>-1){if(1D(vF)==\'E\'){1A="3V";if(v.nD==1){B y=\'bW://3P.3V.5V/vi/\'+wK(x)+\'/\';vK(y+\'wI.gX\',E(z){z>1v?v.1U=y+\'wI.gX\':v.1U=y+\'P1.gX\';if(o.2Y){o.2Y[o.9J][\'1U\']=v.1U}v.2J==1||o.1y?\'\':9j(v.1U,o.1U,v.cM)})}}F{1p("No Oy")}}F if(v.9G==1&&x.O(\'9G.5V/\')>-1){1A="9G"}F if(v.dm==1&&x.O(\'Oz.5V\')>-1){1A="dm"}F if(v.wA==1){if(1D(wy)==\'E\'){wy(x)?1A="7r":\'\'}}}o.3Y=1A=="cK"||1A=="1w"||1A=="3d"||1A==o.ws;J 1A}E vK(17,vH){B 3P=1t w7();3P.dI=E(){vH(G.1d)};3P.2q=17}E vG(x){o.2b=kz(x);if(o.3Y){K=1t yt(x,o.2I,I)}if(o.2b=="3V"){K=1t vF(x,o.2I)}if(v.9G==1&&o.2b=="9G"){K=1t OI(x,o.2I)}if(o.2b=="7r"){K=1t OJ(x)}if(o.2b=="dm"){K=1t OM(x,o.2I)}o.R?o.R.Av():\'\';B t=0;if(L(v.1e)){if(o.2O&&v.aN==1&&!o.1y){t=o.2O.8R().t}1B(E(){o.U.3k(t,v.1e)},1v)}}E kp(){if(K){K.4G();K=1X;cH="6P"}if(2Z){2Z.4G();2Z=1X;2Z=1M;o.bt.6u();o.2Z=1X;o.bt=1X}};G.4G=E(){kp()};G.ON=E(){3h=[];kp()};G.5u=E(x,y,z){5u(x,y,z)};G.9j=E(x){9j(x,o.1U,v.cM)};G.2i=E(){if(K){gd=I;kJ=I;if(o.3I){o.2W.2i()}F{K.2i();v.ce==1?o.U.da():\'\'}if(L(2Z)){2Z.2i()}if(o.8j){if(o.3Y){if(o.al>0&&!o.8j.Nf()){o.8j.vC()}}F{o.vA=[];o.R.hP("vy")}}if(o.3Y&&v.E9>-1&&!o.mA&&!o.1k.4f){if(o.al>0){K.En()}}e1()}F{1B(G.2i,4h)}};E e1(){if(v.vu>0&&3h.S>1){if(3k()==0||v.vs==1){2F(o.kG);o.kG=1B(vt,v.vu*2c)}}}E vt(){if(o.1r&&(3k()==0||v.vs==1)&&3w()==0&&!o.gs){if(K){if(K.8y()==0&&6I!=3h.S-1){5X(\'5u vr\')}}}}G.vq=E(1q){if(o.2Z){if(v.1Z.vp==1){if(o.pC[o.2Z]>2){J}}if(1q){1q.9o();1G.1q?1G.1q.7o=H:\'\'}B 1K=K;K.mw(H,o.2Z);2Z.mw(I,o.2I);K=2Z;2Z=1K;K.2i();2Z.2i();js("1Z")}};G.vI=E(){K.2q(17)};G.mT=E(){v.4Q==1?o.4Q.2U("1j"):\'\';o.mP=H};G.fh=E(){if(v.1l.nF){v.1l.nF=I;if(o.R){o.R.rB(1);o.R.m5()}}o.mP=I};G.vJ=E(){if(o.2Z&&o.bt){o.bt.d6()}};G.hQ=E(){if(o.3Y&&o.7z){o.ew=H;K.7z()}};G.aL=E(){if(o.3Y&&o.7y){K.7y()}};G.m7=E(){if(v.cl==1&&L(v.MX)){if(L(o.cl)){o.cl.1m()}F{if(1D(w6)==\'E\'){o.cl=1t w6()}}}gq();if(K){j4(0);K.m7()}};G.eM=E(){o.cl?o.cl.1j():\'\';K?K.eM():\'\'};G.gq=E(x){gq(x)};E gq(x){if(v.N6==1&&2G(v.a3)){if(L(o.a3)){o.a3.1m(x)}F{if(1D(w0)==\'E\'){o.a3=1t w0()}}}}G.2x=E(){if(o.3I){o.2W.2x()}F{K?K.2x():1p("N8")}if(L(o.2Z)){2Z.2x()}};G.kH=E(){kJ=H;o.U.3a(0,I);L(o.1U)?o.U.6r():\'\';5u(\'x\')};G.df=E(){K?K.df():\'\'};G.3a=E(x){if(K){if(o.3I){o.2W.3a(x)}F{K.3a(x);if(v.1Z.on==1){if(2Z){2Z.3a(x)}}}}};G.4n=E(){if(K){K.4n();o.3I?o.2W.4n():\'\';1p("4y")}if(v.1Z.on==1&&v.1Z.bV==1){if(2Z){2Z.4n()}}};G.4D=E(){if(K){K.4D();o.3I?o.2W.4D():\'\';1p("8x")}if(v.1Z.on==1&&v.1Z.bV==1){if(2Z){2Z.4D()}}};G.3m=E(x){K?K.3m(x):\'\';if(v.1Z.on==1){if(v.1Z.bV==1&&2Z){2Z.3m(x)}}if(o.3I){o.2W.3m(x)}};G.my=E(){J K?K.my():I};G.5e=E(){J K?K.5e():I};G.5W=E(){J cH};G.6P=E(){J gd};G.Z=E(){B x=0;if(K){x=3w();if(o.3I){B y=o.2W.3w();y?x=y:\'\'}F{if(3k()>0&&x!=3k()){o.vO=x+0.MV}}J x}F{J 0}};G.1e=E(){B x=0;if(K){x=3k();x==0&&L(v.1e)?x=v.1e*1:\'\';if(o.3I){B y=o.2W.3k();y?x=y:\'\'}}J x};G.8y=E(){J K?K.8y():0};G.cJ=E(){o.3b.cJ=o.3b.cJ?I:H;Q(o.2I,{"2r":(o.3b.cJ?"2E(-1)":"2E(1)")})};G.MU=E(){mX()};G.mY=E(){if(o.3Y){K.4k()}};G.MI=E(x,y){if(x==\'1z\'){if(y==1){aT(v.1f.1z/1v)}if(y==2){aT(-v.1f.1z/1v)}if(y==3){o.K.gD()}}F{if(o.3Y){if(!o.9c[x]){if(x==\'n7\'){o.9c[x]=0}F{o.9c[x]=1}}if(y==1){o.9c[x]+=v.1f[x]/1v}if(y==2){o.9c[x]-=v.1f[x]/1v}if(y==3){if(x==\'n7\'){o.9c[x]=0}F{o.9c[x]=1}}!o.gT?o.gT=[]:\'\';o.gT[x]=x+\'(\'+2z(o.9c[x]*1v)+\'%) \';B cf=\'\';V(B i in o.gT){cf+=o.gT[i]}Q(K.9d(),{\'7X\':cf});o.R.h9(x)}}};G.1z=E(x){aT(x)};E aT(x){if(5Z(x).O(":")>0){B y=x.2f(":");B z0=o.2C/o.3W;B z1=o.K.4a();if(z1.1c>0){z0=z1.1c/z1.1d}B z=y[0]/y[1];if(z0!=z){if(o.3Y){K.dx()}B w2=o.3W*z;B x2=w2/o.2C;B h2=o.2C/z;B y2=h2/o.3W;if(x2<1){o.3b.x0=o.3b.x=3i(x2);o.3b.y=1}F{o.3b.x=1;o.3b.y0=o.3b.y=3i(y2)}Q(o.2I,{"2r":"2E("+o.3b.x+") 2P("+o.3b.y+")"});o.fc=x}}F{o.3b.x+=3i(x);o.3b.y+=3i(x);Q(o.2I,{"2r":"2E("+o.3b.x+") 2P("+o.3b.y+")"})}if(v.1E.MQ==1){if(!o.lL){if(o.3b.x>0||o.3b.y>1){y5(o.2I,\'o.MS\');o.lL=H}}lG()}o.R.h9(\'1z\')};G.gD=E(){if(o.3Y){K.dx()}o.3b.x=o.3b.x0;o.3b.y=o.3b.y0;Q(o.2I,{"2r":"2E("+o.3b.x+") 2P("+o.3b.y+")"});o.R.h9(\'1z\');o.fc=1X;lG()};E lG(){if(o.lL&&v.1E.MT!=1){if(o.3b.x==1&&o.3b.y==1){Q(o.2I,{"1g":0,"1a":0})}}};G.nn=E(x,y){K.nn(x,y)};G.8L=E(){J 8L()};E 8L(){J 3h?(3h.S>0?(3h[6I]?3h[6I]:\'\'):\'\'):\'\'};G.xR=E(){J 3h.S};G.9d=E(){J K?K.9d():I};G.4T=E(){if(o.3Y){K.4T()}};G.lD=E(){K.lD()};E lQ(){B 4t=fZ(v.mv+\'?17=\'+3h[6I]);4t.dI=E(){if(G.fa==4&&G.5W==54){if(G.dz){v.22=G.dz;o.U.9S(\'22\')}}};4t.bs()}};B yt=E(17,26,1Z){B W=1V(v.dr==1?"ys":"bU");B a5;B lR=0;B 1w;B 3K=I;B nu=I;B ma=I;B 7K=I;B bN=-1;B 3d;B 4Y=I;B ws;B nM=I;B 4Z=I;o.4u=I;B 6A=0;B 6U=I;B 28;B NC;B jS=I;B gG=-1;B 9D=-1;B mI;B np;B 9i;B eQ;B ND;B uH=\'bU/pX; NE="NF.NG, NA.40.2"\';B jR=I;Q(W,{\'1n\':\'jb\',\'1c\':\'1v%\',\'1d\':\'1v%\',\'3c-kf\':\'q3\',\'5n\':"7X 0.2s 3B",\'bD-1d\':\'2V\',\'6B-1d\':\'1Q\',\'bD-1c\':\'2V\',\'6B-1c\':\'1Q\'});dx();if(o.1k.6w&&v.2J==1&&v.mb==1){if(!o.1y&&v.5x){41(W,{\'jK\':1})}F{o.2Q=H;o.R?o.R.4n():\'\';41(W,{\'2Q\':1,\'jK\':1,\'2J\':1})}}F{if(o.1k.2a){41(W,{\'jK\':1})}if(!o.1k.tv){41(W,{\'4k\':(v.4k==1&&v.2J==0?\'5c\':\'1Q\')})}}if(v.NH==1){41(W,{"NJ":"yr","NK":"yr"})}41(W,{\'2q\':17,\'x-3r-7z\':\'Bh\',\'yo\':\'H\'});if(v.NM!=1){41(W,{\'yo\':\'H\'})}if(v.NN==1){41(W,{\'1Z\':\'I\'})}if(1Z){W.2J=H;if(v.1Z.bV!=1||v.2J==1){W.2Q=H}}if(v.NO==1){41(W,{\'NP\':\'NI\'})}mm();if(v.Ny==1){B aM=1V("b9");41(aM,{"B3":"no","B7":"H","BM":"H","2q":""});Q(aM,{"1n":"2g","1c":"1v%","1d":"1v%","3q":0});26.1R(aM);B yj=1G.7J(E(){if(aM.eu.1H.fa==="Nx"){1G.4p(yj);Q(aM.mE.8o,{"3N":0,"2S":0});aM.mE.8o.1R(W)}},1v)}F{26.1R(W)}if(!L(17)){17=\'\'}B lw=I;if(o.1k.tv){if(17.O("Nh")>0){lw=H}}if(17.O(".yh")>0){4Z=H;if(!o.3d){if(1D yg!=="1M"){o.3d=1t yg()}}if(L(o.3d)){if(!L(1G.xd)){o.3d.j5()}F{lI()}}}F if(((2H.1w==1&&v.mp!=1)||17.O(".yc")>0)&&!lw&&(o.cw.O("6s")!=-1||L(1G.4b))){3K=H;nu=H;33{if(L(1G.4b)){if(!4b.xJ()||(o.1k.6X&&v.Nm==1&&!o.1k.4f)||(o.1k.6X&&o.1k.4f&&v.y9==1)||(o.1k.j7&&v.Nn==1)){1p(\'6s Nq \',4b.xJ());3K=I}F{if(v.4k==1||v.2J==1||v.xl==1||1Z){b6(I)}}}F{3K=I}}2v(28){3K=I}}F if(17.O("w")==0&&17.O("s")==1&&v.Nt==1){6U=H;qO()}if(o.1k.tv&&v.2J==1&&!3K&&!4Z&&!6U){1B(E(){o.U.k3()},1v)}if(v.8j==1){L(o.8j)?o.8j.ca():\'\';o.8j=1t Nv()};G.lD=E(){lI()};E lI(){4Z=H;if(lx()){if(v.4k==1||v.2J==1||v.xe==1){jN(I)}}F{4Z=I;1p("NS fw tS")}}E jN(x){if(o.3d&&!4Y){o.3d.bM(x,W,17,1Z);L(1G.xd)?4Y=H:\'\'}}E b6(x){1p("6s");if(o.3A.S>1){v.7d=0;v.xb=H}F{v.xb?v.7d=1:\'\'}if(o.8Y.S>1){v.9y=0;v.wW=H}F{v.wW?v.9y=1:\'\'}o.9i=I;bN=-1;9i=[];o.4o?o.4o.QK():\'\';B nm=I;if(v.5x&&v.x7==1){nm=H;v.x7=0}a5={tM:(v.x6==1&&!1Z),QL:(v.4k==1||v.2J==1||1Z||x)&&!nm,dS:60,nB:60,QN:(v.x3>0?v.x3*2c:wY),QO:(v.wZ>0?v.wZ*2c:wY),QP:I};if(v.QR==1){a5.QS=H}if(v.d7==1){B ks=[\'fp\',\'wv\',\'pr\',\'ck\'];B jf=[\'5V.QX.QQ\',\'5V.QG.cX\',\'5V.QF.Qq\',\'5l.w3.Qr\'];B dj={};V(B i=0;i<ks.S;i++){if(v[\'d7\'+ks[i]]==1){dj[jf[i]]={};if(2G(v[\'d7\'+ks[i]+\'l\'])){dj[jf[i]].Qs=v[\'d7\'+ks[i]+\'l\']}if(2G(v[\'d7\'+ks[i]+\'s\'])){dj[jf[i]].Qt=v[\'d7\'+ks[i]+\'s\']}}}a5.Qp=H;a5.Qw=dj}if(v.xj==1){a5[\'Qz\']=E(4t,17){4t.QB=H}}if(L(v.5Q)){if(L(v.5Q.dS)){if(v.5Q.dS>fE){v.5Q.dS=fE}v.5Q.nB=v.5Q.dS}if(L(v.5Q.xH)){v.5Q.nB=v.5Q.dS=v.5Q.xH}if(1D v.5Q=="3c"){V(B X in v.5Q){a5[X]=v.5Q[X]}}}1w=1t 4b(a5);js("1w",1w,1);1w.te(17);1w.QY(W);1w.on(4b.5G.QH,E(){1p("6s QZ")});1w.on(4b.5G.Rj,E(1q,21){!1Z?o.U.k3():\'\'});1w.on(4b.5G.Rl,E(1q,21){if(!1Z&&v.7d==1&&7G()>1){vj();iD();o.R?o.R.gr(o.2K):\'\'}});1w.on(4b.5G.Rm,E(1q,21){iD()});1w.on(4b.5G.Rn,E(1q,21){iD()});1w.on(4b.5G.Ro,E(1q,21){if(!1Z){if(21.fW.4u!=o.4u){o.4u=21.fW.4u;o.R.5g()}o.4u=21.fW.4u;if(o.4u){1p("Rp");o.xB=17.O("?oR")>-1;if(W.1e>0&&W.6v>0){if(W.1e-W.6v<10){if(o.g7>0){if(o.g7==W.6v&&o.xv==W.1e){o.kn++;if(o.kn>2){o.kn=0;o.g7=-1;1w.8G();b6(H);7P()}}F{o.g7=-1}}F{o.g7=W.6v;o.xv=W.1e}}}}}if(v.7d==1){o.2K=1w.jT;o.R?o.R.gr(o.2K):\'\'}jU()});1w.on(4b.5G.Rk,E(1q,21){if(L(21.fA)){!1Z?js("Rr",21.fA.Rt):\'\';if(v.Ru==1){1D xm!=="1M"?xm(21.fA):\'\'}}if(bN>-1){1w.E7=bN;bN=-1}ma=H;tX()});1w.on(4b.5G.Rv,E(1q,21){js("Rw",21,1)});1w.on(4b.5G.Rx,E(1q,21){if(!1Z&&v.9y==1){1B(mt,4h)}});1w.on(4b.5G.Ry,E(1q,21){if(!1Z&&v.9y==1){m0()}});1w.Rz=I;if(v.Rs==1){1w.on(4b.5G.Ri,E(1q,21){if(1D(21)=="3c"){if(21.fA.1A==\'3Z\'){B fu=21.fA.17;if(fu){B st=1w.DK;if(o.cW){o.4o.DA(st+\'R9\'+fu)}F{!9i[st]?9i[st]=[]:\'\';9i[st].2R(fu)}}}}});1w.on(4b.5G.R3,E(1q,21){B x=1w.R4;B y=\'\';V(B i=0;i<x.S;i++){y+=(y!=\'\'?\',\':\'\')+\'[\'+x[i].5L+\']1w\'+i;x[i].6m?o.R5=x[i].5L:\'\'}3l("3Z",y)})}1w.on(4b.5G.R7,E(1q,21){v.1p==1?bF.1p(21):\'\';js(21.1A+\'4b\',21,0,H);o.mW=21;if(21.iX){9z(21.1A){1o 4b.uq.Ra:1p("6s iX uW 28");if(v.nt==1){nr()}F{28=21.fW+\' (\'+21.1A+\')\';o.2m>0||1Z||v.4u==1||6U?\'\':o.2m=3w();1w.8G();if(!1Z){o.K.5X()}}1h;1o 4b.uq.Rd:1p("6s iX K 28, do");1w.Rf();1h;6m:28="6s iX 28, 8G";1w.8G();!1Z?o.K.5X():\'\';1h}}F{1p("6s ",21.1A,21.fW,(21.iC?21.iC.k5:\'\'));js("R0",(21.iC?21.iC.k5:\'\'));if(6A>0){6A=2;mK()}}});7K=H}E iD(){if(!1Z&&v.7d==1&&7G()>1){if(o.2K!=1w.jT){o.2K=1w.jT;o.R?o.R.gr(o.2K):\'\';1p("6s Qm "+o.2K)}if(2G(v.iM)&&o.2K>0){B fq=v.iM.2f(",");V(B k=0;k<fq.S;k++){if(o.2T[o.2K].O(fq[k])>-1){1p(\'Pw 8d\');1w.gC=o.2K-1;o.2K--;1h}}}}}E qO(){if(L(1G.tL)){if(lx()){if(!L(o.ws)){o.ws=1t Py()}ws=1t tL(W,17,3f(v.PA,{tM:H}));nM=H}F{6U=I;1p("fw tS")}}}E tX(){mN()};G.4T=E(){mN()};E mN(){if(v.Af&&o.R){if(W.cZ.S>0){if(v.4T==1){W.cZ[W.cZ.S-1].ej="CU"}F{W.cZ[W.cZ.S-1].ej="3o"}if(!o.4T){o.4T=H;o.R.5g()}}F{if(o.4T){o.4T=I;o.R.5g()}}}}E nr(){1p("PB");!1Z&&o.1r?o.U.2x():\'\';o.U.6r();6A=1;mK(o.1r)}E mK(x){if(6A>0){2F(mI);mI=1B(tc,v.t6*2c)}}E tc(){if(6A>0){1p("PE");if(3K){if(6A==1){1w.te(17)}if(6A==2){1w.8G();b6(H);W.1r()}}F{41(W,{\'2q\':17})}}}W.1T(\'PG\',tl);W.1T(\'28\',mU);W.1T(\'6P\',7P);W.1T(\'1r\',9h);W.1T(\'3y\',gu);W.1T(\'D5\',gU);W.1T(\'gS\',gR);W.1T(\'iP\',gM);W.1T(\'CT\',gH);W.1T(\'D8\',gA);W.1T(\'6t\',bQ);W.1T(\'Dh\',gz);W.1T(\'PH\',uy);W.1T(\'Di\',mR);W.1T(\'Dj\',mS);if(o.1k.6w){W.1T(\'PI\',eo)}E tl(){if(!3K&&!4Z){!1Z?o.U.k3():\'\'}}E eo(){if(W.PC){o.U.bO()}}E mU(){if(!3K&&!4Z){if(W.28){1p(W.28,W.28.k5,W.28.7k);B x=W.28.k5;28=W.28.7k;if(28==\'\'){if(x==1){28="Pk"}if(x==2){28="uW"}if(x==3){28="aK"}if(x==4){28="fw nX"}}1p("Pd k6: ",28)}if(nu&&v.nt==1){28=1M;nr()}if(28!=1M||o.1k.4f){5X()}}}E 5X(){!1Z?o.K.5X():\'\'}E 7P(){!1Z?o.K.7P():\'\'}E 9h(){if(!o.1y&&v.5x){1p(\'Pi 1r\');3y();o.U.2i();J}if(3K&&6A>0){}F{if(!1Z){B 8K=o.U.6Q()&&o.kg!=1;if(8K||9D==-1){B x=I;if(3K){if(L(o.1O)||L(o.4B)){if(8K){}F{1p(\'3y fO\');3y();x=H}}}if(!x){o.K.9h()}}}}}E gu(){if(!jR){1p("Pj");if(o.1r&&o.cr&&!W.6P&&v.uo==1&&!o.8E){1p("uo");ey()}F{!1Z&&!o.Pn&&W.a6?o.K.gu():\'\'}}}E gU(){!1Z?o.K.gU():\'\';if(9D>-1){if(3w()>9D){3y();9D=-1}}}E gR(){!1Z?o.K.gR():\'\'}E gM(){!1Z?o.K.gM():\'\'}E gH(){if(1Z){jM()}F{o.K.gH();mq();if(3K&&6A>0){6A=0;1p("Po up");1w.tx();ey();o.R.2i()}if(L(v.7j)){2L()}1B(us,4h)}}E us(){if(W.9R&&o.6c.S==0&&v.Pq!=0){B at=W.9R;V(i=0;i<at.S;i++){B x=o.K.mg((at[i].6z?at[i].6z+\' (\':\'\')+at[i].uG+(at[i].6z?\')\':\'\'),i);if(x==v.8D){o.5E=o.8a=i}o.6c[i]=x}o.R.hW(o.8a)}if(o.8a>0){bS(o.8a,1)}};G.7j=E(){J(W.jJ/W.dE)};E jM(){if(W.dE>0){Q(26,{"1d":26.1W/(W.jJ/W.dE)-2z(v.1Z.3q)})}F{if(lR<20){1B(jM,1v);lR++}}}E mq(){if(v.lh==1){4p(o.lE);o.lE=7J(lN,1v);lN()}}E lN(){if(W){if(W.dE>0){o.U.uD(W.jJ/W.dE);4p(o.lE)}}}E gz(){!1Z&&!6U?o.K.gz():\'\'}E gA(){!1Z?o.K.gA():\'\'}E bQ(){if(3K&&6A>0){}F{!1Z?o.K.bQ():\'\'}}E uy(){o.U.ux()}E lx(){B jF=1G.uv=1G.uv||1G.Q9;B fC=1G.u1=1G.u1||1G.Qb;B ju=jF&&1D jF.ju===\'E\'&&jF.ju(uH);B vf=!fC||fC.lU&&1D fC.lU.Q6===\'E\'&&1D fC.lU.6u===\'E\';J ju&&vf}B lV="<ac C=\'1J:0.5\'>";E vj(){if(!1Z&&v.7d==1){B x=1w.aw;B q=-1;o.2T=[];if(x.S>1){V(B i=0;i<x.S;i++){if(L(x[i].1d)){B y=o.K.sP(x[i],v.sL);if(o.2T.O(y)>-1||v.Qk==1){if(L(x[i].9L)){B yi=o.2T.O(y);yi>-1?o.2T[yi]+=" "+lV+" &p4;"+2z(x[yi].9L/2c)+\' \'+3Q(\'fL\')+\'</ac>\':\'\';o.2T[i]=y+" "+lV+" &p4;"+2z(x[i].9L/2c)+\' \'+3Q(\'fL\')+\'</ac>\'}}F{o.2T[i]=y}if(L(x[i].tW)){o.7t[i]=x[i].tW[0]}}F if(L(x[i].5L)){o.2T[i]=x[i].5L}F{o.2T[i]=i}if(L(v.4N)&&q==-1){if(v.4N==o.2T[i]){q=i}}if(L(o.4N)){if(o.4N==o.2T[i]){q=i}}}if(v.gF==1){o.2T[x.S]=3Q("2V")}F{1w.DS=0;1w.dH=0}if(v.uA==1||q>-1){1w.dH=0;if(v.gN=="5f"||(!o.1y&&v.4k==0)){1w.lM=q}F{if(v.gN=="DC"){1w.gC=q}}o.2K=q}F{if(v.gF==1){o.2K=1w.aw.S-1}F{o.2K=1w.PO}}if(v.ue>0){1w.dH=x.S-v.ue*1-1}jU()}o.9L=3f(1w.aw[o.2K].9L,0);o.R?o.R.5g():\'\'}}E jU(){if(o.7t.S>0&&v.9y==1){mt();m0()}}E mt(){if(!1Z&&v.9y==1){B x=1w.9R;o.6c=[];B 2j;B 1L=-1;if(x.S>1){V(B i=0;i<x.S;i++){2j=I;if(L(x[i].cQ)&&o.7t.S>0){if(x[i].cQ!=o.7t[o.2K]){V(B j=0;j<o.7t.S;j++){if(o.7t[j]==x[i].cQ){2j=H}}}}if(!2j){o.6c[i]=L(x[i].5L)?o.K.mg(x[i].5L,i):i;if(L(v.8D)){if(v.8D==o.6c[i]){1L=i}}}}}}if(1L>-1){o.5E=1L;1w.ka=1L}}E m0(){if(!1Z){B x=1w.9R;B y=1w.ka;if(y>-1){if(L(x[y].cQ)){if(o.7t.S>0){if(o.7t[o.2K]!=x[y].cQ){V(B i=0;i<x.S;i++){if(x[i].5L==x[y].5L&&x[i].cQ==o.7t[o.2K]){1w.ka=i;y=i;1h}}}}}o.5E=y;1p("6s PT",o.5E);o.R.hW(o.5E)}}};G.bS=E(x,y){bS(x,y)};E bS(x,y){if(W.9R.S>1){W.9R[x].mk=H;W.9R[y==1?0:o.8a].mk=I;o.8a=x;y!=1?W.6v=o.K.Z():\'\'}}E 3w(){if(4Z){J 4Y?o.3d.Z():0}F{J W.6v}};E 3k(){B x=W.1e;if(x==PU){v.4u=1;x=3w()+10;if(o.9v){x<o.9v?x=o.9v:\'\'}o.9v=x}if(4Z&&4Y){x=o.3d.1e()}if(L(v.4l)){if(5I([v.4l],\'-\')){x=x+v.4l*1}F{x=v.4l}}J!m8(x)?x:0}G.2i=E(){B p=H;if(3K&&!ma){if(!7K){b6(H)}1w.tx()}if(4Z&&!4Y){jN(H);p=I}if(6U){if(!nM){qO()}ws.1r();p=I}if(W.C.1g=="-Q2"){G.eM()}p?ey():\'\'};B ME;E ey(){if(17!="1Q"){B pp=W.1r();if(pp!==1M){pp.8m(E(){}).2v(E(28){1p("Q1",28.7k);if(28.7k.O(\'9O\')==-1&&28.7k.O(\'Q0 by\')==-1){if(v.mb==1){1p(\'PY\');o.U.4n();W.1F=0;B m9=W.1r();if(m9){m9.8m(E(){}).2v(E(e){1p("PX",e.7k);if(o.1k.tv&&(3K||4Z)){}F{o.R.2x();o.U.6r();js("PW")}})}}F{o.R.2x();o.U.6r()}}})}}}G.m7=E(){if(o.4B||o.1O){if(o.7v){aL()}if(!o.ew&&o.1k.2a&&o.1k.3r){if(!W.2Q){W.2Q=H;jS=H}Q(W,{"1n":"2g","1a":-5p,"1g":-5p});9D=3w();if(!6U){W.1r()}if(9D==0&&o.2m>0){eQ=o.2m}}}};G.eM=E(){if(!o.ew&&(o.1k.2a||o.1k.3r)){Q(W,{"1n":"jb","1a":0,"1g":0});if(L(v.7j)){2L()}if(jS){!o.2Q?W.2Q=I:\'\';jS=I}if(eQ>0){o.2m=eQ;eQ=0}9D=-1}};G.2x=E(){1p(\'a6\');3y()};E 3y(){if(6U){ws.3y()}F{W.3y()}};G.df=E(){!W.a6?2x():ey()};G.3a=E(x){if(4Z&&4Y){o.3d.3x(x)}F{if(3K){if(v.PN==1&&x>0&&mi()){bN=1w.gC;1w.E7=0}}W.6v=x}};G.4n=E(){W.2Q=H};G.4D=E(){W.2Q=I;if(o.2b=="1w"&&o.1k.4f&&v.1O==1){if(!L(o.E8)){jR=H;W.3y();1B(E(){W.1r();jR=I},10);o.E8=H}}};G.3m=E(x){W.1F=x};G.En=E(){if(o.Ee!=W){B 9O;B 7b;if(o.jO[W]){9O=o.jO[W];7b=o.m6[W]}F{1G.jQ=1G.jQ||1G.PS;if(L(1G.jQ)){33{7b=1t jQ();9O=7b.PR(W);o.jO[W]=9O;o.m6[W]=7b}2v(e){1p(e)}}}if(7b){B gg=7b.PQ();gg.gg.6Y=v.E9;9O.E6(gg);gg.E6(7b.PP);o.mA=H;o.Ee=W}}};G.my=E(){J!W.a6};G.5e=E(){J v.4u==1||6U?H:o.4u};G.9d=E(){J W};G.Ep=E(){41(W,{\'R\':\'1\'});J H};G.4k=E(){41(W,{\'4k\':\'5c\'});if(3K&&!7K){b6(I)}if(4Z&&!4Y){jN(I)}};G.5W=E(){B d0="8X";if(W.a6){d0="a6"}if(W.6P){d0="6P"}J d0};G.mw=E(x,y){1Z=x;y.1R(W);26=y;if(x){if(v.1Z.bV!=1){W.2Q=H}F{if(!o.2Q){W.2Q=I}}jM();if(o.2T.S>0){if(3K){gG=o.2K;1w.dH=0;1w.gC=0}}}F{if(!o.2Q&&v.1Z.bV!=1){W.2Q=I}W.1F=v.1F;mq();if(o.2T.S>0){if(3K){1w.dH=-1;if(gG>-1){gG<1w.aw.S?1w.lM=gG:\'\'}}}}};G.Z=E(){J 3w()};G.1e=E(){J 3k()};G.8y=E(){B x=0;if(W.6y){if(W.6y.S>0){B y=3w();V(B i=0;i<W.6y.S;i++){if((y>=W.6y.1y(i)||y>=W.6y.1y(i)-1v)&&y<=W.6y.4l(i)){x=W.6y.4l(i)}}x==0?x=W.6y.4l(W.6y.S-1):\'\'}}if(L(v.4l)){B ed=v.4l;if(5I([ed],\'-\')){ed=3k()}x>ed?x=ed:\'\'}J x};G.2V=E(){J mi()};E mi(){B x=I;if(3K){if(7K){x=1w.DS}}F if(4Z){if(4Y){x=o.3d.2V()}}J x}G.4a=E(){J{"1c":W.jJ,"1d":W.dE}};G.2q=E(x){if(x){x=x.1N(/\\(4E\\)/g,2h.4E());17=x;o.8A!=2?o.8A=I:\'\';if(4Z){if(4Y){o.3d.9O(x)}}F if(3K){3K&&1w?1w.8G():\'\';b6(H);lW()}F{41(W,{\'2q\':x,\'2J\':0});mm();3y()}}};E mm(){if(o.1k.6X){B y=W.cZ;if(y){V(B i=0;i<y.S;i++){y[i].ej="Q4"}}y=W.9R;if(y){V(i=0;i<y.S;i++){y[i].mk=(i==0?1:0)}}if(1G.Qe){W.1T(\'Ql\',E(1q){o.7z=1q.Qj=="D3";!1Z?o.U.iB():\'\'});W.1T(\'Qi\',E(1q){})}}lW();if(v.mh==1){1D D0!=="1M"?D0(17,W,26):\'\'}}G.7z=E(){W.Qh()};G.7y=E(){aL()};E lW(){if(o.1k.3r){if(L(W.Qg)&&!o.1k.6w){o.7y=H}if(1H.Qf&&!W.Qd){o.7y=H}}}E aL(){if(o.1k.6X){if(W.Qc==="iw-in-iw"){W.CW("zb");o.7v=I}F{W.CW("iw-in-iw");o.7v=H}}F{if(!1H.Qa){6f(\'W.Q8().8m(p => {o.7v = H;}).2v(28 => {o.7v = I;});\')}F{6f(\'1H.Q7().8m(ok =>{o.7v = I;}).2v(28 => {});\')}}};E mR(){o.7v=H};E mS(){o.7v=I};G.DE=E(x){if(4Y){o.3d.DR(x)}};G.DQ=E(x){if(4Y){if(W.6y.S>0){o.3d.Q5(x)}}};G.PL=E(x){if(o.ws){o.ws.DI(ws,x,-1)}};G.Pt=E(x){if(o.ws){o.ws.DI(ws,-1,x)}};G.CS=E(x){if(7K){B y=2z(x);if(x==1w.aw.S){y=-1;1w.dH=-1}if(v.gN=="DC"){1B(bQ,4h);1w.gC=y}if(v.gN=="5f"){1p("6s 5f Pm "+y);1w.lM=y}if(y==-1){o.2K=1w.jT}jU()}};G.kl=E(){J 1w};G.kk=E(){J 4Y?o.3d.Pl():I};G.7G=E(){J 7G()};E 7G(){B x=0;if(7K){if(1w.aw){x=1w.aw.S}}J x}G.av=E(){J av()};G.dx=E(){dx()};E dx(){if(W){if(v.kh==1||v.5N==1){if(v.Pc==1||v.5N==1){Q(W,{\'3c-kf\':\'5N\'})}F{Q(W,{\'3c-kf\':\'D1\'})}}F{Q(W,{\'3c-kf\':\'q3\'})}}}G.3S=E(){2L()};E 2L(){if(v.7j){3l(\'1z\',5Z(v.7j).1N(\'/\',\':\'))}}E av(){B x=0;if(4Y){x=o.3d.aw()}J x}G.DU=E(x){if(7K){1w.ka=2z(x)}};G.nn=E(x,y){if(y=="1w"&&7K&&np){np.Ph(x)}if(y=="Pg"&&7K){if(9i[x]&&o.4o){V(B i=0;i<9i[x].S;i++){o.4o.DA(9i[x][i])}}1B(E(){1w.DK=x},4h)}if(y=="3d"&&4Y){o.3d.Pf(x)}};G.ex=E(x){if(x){W.Pe=x}};G.nK=E(){B x=W.Pr;B y=[];V(B i=0;i<x.S;i++){if(x[i].jZ.k0()==\'7F\'){x[i].5t("cV",nw);y.2R(x[i])}}V(B i=0;i<y.S;i++){W.3u(y[i])}o.nJ=I};G.D7=E(x,y,z){if(x!=\'\'){if(x.O(\' or \')>0){B xx=x.2f(\' or \');x=xx[0]}B 7F=1H.1V(\'7F\');7F.4U(\'2q\',x);7F.4U(\'6z\',y);7F.4U(\'Ps\',\'Dl\');7F.4U(\'ej\',\'CU\');if(z){7F.4U(\'6m\',\'\')}W.1R(7F);7F.1T("cV",nw)}};E nw(e){if(e.6i.6z&&o.4o){V(B i=0;i<o.8S.S;i++){if(o.8S[i]==e.6i.6z){o.4o.lC(i)}}}};G.jq=E(){J 28?28:\'\'};G.4G=E(){4p(o.PJ);3K&&1w?1w.8G():\'\';4Z&&4Y?o.3d.PF():\'\';6U&&ws?ws.2j():\'\';W.5t(\'28\',mU);W.5t(\'6P\',7P);W.5t(\'1r\',9h);W.5t(\'3y\',gu);W.5t(\'D5\',gU);W.5t(\'gS\',gR);W.5t(\'iP\',gM);W.5t(\'CT\',gH);W.5t(\'D8\',gA);W.5t(\'6t\',bQ);W.5t(\'Dh\',gz);W.5t(\'Di\',mR);W.5t(\'Dj\',mS);W.2q=\'\';if(26.jZ=="Br"){26.mE.8o.3u(W)}F{26.3u(W)}W=1X}};B qz=E(){B b=[];B dw=[];B 4q=[];B 6t=I;B h7;B 5O=I;B 1f;B Y;if(o.3J){o.3J.1j();o.3J=1X}B kZ;o.4V=[0.25,0.5,0.75,1,1.25,1.5,2];if(v.1f.Pz==1&&L(v.1f.eZ)){v.1f.eZ=v.1f.eZ.1N(/\\n/ig,\'\');o.4V=v.1f.eZ.2f(",")}o.f8=5I(o.4V,1,H);o.9e==3?o.9e=o.f8:\'\';V(B i in o.ea){if(o.ea.2e(i)){!L(v.1f[i])?v.1f[i]=5:\'\';o[\'Px\'+i]=[\'+ \'+v.1f[i]+\'%\',\'&PM; \'+v.1f[i]+\'%\',(o.ea[i]*1v+\'%\')]}}if(v.1l.bH==1&&o.1k.4f&&v.dG==1){v.1l.1j=0}B kN=I;B 7m=0;B lq=0;B dl=I;B n9=H;B gp;B bg=1t AN();B 1f;B 4c=[];B n4=I;B n2=I;B fs=0;B am=[];if(v.dU.1n=="R-2M"){v.dU.1n="R"}V(B y in v){if(v.2e(y)){if(y.O("hl")==0&&v[y]){!L(v[y].n5)?v[y].n5=v[y].4c:v[y].4c=v[y].n5;if(4c[v[y].4c]){v[y].4c+=v[y].4c}4c[v[y].4c]=y;if(v.dU.1n!="R"){if(v[y].1n=="R-2M"){am.2R([y,v[y].4c]);n4=H}F{if(v[y].1n=="R"||v[y].1n==1M){n4?n2=H:\'\'}}}fs<v[y].4c?fs=v[y].4c:\'\'}}}if(n2){am.Qn(E(a,b){J a[1]-b[1]});V(B i=0;i<am.S;i++){4c[v[am[i][0]].4c]=1X;v[am[i][0]].4c=fs+1;fs++;4c[v[am[i][0]].4c]=am[i][0]}}if(v.1l.1j==1&&v.1l.b7==1){o.1l=1V("2k");o.1I.1R(o.1l);Q(o.1l,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1c\':\'1v%\',\'1d\':\'1v%\',\'5n\':\'1g 0.3s dX-8s\',\'4s-2y\':\'1Q\'})}B 5T=1V("2k");if(v.1l.1j==1&&v.1l.b7==1){o.1l.1R(5T)}F{o.1I.1R(5T)}Q(5T,{\'1n\':\'2g\',\'1a\':0,\'3v\':0,\'1c\':\'1v%\',\'1d\':v.1l.h});5T.cd=E(){!o.1k.2a?o.U.Ed():\'\'};if(v.ow==1){3t(bg.c());3t(5T)}V(B i=1;i<4c.S;i++){if(4c[i]){B y=4c[i];if(y){B 18=v[y].18;B Re=v[y].1j;if(o.1k.2a){if(18=="1F"&&v[y].aW=="6b"){}F{if(18=="1F"&&v.Rc==1&&o.1k.2a){v[y].ei=0}F{if(18=="1F"||(18=="1P"&&v.Rb)){v[y].on=0}}}}if(v[y].1j==1){if(v[y].zZ==1&&L(v[y].kE)){2H[v[y].kE]?v[y].on=0:\'\'}if(v[y].zY==1&&L(v[y].kD)){!2H[v[y].kD]?v[y].on=0:\'\'}}if(v.ow==1){v[y].on=0}if(v[y].on==1){if(18=="2A"||18=="1F"){b[y]=1t C9(y,18);b[y].2L(b[y].s("w"))}F{b[y]=1t Aj(y)}dw.2R(y);if(b[y].g("18")=="22"){if(b[y].s("1u")==\'\'){if(b[y].s("B")!=\'\'){if(!L(v[b[y].s("B")])){b[y].1L("2o",I)}}F{b[y].1L("2o",I)}}}if(b[y].g("18")=="3M"){B lu=b[y].s("2B");if(lu){if(lu.O("2U:")==0&&lu.O(",0/1")>0){B z=lu.2f(",");3l(z[0].1C(4))==0?b[y].9p(0):\'\'}if(5I([lu],"3C")){o.fF=H}}}b[y].1L("1z",b[y].s("1z"))}}}}if(L(v.1f)){if(1D(6q)==\'E\'){1f=1t 6q("1f");v.1f.9E==1?1f.1m():1f.1j()}F{o.R8=H}}if(L(v.Y)){if(1D(6q)==\'E\'){Y=1t 6q("Y");if(L(o.Y)){Y.AE(o.Y);if(v.Y.i0==0||!L(v.Y.i0)){v.Y.9E==0?Y.1j():\'\'}F{Y.1m()}if(v.Y.R1==1){Y.1m()}}F{Y.1j(1)}i1()}}jp();lT();2L(H);3E();n3();n9=I;E Eg(P){B x=0;B R6=I;if(P){if(P.g("18")==\'2A\'){x=4q.1a+P.s("3U")+P.g("1c")/2;if(4q.db!=1X){}F{4q.db=[]}}F{if(4q.db!=1X){B ah=P.g("1c")+P.s("4g")+P.s("3U");if(dg(P)){ah=0}if(P.s("3o")==1&&!P.g("1m")){ah=0}if(P.s("9Y")>0){ah=0}x=bg.g("w")-v.1l.g3*1-ah+P.g("1c")/2+P.s("3U");B i=0;4q.2M-=ah;V(i=0;i<4q.db.S;i++){B ag=b[4q.db[i]];if(ag.s("9Y")>0){Q(ag.c(),{"1a":(ag.g("x0")-ah)})}F{Q(ag.c(),{"1a":(ag.g("x")-ah)})}ag.1L("x0",ag.g("x"))}4q.db.2R(P.g("X"));P.1L(\'cg\',1)}F{if(P.s("3o")==1&&!P.g("1m")){if(P.g("18")=="1F"){if(P.s("1j")==1&&P.s("ei")==1&&dl){7m+=P.g("1c")+P.s("3U")+P.s("4g");dl=I}}}F{if(P.s("9Y")>0){x=4q.1a+P.s("3U")+P.s("4g")}F{B 2j=I;if(P.g("18")=="1F"){if(P.s("1j")==1&&P.s("ei")==1){if(!o.bx&&!o.6Z){2j=H;dl=I}F{if(!dl){7m-=P.g("1c")+P.s("3U")+P.s("4g");dl=H}}}}if(dg(P)){2j=H}if(!2j){4q.1a+=P.g("1c")/2+P.s("3U");x=4q.1a;4q.1a+=P.g("1c")/2+P.s("4g")}F{x=4q.1a}}}}}}J x};G.E1=E(){jp();if(Y&&v.Y.9E&&!o.1y){Y.1m()}};G.Ck=E(){jp()};E jp(){if(o.fF){1D DV==\'E\'?o.3C=1t DV():\'\'}}E mV(P){B 1c=o.1P&&v.1l.dZ==0?o.8z:o.2C;B 1d=o.3W;B 8U=0;if(P!=bg){8U=1c/2+P.s("3U")-P.s("4g")}B b0=1d/2;B mQ=P.g("1c");B jo=P.g("1d");B p=P.s("1n");if(p.O("7L")>-1){8U=o.2C/2+P.s("3U")-P.s("4g")}if(p.O("1g")==0){b0=jo/2+(P.s("Eo")*o.3W/1v)}if(p.O("3v")==0){b0=o.3W-(P==bg?jo:jo/2)-(P.s("Ec")*o.3W/1v)}if(p.O("2M")>-1){8U=o.2C-mQ/2+P.s("3U")-P.s("4g")-(P.s("De")*o.2C/1v)}if(p.O("1a")>-1){8U=mQ/2+P.s("3U")-P.s("4g")+(P.s("f3")*o.2C/1v)}if(p=="7Q"){8U=-o.sr/2+(P.s("f3")*o.sr/1v)+P.s("3U")-P.s("4g");b0=-o.hU/2-(P.s("Ec")*o.hU/1v)+(P.s("Eo")*o.hU/1v)}if(p.O("R")>-1){B cx=Eg(P);8U=(bg?(bg.c()?4X(bg.c().ji):0):0)+cx;if(p=="R-2M"){8U+=7m}if(v.1l.1n=="1g"){b0=v.1l.h/2-(v.ba<0?v.ba:0)}F{b0=1d-v.1l.h/2}}J{x:8U,y:b0+P.s("8c")-P.s("cq")}}E 2L(nx){B w=o.1P&&v.1l.dZ==0?o.8z:o.2C;B h=o.3W;if(v.1l.Rq==1){v.1l.Dg=2G(v.1l.Ek)&&o.bu?v.1l.Ek:v.1l.nb;v.1l.g3=o.2C*v.1l.Dg/1v}F{v.1l.g3=v.1l.nb}Q(bg.c(),{\'1g\':(v.1l.1n=="1g"?0:o.3W-v.1l.h)-v.ba});bg.1L("y0",(o.3W-v.1l.h-v.ba));if(v.1l.dZ==0&&bg){Q(bg.c(),{\'1c\':w,\'1a\':0,\'2S-1a\':0});bg.1L("w",w);if(o.1P){Q(bg.c(),{\'1a\':\'50%\',\'2S-1a\':-w/2})}}4q={"1a":v.1l.g3*1,"2M":(bg.g("w")-v.1l.g3*1)};B nz=I;if(!bg.g("1m")){bg.1L("2o",H);nz=H}B X;V(B i=0;i<dw.S;i++){X=dw[i];if(b[X]){B cc=mV(b[X]);if(cc){if(b[X].s("4C")=="1n"){if(L(o.5B[X])){if(b[X].g("x0")==cc.x&&b[X].g("y0")==cc.y){2O}F{o.5B[X].Df(b[X].g("x0"),cc.x,b[X].g("y0"),cc.y)}}}b[X].1L("x0",cc.x);b[X].1L("y0",cc.y);if(b[X].s("3o")==1&&!b[X].g("1m")&&!nx){ns(b[X])}F{Q(b[X].c(),{"1n":"2g","1a":b[X].g("x0"),"1g":b[X].g("y0")})}}}}if(nz){bg.1L("2o",I)}7m=0;V(X in b){if(b.2e(X)){if(b[X].s("1n")=="R-2M"&&b[X].g("18")!="2A"&&7m>-1){7m=4q.2M-4q.1a}if(b[X].g("18")=="2A"&&bg){B 9s;B ml=b[X].s("3U")+b[X].s("f3")*o.2C/1v;B mr=b[X].s("4g")+b[X].s("De")*o.2C/1v;if(b[X].s("QE")==1){if(b[X].s("QD")==1){9s=(o.2C*b[X].s("w")/1v)-ml-mr}F{9s=b[X].s("w")}}F{if(b[X].s("1n").O("R")>-1){9s=4q.2M-4q.1a-ml-mr;Q(b[X].c(),{"1a":(4X(bg.c().ji)+4q.1a+ml+9s/2)});7m=-1}F{9s=bg.g("w")-ml-mr;Q(b[X].c(),{"1a":(4X(bg.c().ji)+ml+9s/2)})}}b[X].1L("x0",b[X].g("x"));b[X].2L(9s)}}}if(1f){gE(1f)}if(Y){gE(Y)}if(kN||o.1P||lq!=7m){3E()}}E ns(b){B 1a=0;B 1g=0;if(b.s("1n").O("2M")>-1&&b.s("1n").O("R")==-1){1a=o.2C+b.g("1c")+10}if(b.s("1n").O("1a")>-1){1a=-b.g("1c")-10}if(b.s("1n").O("1g")>-1){1g=-b.g("1d")*2}if(b.s("1n").O("3v")>-1||b.s("1n").O("R")>-1){1g=o.3W+b.g("1d")+b.g("1c")+10}if(1a>0){Q(b.c(),{"1a":1a})}if(1g>0){Q(b.c(),{"1g":1g})}}E gE(x){B 1g=-5p;x.DX();B y=o.3W-v.1l.h*(x.s("1n").O("1g")>-1?1:2);if(x==Y&&v.Eb==1){y=o.3W}B fN=y-(o.1P&&!o.1k.2a?(1v+x.s("fK")*1):x.s("fK"))-(x==Y&&x.s("fK")*1==0?x.s("8c"):0);fN<1v?fN=1v:\'\';Q(x.c(),{\'6B-1d\':fN});x.co()?Q(x.co(),{\'6B-1d\':fN}):\'\';if(x.g("1m")){1g=o.3W/2-x.g("1d")/2+x.s("8c")-x.s("cq");if(x.s("1n").O("1g")>-1){1g=x.s("8c")-x.s("cq")}if(x.s("1n").O("3v")>-1){1g=o.3W-(v.1l.1n!=\'1g\'?v.1l.h:0)-x.g("1d")+x.s("8c")-x.s("cq")}1g<0?1g=0:\'\'}if(x.g("X")=="1f"&&o.9t){B CZ=o.2C-x.g("1c")-x.s("4g");if(o.9t>CZ){Q(x.c(),{"1n":"2g","2M":x.s("4g"),"1a":"2V","1g":1g})}F{Q(x.c(),{"1n":"2g","1a":o.9t,"2M":"2V","1g":(o.gL<1g?o.gL:1g)})}}F{if(x.s("1n").O("2M")>-1){Q(x.c(),{"1n":"2g","2M":x.s("4g")-x.s("Qu"),"1a":"2V","1g":1g})}F if(x.s("1n").O("1a")>-1){Q(x.c(),{"1n":"2g","1a":x.s("3U"),"2M":"2V","1g":1g})}F{if(x.g("X")=="Y"&&x.s("CX")==1){Q(x.c(),{"1n":"2g","1a":o.2C/2-x.g("1c")/2+x.s("3U")/2-x.s("4g")/2,"1g":1g})}F{B l=o.2C/2-x.g("1c")/2+x.s("3U")-x.s("4g");Q(x.c(),{"1n":"2g","1a":(l>0?l:0),"1g":1g})}}}x.Qx()};G.du=E(X){B P=b[X];B a=P.g("18");if(a){B d=1t 6o();o.al=d.aq();if(a&&a!=""){l8(P);a=="3y"?o.DH=1:\'\';a=="1r"?o.DH=0:\'\'}}pz()};G.QI=E(z,x,y){V(B X in b){if(b.2e(X)){if(b[X].s(z)==x){b[X].1L(y?"5D":"3t")}}}};G.qq=E(x,s){B y=5J(s,x);J y};E l8(P,1A){o.pB=H;kZ=P;B a=P.g("18");if(a=="1r"){o.U.2i();if(o.2Q&&v.DB==1){o.U.4D();v.DB=0}if(v.1E.on==1&&v.1E.2l==1&&v.1E.nl==1){6d(\'1r\',1)}js("Dq")}F{if(a=="3y"){o.je=0;o.U.2x();if(v.1E.on==1&&v.1E.2l==1&&v.1E.nl==1){6d(\'1r\',0)}js("Dr")}if(a=="2j"){o.U.jc()}}if(a=="Ds"){o.U.3a(0,I)}if(a=="1P"){!o.3I?o.U.7C():\'\'}F{if(a=="Du"){o.U.6T()}}if(a=="2A"){B ld=o.K.1e();B lt=P.g("29")*ld;if(v.3R>0){ld-=v.3R*1;lt=P.g("29")*ld+v.3R*1}if(v.Dw>0){if(v.Dw/ld<=1-P.g("29")){J}}js(a,lt);o.U.3a(lt,H);if(o.2O){o.2O.ne(lt,ld);o.2m>0?o.2m=1M:\'\'}js("hB",lt)}if(a=="1F"){B x=P.g("29");x<0.Pa?x=0:\'\';x>1?x=1:\'\';if(P.s("aW")=="6b"){x=3i(x*o.4V.5k(-1)[0]).p3(1);o.U.aB(x,1)}F{if(o.4S&&v.qy==1){3F.8q("qx",x);if(P.g("29")>0||o.1k.6w||v.jW==0){3F.mB("eU")}F{3F.8q("eU",1)}}o.U.3m(x)}}if(a=="4y"){if(o.4S&&!o.1k.6w&&v.jW==1){3F.8q("eU",1)}o.U.4n();if(v.1E.2l==1&&v.1E.DD==1){6d(\'4y\',0)}}F{if(a=="8x"){if(o.4S){3F.mB("eU")}o.U.4D();if(v.1E.2l==1&&v.1E.DD==1){6d(\'4y\',1)}}}if(a.O("Z")==0){P.P9()?P.fH():P.On()}if(a=="i2"){o.K.rH()}if(a=="1z+"){o.K.aT(0.1)}if(a=="1z-"){o.K.aT(-0.1)}if(a=="1z"){o.K.aT(0)}if(a=="4u"){3l("oE");P.1L("rz",1);P.1L("fo",1)}if(a=="3C"){js("3C");mu()}if(a=="1f"){o.9t=1M;if(1f){if(!1f.g("1m")){1f.1m()}F{1f.1j()}}}if(a=="Y"){if(o.de==a){J}o.R.eP()}if(a=="5f"){o.R.af()}if(a=="aZ"){o.R.c9()}if(a=="3M"){if(P.s("dq")==1&&P.s("2B")!=""){B x=46(P.s("2B"));if(o.de==a+x){J}if(x.O(\'{Z}\')>-1){x=x.1N(\'{Z}\',(L(o.2O)?o.2O.8R().t:o.K.Z()))}if(x.O(\'{3g}\')>-1){x=x.1N(\'{3g}\',o.K.8L())}if(x.O(\'{22}\')>-1){x=x.1N(\'{22}\',v.22.1N(/,/ig," "))}if(x=="7z"){o.K.hQ()}if(x.O(\'6n\')==0){if(P.s("6n")>0){o.U.3a(o.9K?o.9K.Nw():P.s("6n"))}}if(x.O(\'Nu\')==0){if(o.9K){o.9K.Ns()}}if(x=="Nr"){o.U.3a(P.s("f3")*o.K.1e()/1v);!o.1r?o.U.2i():\'\'}P.s("DN")==1?o.U.2x():\'\';B y=x.2f(",");if(x.O("2U:")==0){B z=x.1C(4).2f(";");V(B i=0;i<z.S;i++){y=z[i].2f(",");if(y.S>1){if(y[0]==\'3x\'){if(v.1E.2l==1&&v.1E.Ng==1){6d(\'3x\',y[1]>0?1:0)}}3l(y[0],y[1],P);js("hB",y[1]);y[1]==\'0/1\'||y[1]==\'1/0\'?qo():\'\'}F{if(y[0]=="DP"){B ss=3l(y[0]);if(ss){if(ss.O("21")>-1){if(v.Nl==1){B 3P=1H.1V(\'3P\');3P.4U(\'2q\',ss);Q(3P,{1n:"lA",2M:(L(v.j6)?v.j6:20),3v:(L(v.j6)?v.j6:20),1c:0,5n:"1c 0.5s CV-Nj(.75,-0.5,0,1.75)"});3P.C.4W=D4;1H.8o.1R(3P);1B(E(){Q(3P,{1c:(L(v.D6)?v.D6:54)})},1);3P.cd=E(){G.4e.3u(G)}}if(v.Np==1){B a=1V("a");a.7n=ss;a.8p=y[0]+".gX";a.29()}}}F{1p(y[0]+" 28")}}F{3l(y[0])}}}}F{if(x.O("js:")==0){if(x.O("(")>0&&x.O(")")>0){6f(x.1C(3))}F{6f(y[0].1C(3)+\'(\'+(L(y[1])?\'"\'+y[1]+\'"\':\'\')+(L(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}}if(x.O("1q:")==0){lY(x.1C(6),o.K.Z())}if(x.O("3C:")==0&&o.3C){o.3C.2U(x.1C(6))}if(x.O("m1:")==0&&o.4Q){3l("m1",x.1C(7))}if(x.O("4J")==0||x.O("/")==0||x.O("?")==0||x.O("17:")==0){x.O("17:")==0?x=x.1C(4):\'\';1G.8f(x,P.s("DT"))}if(x.O("8p")==0){o.U.j1()}if(x=="2U:7y"){o.K.aL()}}if(x.O("1f#")>-1){if(1f){B si=x.1C(9).2f(",");if(1f.g("1m")&&1f.g("8f")==si[0]){o.9t=1M;o.gL=1M;1f.1j()}F{o.9t=P.g("x")-P.g("1c")/2;o.gL=P.g("y")+P.g("h");V(B i=0;i<si.S;i++){i==0?1f.1m():\'\';1f.8f(si[i])}Y?Y.NB():\'\'}}}if(x.O("1f:")>-1&&v.1f.Nz==1){if(!o.3J){o.3J=1t Ne()}if(v.1f.e6==1){if(1A=="5m"){o.3J.1m(x)}F{o.3J.d6(x)}}F{if(!1A){o.3J.d6(x)}}}if(x=="yU"){o.U.bX();o.md=0;P.1L("3t");B bl=5J("2B","6C");if(bl){bl.1L("3t")}}if(x=="6C"){P.4O("OK");P.s("hv")?1G.6L.7n=46(P.s("hv")):\'\'}}}};G.22=E(t){B y=I;V(B x in b){if(b.2e(x)){if(b[x].g("18")=="22"){if(b[x].s("B")==t||t=="22"){if(b[x].s("1j")==1&&b[x].s("r6")==1&&o.1r){y=H}if(v[t]==\'\'||y){b[x].1L("2o",I)}F{b[x].1L("2o",H)}b[x].4O(v[t])}}}}mf()};G.DY=E(){mf()};G.m5=E(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="3M"){if(b[x].s("1A")=="1u"){b[x].7B()}}}}};E mf(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="3M"){if(b[x].s("1A")=="1u"){b[x].zg(H)}}}}}E mu(){if(L(o.3C)){o.3C.Nd()}}G.Ea=E(){mu()};G.E4=E(){if(v.22!=\'\'){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="22"){B y=I;if(!b[x].g("1m")){y=H;b[x].1L("2o",H)}b[x].4O(v.22);if(y){b[x].1L("2o",I)}}}}}};G.E5=E(){lT()};E lT(){if(v.8W){if(1D(v.8W)=="3c"){V(B x in v.8W){if(v.8W.2e(x)){gx(x,v.8W[x])}}}}};G.Eq=E(y,z){gx(y,z)};G.Ej=E(x){if(b[x]){b[x].rV()}};G.E3=E(){V(B x in b){if(b.2e(x)){if(b[x].g("rZ")){b[x].rV()}}}};E gx(y,z){if(y){V(B x in b){if(b.2e(x)){if(b[x].g("rZ")){if(b[x].s("3T")==y){if((!b[x].g("1m")||b[x].s("3o")==1)&&!dg(b[x])){b[x].1L("z8");b[x].1L("2o",H)}b[x].gx(z)}}}}}};G.3S=E(){2L()};G.El=E(){2L(H)};G.Ef=E(){gE(1f)};G.DX=E(){gE(Y)};G.2i=E(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="1r"){b[x].On()}}}o.a3?o.a3.1j():\'\';nC();o.1r=H;3E()};G.2x=E(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="3y"||b[x].g("18")=="2j"){b[x].fH()}}}if(Y){if(v.Y.yG==1&&!Y.9I()){Y.1m()}}o.1r=I;G.8b();3E();if(v.1l.1j==1&&v.1l.dO==1){dn(H)}};G.4n=E(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="4y"){b[x].On()}G.3m(0)}}3E()};G.4D=E(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="8x"){b[x].fH()}}}if(v.1F<0.1){v.1F=0.5;o.U.3m(v.1F)}F{G.3m(v.1F)}3E()};G.3m=E(1F,y){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="1F"){if(b[x].s("aW")!="6b"){b[x].5q(1F,1,(y=="no"?y:H))}}if(b[x].g("18")=="4y"){b[x].rA(1F)}}}3E()};G.7C=E(){B bl=5J("18","1P");if(bl){bl.On();bl.1L("1z",bl.s("1z"))}3E();kN?1B(3E,4h):\'\';d4();nh()};G.6T=E(){B bl=5J("18","1P");if(bl){bl.fH()}2L();4p(o.eV);3E();nh()};E nh(){if(o.9t){o.9t=1M;o.gL=1M;1f.1j()}}G.7P=E(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="1r"){b[x].rX()}}}};G.iU=E(){3E()};G.Ei=E(){nC()};E nC(){if(Y){if(Y.g("1m")&&v.Y.lo==1){o.R.a4()}}}E 3E(){V(B x in b){if(b.2e(x)){if(b[x].g("18")!="bL"){9W(b[x])}}}9W(bg);if(lq!=7m){lq=7m;2L()}if(v.1l.1j==1&&v.1l.b7==1){dR(!o.cC&&!o.4i&&!o.1P&&o.1r&&v.1l.bH!=1&&!o.3I)}};E eK(){B 1m=5O&&v.1l.fi==1;if(!o.1r&&v.1l.1j==1&&v.1l.dO==1){1m=I}if(1m){V(B x in b){if(b.2e(x)){if(b[x].g("18")!="bL"){9W(b[x],I)}}}Q(o.1I,{"9g":"6m"});o.gK=H;9W(bg,I);if(bg.g("1m")){fh()}dR(I)}}E dn(){B 1j=o.1r&&v.1l.fi==1&&!o.3j;if(o.aV&&v.1l.MR==1){1j=I}if(!o.1r&&v.1l.1j==1&&v.1l.dO==1){1j=H}if(1f){if(1f.g("1m")&&o.MK){1j=I}}if(o.3I){1j=I}if(1j){V(B x in b){if(b.2e(x)){if(b[x].g("18")!="bL"){9W(b[x],H)}}}9W(bg,H);if(!bg.g("1m")){5O=H;o.K.mT();if(o.1r){Q(o.1I,{"9g":"1Q"});o.gK=I}}dR(H)}}E d4(){if(v.1l.fi==1){if(v.1l.bH==1&&!o.1P&&!o.8Z){}F{4p(o.eV);o.eV=7J(dn,((v.1l.7f>0?v.1l.7f:v.1l.AK)*2c))}}}E 9W(P,9x){B 1j=I;B 1m=I;B 9w=I;if(v.1l.1j==1){if((!o.cC&&!o.4i&&!o.1P&&o.1r&&v.1l.bH!=1&&!o.3I)||(o.1P&&5O&&!o.gK)||(o.U.cD()&&o.6P&&!o.4i)){1j=H;1m=I;9w=H}F{1j=I;1m=H}if(L(9x)&&!o.3I){1j=9x;1m=!1j}if(v.1l.1j==1&&v.1l.b7==1&&(P.s("1n").O("R")==0||P.s("18")=="2A")){1j=I;1m=H}if(v.1l.dO==1&&!o.1r){1j=H;1m=I;9w=I}if(v.1l.MJ==1&&!o.5c&&o.1r){1j=I;1m=H}}F{if(P.s("1j")!=1){1m=H}}if(1m&&!o.gK){Q(o.1I,{"9g":"6m"});o.gK=H}B a=P.g("18");if(a=="3M"&&P.s("1n").O("R")==-1){1j=I;1m=H}if(o.3I){if(a=="2A"){if(o.K.1e()==-1){1j=H;1m=I}}}B n0=I;B hp=dg(P);if(P.s("1j")==1){if(P.s("MH")==1){if(9w||9x||(o.1r&&!o.4i)){!9w&&!9x?\'\':hp=H}}if(P.s("MG")==1){if(!9w&&!9x){hp=H}}if(P.s("MN")==1){if(o.1r&&!o.4i){hp=H}}if(P.s("A4")==1||P.s("A6")==1||P.s("zW")==1){kN=H}}if(hp){1j=H;1m=I}F{!1j?1m=H:\'\'}if(P.s("18")=="1F"){if(P.s("1j")==1&&P.s("ei")==1){1j=H;1m=I;if(!9w&&(o.6Z||o.bx)&&!9x&&P.s("bd")!=1){1j=I;1m=H}F{n0=H}}}if(o.8E||(!o.1y&&v.1l.1j==1&&v.1l.mG==1)||(!o.5c&&v.1l.1j==1&&v.1l.zU==1)){if(P.s("1n").O("R")>-1||P.s("1n").O("3v")>-1){1j=H;1m=I}if(v.1l.bH==1&&!o.1P){1j=I;1m=H}}if(1f){if(1f.g("1m")&&v.1f.9E!=1){9w=I;9x=I}}if(Y&&o.4w){if(v.Y.Nc==1){if(o.4w.CQ()){J}}}if(a=="3C"){if(L(o.3C)){if(o.3C.9I()){1j=H;1m=I;P.1L("4C","1Q")}}}if(a=="Y"||a=="5f"||a=="aZ"||P.s("A9")==1){if(Y){if(Y.9I()&&P.s("A9")!=0){1j=H;1m=I;P.1L("4C","1Q")}}F{1j=H;1m=I}}if(o.Nb==1){1j=H;1m=I}if(n0){B cc=mV(P);if(cc){cc.y>0?P.1L("y0",cc.y):\'\';Q(P.c(),{"1n":"2g","1g":P.g("y0")})}}if(1j){lH(P,(n9?H:I))}if(1m){zP(P)}if(P==bg){if(!1j&&1m){fh();5D(5T);5O=I;gp==0?js("ui",1):\'\';gp=1;o.4R&&o.8e?o.4R.1m():\'\'}if(1j&&!1m&&!o.3I){o.K.mT();ak();3t(5T);5O=H;gp==1?js("ui",0):\'\';gp=0;o.4R&&o.8e?o.4R.1j():\'\'}if(1f){if(1f.tb()){if(!1f.g("1m")){1m&&!1j?1f.1m():\'\'}F{!1m&&1j?1f.1j(2):\'\'}}}if(Y){if(v.Y.9E==1&&!Y.9I()){if(1m||o.8E){if(v.Y.A8==1&&o.1P){}F{if(!Y.g("1m")){if(v.Y.A7==1){!o.1r?Y.1m():\'\'}F{Y.1m()}}}}F{if(1j&&Y.g("1m")){Y.1j()}}}}}};E dg(P){B x=I;B a=P.g("18");if(P.s("1j")==1){if(P.s("r6")==1){o.1r?x=H:\'\'}if(P.s("dO")==1){!o.1r?x=H:\'\'}if(P.s("c5")==1){x=H}F{if(P.s("N4")==1){if(o.1k.9k){P.1L("c5",1);x=H}}if(P.s("N3")==1){if(o.1k.2a){P.1L("c5",1);x=H}}}if(P.s("A6")==1){if(o.2C>P.s("A5")){P.1L("bd",1);x=H}F{P.1L("bd",0)}}if(P.s("N2")==1&&!6t){x=H;o.lv=1}if(P.s("A4")==1){if(o.2C<=P.s("A3")){P.1L("bd",1);x=H}F{P.1L("bd",0)}}if(P.s("N1")==1){o.1y?x=H:\'\'}B t=o.K.Z();B d=o.K.1e();if(P.s("yS")==1&&P.s("A2")>0){if(t>=P.s("A2")){x=H}}if(P.s("yR")==1&&P.s("A1")>0){if(t<P.s("A1")){x=H}}if(P.s("yP")==1&&P.s("A0")>0){if(t<d-P.s("A0")||d==0){x=H}}if(P.s("N0")==1){if(Y){if(!Y.aQ()){x=H}}}if(P.s("MZ")==1){if(o.1y||!o.2O||o.K.5e()){x=H}if(o.2O){if(o.2O.8R().t==0){x=H}}}if(P.s("mG")==1){!o.1y?x=H:\'\'}if(P.s("iu")>0){x=H}if(P.s("zZ")==1){if(L(P.s("kE"))){2H[P.s("kE")]?x=H:\'\'}}if(P.s("MY")==1){if(!L(P.s("8W"))){x=H}}if(P.s("zY")==1){if(L(P.s("kD"))){!2H[P.s("kD")]?x=H:\'\'}}if(P.s("NQ")==1&&o.1k.4f){!o.1y||o.kC?x=H:\'\'}if(P.s("NR")==1){!o.K.6P()?x=H:\'\'}if(P.s("Ow")==1){!o.K.5e()?x=H:\'\'}if(P.s("OH")==1){!o.4i?x=H:\'\'}if(P.s("OG")==1){!o.1P?x=H:\'\'}if(P.s("zW")==1){o.1P?x=H:\'\'}if(P.s("OE")==1){!o.2Q?x=H:\'\'}if(P.s("Ox")==1){o.K.5e()&&o.K.8L().O("?oR")==-1?x=H:\'\'}if(P.s("Cf")==1){5U(o.1U)?x=H:\'\'}if(P.s("zU")==1){!o.5c?x=H:\'\'}if(P.s("OD")==1){o.5c?x=H:\'\'}if(P.s("OC")==1){o.la?x=H:\'\'}if(P.s("OB")==1){!o.la?x=H:\'\'}if(P.s("zu")==1){if(P.g("eq")){x=H}}if(P.s("OA")==1){!o.ab?x=H:\'\'}if(P.s("OF")==1){o.ab?x=H:\'\'}if(P.s("OP")==1){if(v.4k==1&&v.jw==1){if(o.2b=="3V"&&!L(v.1U)&&v.nD==0){if(!o.1y||o.K.5W()=="6P"){if(v.1U==\'\'){}F{x=H}}}}}}if(a=="3M"){B lu=P.s("2B");if(lu){if(lu=="2U:7z"||lu=="7z"){if(!o.7z&&!o.ew){x=H}}if(lu=="2U:7y"){if(!o.7y||(!o.1y&&v.4k==0)){x=H}}if(lu=="2U:zS"){if(!o.la){x=H}}if(lu.O("4T")>-1){if(!o.4T){x=H}}if(5I([lu],"6n")&&!5I([lu],"js:")&&P.s("c5")!=1){B sk=I;if(L(v.6n)){if(!o.9K){1D zR==\'E\'?o.9K=1t zR():\'\'}if(o.9K){sk=o.9K.zQ(P)}}!sk?x=H:\'\'}}}if(a=="Y"||a=="5f"||a=="aZ"){if(Y){if(Y.9I()){x=H}}F{x=H}}if(a=="1f"){if(1f){if(1f.9I()){x=H;o.2b!=\'1w\'?P.1L("4C","1Q"):\'\'}}F{x=H}}if(P.g("1A")=="1u"){if(P.g("S")==0){x=H}}if(P.g("1f#")){if(!P.g("1L#3H")){x=H}}if(P.s("2W")==1){B cb=1H.6M("nH"+v.id);if((o.K.1e()==0&&o.K.Z()==0)||!o.3Y||!5U(cb)||!o.nI){x=H}}if(P.s("s6")==1){!x?P.1L("s6",1):\'\'}if(a=="1e"){if(o.K.5e()){x=H}}if(P.g("X")=="r7"&&o.1k.2a){if(o.8E&&o.1k.a9){x=H}}J x}E lH(P,nc){if(P.g("1m")){if(o.8Z||P.s("4C")=="1Q"||nc){P.1L("2o",I)}F{zO(P)}P.1L("1m",I)}};E zP(P){if(!P.g("1m")){if(P.s("4C")=="1Q"||o.8Z){P.1L("2o",H);if(o.8Z){P.1L("1J",1)}if(P.g("18")=="1F"){if(o.er){ns(P)}}}F{zN(P)}if(P.s("18")=="1F"){o.R.3m(o.2Q?0:v.1F)}if(P.s("18")=="2A"){o.U.nq()}P.1L("1m",H)}};E zO(P){nk(P.g("X"));B 4A="cX|";B 4m="0|";B 1j=1;B a=P.s("4C");if(P.s("zM")==1){4A=\'\';4m=\'\'}B p=P.s("1n");B et=P.g("2E");2G(P.s("kB"))?p=P.s("kB"):\'\';if(a=="1z"){4A+="1z|";4m+="0|"}if(a=="1n"){if(p.O("2M")>-1&&p.O("R")==-1){4A+="x|";4m+=4X(o.2C+P.g("1c")/2*et)+"|"}if(p.O("1a")>-1){4A+="x|";4m+=4X(-P.g("1c")/2)*et+"|"}if(p.O("1g")>-1){4A+="y|";4m+=(-P.g("1d")/2)*et+"|"}if(p.O("3v")>-1||p.O("R")>-1||p=="7Q"){4A+="y|";if(P.g("18")=="2A"||P.g("18")=="1F"){4m+=4X(o.3W+P.s("h")+(P.s("h")<20?20-P.s("h"):0))+"|"}F{4m+=4X(o.3W+P.g("1d")/2)+"|"}}if(p=="7L"){4A+="1z|";4m+="0|"}}B m=1t ax({"mc":P,"me":P.g("X"),"1A":4A.1C(0,4A.S-1),"to":4m.1C(0,4m.S-1),"1j":1j})};E zN(P){nk(P.g("X"));B 4A="";B 4m="";B a=P.s("4C");B p=P.s("1n");2G(P.s("kB"))?p=P.s("kB"):\'\';if(P.g("1J")!=1&&P.s("zM")!=1){4A="cX|";4m=(P.g("X")==\'bg\'?v.1l.a:"1")+"|"}if(a=="1z"){if(P.g("2E")!=P.s("1z")){4A+="1z|";4m+=P.s("1z")+"|"}}if(a=="1n"){if(p=="7L"){if(P.g("2E")!=P.s("1z")){4A+="1z|";4m+=P.s("1z")+"|"}}F{if(p.O("R")>-1){if(P.g("y")!=P.g("y0")){4A+="y|";4m+=P.g("y0")+"|"}}F{4A+="x|y|";4m+=P.g("x0")+"|"+P.g("y0")+"|"}}}if(4A!=""&&4m!=""){B m=1t ax({mc:P,me:P.g("X"),1A:4A.1C(0,4A.S-1),to:4m.1C(0,4m.S-1),1m:1})}F{P.1L("2o",H)}};G.f7=E(X,1A,nc){B 3S=I;B 2j=I;B P=b[X];B 18=P.g("18");B 2B=P.s("2B");if(1A=="5m"){if(o.er){if(18=="1F"||18=="4y"||18=="8x"){o.6Z=H;o.bx=H;3S=H;3E();if(v.dU.zL==1){B bl=5J("18","2A");if(bl){3t(bl.c())}}}}if(1f&&v.1f.e6==1&&((18=="1f"||2B.O("zK")==0)||2B.O("1f:")==0)){2F(o.lJ);if(!1f.g("1m")||kZ!=P){l8(P,1A);o.de=18+2B;1B(E(){o.de=1X},4h)}}if(Y&&v.Y.e6==1&&18=="Y"){2F(o.lP);if(!Y.g("1m")||kZ!=P){l8(P,1A);o.de=18;1B(E(){o.de=1X},4h)}}}if(1A=="8s"){if(o.er){if(18=="1F"||18=="4y"||18=="8x"){o.6Z=I;o.bx=H;1B(E(){if(!o.6Z){o.bx=I;V(B x in b){if(b.2e(x)){if(!5O){if(b[x].g("18")=="1F"){lH(b[x]);2L()}}if(b[x].g("18")=="2A"){if(v.dU.zL==1){5D(b[x].c())}}}}}},4h)}}if(18=="2A"){o.U.5q(1)}if(v.1f.e6==1&&((18=="1f"||2B.O("zK")==0)||2B.O("1f:")==0)){2F(o.lJ);o.lJ=1B(E(){if(!o.3j){ak(1)}},(v.1f.l1>0?v.1f.l1*2c:2c))}if(Y&&v.Y.e6==1&&18=="Y"){2F(o.lP);o.lP=1B(E(){if(!o.3j){Y.g("1m")?Y.1j(1):\'\'}},(v.Y.l1>0?v.Y.l1*2c:2c))}}if(3S){1B(2L,10)}};G.iZ=E(){if(o.53&&!o.1P&&!o.8Z){o.U.53(I);o.53=I}if(o.1U){if(v.kX>-1&&5U(o.1U)){Q(o.1U,{1J:v.l0})}}if(o.1r&&v.zI==1&&v.OZ!=0){o.U.2x()}if(v.1l.7f>0){2F(o.zJ);o.zJ=1B(3E,v.1l.7f*2c)}F{3E()}};G.AF=E(){if(o.1U){if(v.kX>-1&&5U(o.1U)){Q(o.1U,{1J:v.kX})}}if(!o.1r&&v.zI==1){o.U.2i()}3E();dR(I)};G.ch=E(8u,8w){B y;V(B x in b){if(b.2e(x)){y=b[x].g("18");if(y=="2A"||y=="1F"){b[x].ch(8u,8w)}}}};G.pv=E(){if(v.1l.1j==1){if(v.1l.bH==1&&!o.1P){J}if((!o.4i||o.1k.2a)&&o.K.5W()=="8X"){o.4i=H;3E();o.1k.2a?1B(E(){o.4i=I},4h):\'\'}if(v.1l.fi==1){eK();d4()}dR(I)}};G.c8=E(8u,8w){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="2A"||b[x].g("18")=="1F"){b[x].c8(8u,8w)}}}};G.e8=E(Z,1e,zH){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="2A"){b[x].5q(Z,1e,zH)}if(b[x].g("18")=="Z"){h1(b[x],Z,1e)}if(b[x].s("z3")==1){b[x].rH()}if(b[x].s("z4")==1){b[x].BO(Z,1e)}if(b[x].s("yN")==1){if(b[x].s("yz")==1&&!b[x].g("1m")&&5O){}F{if(b[x].g("1m")==dg(b[x])){3E()}}}}}};E dR(x){if(v.1l.1j==1){x?ak():\'\';if(v.1l.b7==1){if(!o.1r&&v.1l.dO==1){x=H}if(x&&!o.mx){Q(o.1l,{"1g":bg.h()})}if(!x&&o.mx){Q(o.1l,{"1g":0})}o.mx=x}}}E fh(){5O=I;o.K.fh();if(o.lr){o.lr=I;2L();1B(2L,g5)}}E h1(x,Z,1e){if(v.3R>0){Z-=v.3R*1;1e-=v.3R*1}B y=3w(Z);if(x.s("zE")=="1"){y=3w(1e-Z)}if(x.s("OX")=="1"){if(x.s("OW")=="1"){y=y+(1e>0?\' \'+3Q(x.s("OV"))+\' \'+3w(1e):\'\')}F{Z==0?y=3w(1e):\'\'}}x.4O(y)}G.nL=E(Z,1e){B x=5J("18","2A");if(x){x.B9(Z,1e)}};G.eS=E(y){if(o.K.1e()>0){B x=5J("18","2A");if(x){x.eS(y)}}};G.7s=E(){if(!6t){if(v.dr==1){2F(h7);h7=1B(7s,4h)}F{7s()}}};E 7s(){if(!6t){js("OU");6t=H;B x=5J("18","bL");if(x){x.Cg();if(v.AH==1&&o.1r){2F(o.Aa);o.Aa=1B(Ab,(v.zV>0?v.zV:1)*2c)}}o.lv?3E():\'\'}}E Ab(){if(o.1r&&6t){o.U.6r()}}G.At=E(y){V(B x in b){if(x==y){b[x].1L("3t")}}};G.8b=E(){2F(h7);if(6t){js("6y");B x=5J("18","bL");if(x){x.fv();if(v.AH==1&&o.1r){o.U.da()}}6t=I;o.lv?3E():\'\'}};G.eL=E(){B x=5J("2B","1F gv");if(x){x.1L("5D");x.4O(3Q(\'1F\')+\' \'+(o.2Q?0:2h.sH(v.1F*1v))+\'%\');2F(o.eL);o.eL=1B(AG,2c)}};E AG(){B x=5J("2B","1F gv");if(x){x.4O(\'\');x.1L("3t");2F(o.eL)}}G.3a=E(Z,1e){if(v.3R>0){Z-=v.3R*1;1e-=v.3R*1}V(B x in b){if(b.2e(x)){if(b[x].s("on")==1){if(b[x].g("18")=="2A"){1e>0?b[x].1L("29",Z/1e):\'\';b[x].Ba()}if(b[x].g("18")=="Z"){h1(b[x],Z,1e)}if(b[x].g("18")=="4u"){b[x].1L("rz",0.5);b[x].1L("fo",0)}}}}};G.3k=E(Z,1e){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="1e"){if(v.3R>0){1e-=v.3R*1}b[x].4O(3w(1e))}if(b[x].g("18")=="2A"){b[x].5q(Z,1e);b[x].Cr(1e)}if(b[x].g("18")=="Z"){h1(b[x],Z,1e)}}}};G.6q=E(){if(!o.3J){1f.g("1m")?1f.1j():1f.1m()}};G.ar=E(){if(1f){if(o.3J){J o.3J.5U()||1f.g("1m")}F{J 1f.g("1m")?H:I}}F{J I}};G.h9=E(x){if(1f){1f.ea(x)}};G.ak=E(){ak()};G.Oc=E(x){if(1f){1f.O9(x)}};G.Dx=E(){if(1f){1f.O8()}};G.Dy=E(x){if(1f){J 1f.O7(x)}};E ak(x){if(1f){1f.g("1m")?1f.1j(x):\'\'}o.3J?o.3J.1j():\'\'};G.a4=E(){if(Y){if(Y.g("1m")){Y.1j(1)}F{Y.1m()}}};G.eP=E(x){if(Y){if(Y.g("1m")&&x!=1){x!=2?Y.1j():\'\'}F{1B(E(){Y.1m()},1v)}}};G.eC=E(){if(Y){J Y.g("1m")?H:I}F{J I}};G.9l=E(x){J Y?Y.g(x):\'\'};G.aX=E(x){if(Y){Y.AE(x)}};G.AC=E(x){if(Y){Y.O6(x)}};G.af=E(){if(Y){Y.af()}};G.nG=E(){if(Y){Y.nG()}};G.i1=E(){i1()};E i1(){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="5f"){Q(b[x].c(),{"1J":(!Y.aQ()?0.5:1)})}if(b[x].g("18")=="aZ"){Q(b[x].c(),{"1J":(!Y.hY()?0.5:1)})}}}}G.aQ=E(){if(Y){J Y.aQ()}F{J I}};G.hY=E(){if(Y){J Y.hY()}F{J I}};G.dW=E(){if(Y){J Y.dW()}F{J I}};G.ny=E(){if(Y){Y.ny()}};G.c9=E(){if(Y){Y.c9()}};G.AB=E(x){if(x&&Y){Y.NZ(x)}};G.Az=E(x){if(x&&Y){Y.NV(x)}};G.Ay=E(x){if(x&&Y){Q(Y.co(),{"Ot":"1Q","3N-2M":Y.s("9b")});1H.6M(x).1R(Y.co());3t(Y.c())}};G.Or=E(){};G.Ax=E(x){if(1f){1f.6G();1f.g("1m")?1B(E(){1f.1j()},54):\'\'}};G.gr=E(){if(1f){1f.6G()}if(o.3J){o.3J.bw()}};G.iB=E(x){if(1f){1f.hQ()}2L();3E()};G.hP=E(x){if(1f){1f.i5(x);1f.g("1m")?1f.1j():\'\'}if(o.3J){o.3J.bw()}x=="6b"?n3():\'\'};E n3(){if(o.d2){B x=3i(o.gl/o.4V.5k(-1)[0],1).p3(2);V(B i in b){if(b.2e(i)){if(b[i].s("aW")=="6b"&&o.gl){b[i].5q(x,1)}if(b[i].s("2B")=="2U:6b,1.0"){b[i].rA(x)}}}}}G.hW=E(x){if(1f){1f.i5("b4")}if(o.3J){o.3J.bw()}};G.Oo=E(){if(1f){1f.lC();1f.g("1m")?1B(E(){1f.1j()},54):\'\'}if(o.3J){o.3J.bw()}if(o.3I&&o.3Y){o.2W.7M()}};G.Aw=E(){o.3J?o.3J.1j():\'\';if(1f){1f.Aw()}};G.Om=E(i6,2o,8t){V(B x in b){if(b.2e(x)){if(b[x].g("18")=="1f"){if(b[x].s("d5")==1){b[x].Ce()}}if(b[x].g("zm")=="1f#"+i6){b[x].1L("1L#3H",2o);if(b[x].g("1A")=="1u"){if(8t){b[x].4O(nv(8t))}}F{if(v.1f[\'1f\'+i6+\'18\']=="3Z"){if(8t==3Q("fG")){b[x].9p(0)}F{b[x].9p(1)}}2L()}9W(b[x])}}}};G.Av=E(){if(1f){1f.6G();1f.i5("b4");1f.i5("8p")}};G.kO=E(){B x=5J("18","2A");if(x){x.kO()}};G.3S=E(){2L();if(5O){o.lr=H}};G.rB=E(x){if(!5O||x==1){2L();3E()}F{v.1l.nF=H}};G.nA=E(){B b=5J("1A","Q");if(b){b.Cd()}};G.5g=E(){3E();2L();3E();if(o.8E){3t(5T)}F{!5O?5D(5T):\'\'}};G.D2=E(1q){if(aJ==v.id&&v.1E.on==1){B x=1q.An;B y=I;if(x==1M){x=1q.Am}if(L(o.1O)||L(o.6N)||o.md==1){J I}if(o.1r&&v.1E.fO==1){y=H}if(((v.1E.bf==1&&x==32)||(v.1E.Oi==1&&x==13))&&(o.4M||o.4i||y)){if(v.1E.2l==1){6d(\'1r\',o.1r?0:1)}o.U.df();1q.aD();J I}!v.1E.hA?v.1E.hA=0.2:\'\';!v.1E.1z?v.1E.1z=5:\'\';if(v.1E.Au==1&&(o.4M||y)){if(o.K.1e()>0){V(B i=48;i<58;i++){if(x==i){o.U.3a((o.K.1e()*(x-48)*10)/1v,H)}}}}if(x==39&&(o.4M||y)){hK(v.1E.n1)}if(x==37&&(o.4M||y)){hE(v.1E.n1)}if(x==38&&(o.4M||y)){hK(v.1E.n8)}if(x==40&&(o.4M||y)){hE(v.1E.n8)}if(x==RA&&(o.4M||y)){hK(v.1E.Ap)}if(x==Pb&&(o.4M||y)){hE(v.1E.Ap)}}};E 5J(y,z){V(B x in b){if(b.2e(x)){if(b[x].s(y)==z){J b[x]}}}}E hK(x){if(x=="5f"){if(o.Y){o.R.af()}F{x="3x"}}if(x=="3x"){if(o.K.1e()>0){B sk=o.K.Z()+3i(v.1E.3x);if(sk<o.K.1e()){o.U.3a(sk,H);js("hB",sk)}}}if(x=="1F"){o.U.3m(3i(v.1F)+3i(v.1E.hA));1q.aD()}if(x=="1z"){o.K.1z(v.1E.1z/1v);1q.aD()}if(v.1E.2l==1){6d(x,1)}}E hE(x){if(x=="5f"){if(o.Y){o.R.c9()}F{x="3x"}}if(x=="3x"){if(o.K.1e()>0&&o.1y){B sk=o.K.Z()-v.1E.3x>=0?o.K.Z()-v.1E.3x:0;o.U.3a(sk,H);js("hB",sk)}}if(x=="1F"){o.U.3m(3i(v.1F)-3i(v.1E.hA));1q.aD()}if(x=="1z"){o.K.1z(-v.1E.1z/1v);1q.aD()}if(v.1E.2l==1){6d(x,0)}};G.Dd=E(1q){if(aJ==v.id){B x=1q.An;if(x==1M){x=1q.Am}if(x==57){if(v.1p==1){}}if(o.1P&&x==27){o.U.6T()}if(L(o.1O)||L(o.6N)){J I}if(v.1E.f==1&&x==70&&v.dr!=1&&(o.4M||o.4i)){if(v.1E.2l==1){6d(\'1P\',o.1P?0:1)}o.1P?o.U.6T():o.U.7C()}if(v.1E.m==1&&x==77&&(o.4M||o.4i)){if(v.1E.2l==1){6d(\'4y\',o.2Q?1:0)}o.2Q?o.U.4D():o.U.4n()}}};G.4G=E(){4p(o.eV);V(B x in o){if(x.O("1b")==0&&x.O("zy")>-1){4p(o[x])}}V(B i=0;i<dw.S;i++){X=dw[i];if(b[X]){b[X].4G()}}if(1f){1f.4G()}if(Y){Y.4G()}bg.4G();if(5T.4e==o.1I){o.1I.3u(5T)}F{o.1l?o.1l.3u(5T):\'\'}};G.eK=E(){eK()};G.dn=E(){dn();3E()};G.d4=E(){d4()};G.pi=E(){J 5O}};B Aj=E(X){B i;B C=[];B w;B h;B rD=0;B bg;B hm;B 7e;B jP=0;B 3H=H;B zx=I;B 2E=1;B 2P=1;B 23;B eA;B 2n;B 6j;B 18;B 7T=\'\';B x0;B y0;B on;B 5m=I;B aa=I;B g6=0;B UD;B UI=0;B cg=0;B yL=0;B eW=0;B hI=I;B zh=I;B eq=I;B 3o=I;B eN;B d5;B h8;B rC=I;C=8F(C,dD.P);C=8F(C,v[X]);B U=[C.18];18=U[0];L(C.Ai)?U[1]=C.Ai:\'\';L(C.Ah)?U[1]=C.Ah:\'\';L(C.22)?C.1u=C.22:\'\';if(2G(C.yx)){o.bu?C.1z=C.yx:\'\'}if(18=="3C"){o.fF=H}if(L(C.2B)){if(C.1A=="1u"&&C.2B!=\'\'){if(L(v[C.2B+\'1u\'])){C.1u=v[C.2B+\'1u\']}}if(C.2B.O("1f#")==0){7T=C.2B;if(C.2n==\'\'&&7T.O(",")==-1){C.2n=3Q(v.1f[\'1f\'+7T.1C(9)+\'18\'])}}if(C.2B.O("4T")>-1){v.Af=H}if(C.2B.O("3C:")>-1){o.fF=H}if(C.2B=="UL"){C.Uw=1t UX(C)}}B 5A=C.2n?C.2n.2f("///"):[];if(C.z7==1){C.1A="1u";C.1u=fM(0)+(U.S>1?\'///\'+fM(1):\'\');if(2G(C.8C)){C.1S=C.8C}}C.it=[];C.il=[];B rb=0;B 2l=1t g9();B 1i=1t g9();B aC=1t g9();B V3=1t g9();B fU=0;B 8l;if(C.1A=="1u"){if(C.3T){if(L(v[C.3T+\'1u\'])){C.1u=v[C.3T+\'1u\']}}if(L(C.1u)){2l[0]=46(C.1u);C.hr=C.1u.S;B lF=[\'/\',\'|\',\'-\'];lF.O(C.1u.1C(-1))>-1?C.rL=C.1u.1C(-1):\'\';lF.O(C.1u.1C(0,1))>-1?C.s9=C.1u.1C(0,1):\'\';if(18=="Z"||18=="1e"){if(C.1u.O(\'0:\')==0){C.hj=H}if(C.1u.2f(":").S==3){C.ze=H}F{if(C.1u.O(\'fj:fj\')>-1){C.zd=H}}if(C.hG==1){v.hG=1}}if(C.zE==1&&C.1u.O("-")==0){C.zc=H}if(C.1u.O("///")>0&&(18=="3M"||C.z7==1)){C.cN=C.1u.2f("///");C.1u=2l[0]=C.cN[0]}}if(v.lS==1){1B(7B,1v);1B(7B,4h);1B(7B,2c)}}F{if(L(C.1i)){2l[0]=C.1i;if(2l[0].O("///")>0&&2l[0].O("cm")==-1){2l=C.1i.2f("///")}if(L(C.hf)){2l[1]=C.hf}if(C.ho==1){if(2G(C.zD)){2l.2R(C.zD);fU=2l.S-1}}}}if(18=="3M"){if(C.V1==1&&L(C.hv)){C.r3=C.2B}}B 1b=1V("2k");if(C.1n==\'7Q\'){o.7Q?o.7Q.1R(1b):1B(E(){o.7Q.1R(1b)},1v)}F{if(5I([C.1n],"1b")&&v.1l.1j==1&&v.1l.b7==1){o.1l.1R(1b)}F{o.1I.1R(1b)}if(18=="bL"&&C.UZ==1){1b.C.4W=yT}}if(C.z4==1){C.g1=1t UY(C,1b)}B hm=1V("2k");1b.1R(hm);B bv=1V("2k");Q(bv,{"1n":"2g","1a":0,"1g":0});1b.1R(bv);Q(1b,{"1n":"2g","1a":0,"1g":0,"1J":1,"aF":"j3","kF":"fb"});if(2G(C.3T)){41(1b,{"id":(v.id+"4j"+"hl"+C.3T)})}if(C.z3==1||C.zw==1){Q(bv,{"5n":"2r 0.2s 3B"})}if(2l.S>0){V(i=0;i<2l.S;i++){1i[i]=1V("2k");Q(1i[i],{"1n":"2g","1g":0,"1a":0,"cR":"1Q","1J":C.a,"5n":"1J 0.1s 3B"});if(C.dM>C.1z){Q(1i[i],{"5n":"1J 0.1s 3B,2r 0.1s 3B"})}if(C.1A=="dT"&&C.2q!=\'\'){if(2G(C.3T)){41(1i[i],{"id":(v.id+"4j"+"1b"+"4j"+C.3T+"4j"+"1i")});if(v[C.3T+\'2q\']){C.2q=v[C.3T+\'2q\']}}if(C.2q.O(".oX")>-1||C.2q.O(".gX")>-1||C.2q.O(".7w")>-1||C.2q.O("cm")>-1){C.2q.O("//")==-1&&C.2q.O("cm")==-1?C.2q=\'//\'+C.2q:\'\';B z=1V("3P");C.hF=1;z.1T("cV",qW);z.2q=C.2q;1i[i].1R(z);C.w=1i[i].1W;C.h=1i[i].2D;if(C.z2>0){Q(z,{1d:C.z2})}}}if(C.1A=="1u"){Q(1i[i],{"1S":(C.1S),"aF":C.ia*3f(v.b8,1),"kw":fl(C.5j),"iL-fS":C.ic+\'px\',"3N":"0 cY 0 cY","fB-bf":"jj"});if(o.bu){if(2G(C.yZ)){Q(1i[i],{"aF":C.yZ*3f(v.b8,1),})}}if(C.29==1){if(C.1u.O("<a ")>-1||X=="ae"){Q(1i[i],{"cR":"2V"})}}if(C.yX==1){Q(1i[i],{"5j-yY":"yX"})}if(C.yW){Q(1i[i],{"kF":C.yW+"em"})}2l[i]==\'4u\'?2l[i]=3Q("4u"):\'\';1i[i].2w=s5(2l[i]);1B(rI,1v);C.w=1i[i].1W;C.h=1i[i].2D;if(2G(C.3T)){41(1i[i],{"id":(v.id+"ib"+C.3T+"UO")})}}if(C.1A=="Q"){o.1y?1B(s7,54):\'\'}B 7c=2l[i].4F();if(7c.O(\'B:\')==0){7c=3f(1G[7c.1C(4)],\'\')}B hX=7c.O(\'<2N\')>-1||7c.O(\'<UT\')>-1;if(C.1A=="2N"&&(7c.O(\'<g>\')>-1||hX)){if(18=="4y"||18=="3M"){7c=7c.1N(/hi/g,\'hi\'+v.id+X)}if(7c.O(\'4s\')>-1){as(1i[i])}1i[i].2w=(!hX?"<2N 1c=\'20\' 1d=\'20\' 5F:5z=\'4J://5v.w3.5l/aR/5z\' 5F=\'4J://5v.w3.5l/5p/2N\'>":\'\')+7c+(!hX?"</2N>":\'\');1i[i].1W>20?C.w=1i[i].1W:\'\';1i[i].2D>20?C.h=1i[i].2D:\'\';Q(1i[i],{"1c":C.w,"1d":C.h});if(C.8C!=-1){i7(1i,C.8C)}if(2G(C.3T)){41(1i[i],{"id":(v.id+"ib"+C.3T+"UQ"+i)})}}bv.1R(1i[i]);i>0?1j(1i[i]):\'\'}8i();h8?qW():\'\';if(C.2B=="2W"){C.2W=1;C.1j=1;o.2W?1i[0].2w=o.2W.au(C.8C!=-1?C.8C:\'#3z\'):\'\';if(o.1k.2a){1i[0].yV=sc;1i[0].Uu=8g;1i[0].lZ=se}F{1i[0].dY=a7;1i[0].e7=8g;1i[0].f4=bA}}F{if((bg.1W*C.1z<35||bg.2D*C.1z<35)&&C.1A!=\'1u\'){qV();as(7e)}F{as(bg)}}if(18=="3M"){B lu=\'\';if(C.dq==1&&L(C.2B)){lu=C.2B;if(lu.O("2U:")==0){B 1K=lu.1C(4).2f(",");if(1K.S==2){B m3=1K[1].2f("/");if(m3.S==2){1K[0]==\'hd\'?1K[0]="4N":\'\';if(v[1K[0]]==m3[1]){C.a=1;Q(1i[0],{"1J":C.a})}}}}if(lu=="yU"||lu=="6C"){o.U.d9();1b.C.4W=yT;o.md=1}}if((C.1j==1&&(C.yS==1||C.yR==1||C.yP==1))||lu.O("6n")==0){C.yN=1;if(5I([C.1n],"1b")){C.yz=1}}}if(18=="1f"&&C.d5==1){d5=1t yM(1b,bg,C)}if(C.29==0){qS(1b)}if(C.hF==1){1j(bg)}if(C.23==1){ku()}if(C.1n.O("2M")>-1){cg=1}if(C.1n.O("1g")>-1){yL=1}if(C.1n.O("3v")>-1||C.1n.O("1b")>-1){eW=1}2L();B t=\'\';if(C.94!=0){t+="i2("+C.94+"sa)"}if(C.U3==1){t+=" 2E(-1)"}if(C.U6==1){t+=" 2P(-1)"}if(t!=\'\'){Q(bv,{"2r":t})}if(18=="bL"){fv()}B 1K=[];B i;if(18=="Y"){1K=[\'fe\',\'yH\',\'i0\',\'yG\',\'yF\',\'iH\'];V(i=0;i<1K.S;i++){if(L(C[1K[i]])&&!L(v.Y[1K[i]])){v.Y[1K[i]]=C[1K[i]]}}}if(18=="22"){1K=[\'sC\',\'yD\',\'yC\'];V(i=0;i<1K.S;i++){if(L(C[1K[i]])&&!L(2H[1K[i]])){v[1K[i]]=C[1K[i]]}}}C.hw==1?7x():\'\';if(18=="3M"&&C.on==0){3t(1b)}if(C.1j==1&&C.iu>0){1B(yB,C.iu*2c)}}E yB(){C.iu=-1;o.R.5g()}E qV(){if(7e){7e.4e.3u(7e)}7e=1V("2k");Q(7e,{"1n":"2g","1g":0,"1a":0,"1c":C.1A=="dT"?bg.1W:(bg.1W>35?bg.1W:35)*C.yA,"1d":C.1A=="dT"?bg.2D:(bg.2D>35?bg.2D:35)*C.sf});C=4d(C,\'e9\',\'e9\');1b.1R(7e)}E as(x){if(18.O("Z")==0&&U.S==1){C.29=0}if(18=="3M"&&C.dq==0){C.29=0}if(C.29==1){if(C.gk==1){Q(x,{"9g":"4s"})}Q(x,{"cR":"2V"});if(o.1k.2a){x.1T("aa",E(e){se(e)});x.1T("jV",E(e){sc(e)});x.1T("jX",E(e){z5(e)})}if(v.9k==1||!o.1k.2a){x.cd=ds}if(v.1l.eb==1||C.eb==1){Q(x,{"2u-1S":"#sd","1J":0.5})}}F{Q(x,{"9g":"6m"})}if(!o.1k.2a){x.dY=a7;x.e7=8g}if(C.3o==1||C.23==1){x.f4=bA}}E se(e){js("U9"+X);e.9o();aa=H}E sc(e){C.yO==1?a7():\'\';e.9o()}E z5(e){e.9o();e.aD();C.yO==1?8g():\'\';if(!aa){ds(e)}aa=I}E 8i(){if(bg){bg.4e.3u(bg)}bg=1V("2k");Q(bg,{"1n":"2g","1g":0,"1a":0});if(2G(C.3T)){41(bg,{"id":(v.id+"ib"+C.3T+"Ua")})}w=C.w;h=C.h;C.d1=-1;C.8K=-1;C=4d(C,\'2S\',\'2S\');C=4d(C,\'bq\',\'bq\');if(C.dv&&o.bu){if(C.dv!=\'0 0 0 0\'){C=4d(C,\'bq\',\'dv\')}}if(C.1A=="1u"){w=1i[rb].1W;h=1i[rb].2D;if(C.rd>0){w<C.rd?w=C.rd:\'\'}}C=4d(C,\'ec\',\'ec\');C=4d(C,\'z6\',\'z6\');if(2G(C.3T)&&L(v.3M)&&C.18=="3M"){if(1D(v.3M)==\'3c\'){V(B i=0;i<dB.9V(v.3M).S;i++){if(v.3M[i][C.3T]){if(v.3M[i][C.3T]=="fG"){C.on=0}F{B 1K=v.3M[i][C.3T].2f(":");if(1K[0]=="2S-1a"){if(1K[1].O("%")>0){C.f3=2z(1K[1])}F{C.3U=2z(1K[1])}}}}}}}C.h=h;C.w=w;if(C.bg==1){h=h+C.9n+C.bi;w=w+C.7R+C.9b;C.h=h;C.w=w;if(C.1A=="1u"){C.eH=1i[0].2D}}F{C.5i=0}Q(bg,{"1c":(C.zn==1?zB:w),"1d":h,"sg":(C.h5*h)/2,"2u":7Y(C.5d,C.5i),"5n":"2u .1s 3B, 2r .1s 3B"+(2G(C.hc)?\', 7X .1s 3B\':\'\')});if(C.1A=="dT"){Q(bg,{"1c":w,"1d":h,"sg":(C.h5*h/C.1z)/2,})}if(C.CE==1){so(bg,C.5d,C.CD,C.CC)}if(C.sh==1){Q(bg,{"3q":"8Q 9U "+C.sj})}if(C.9B==1){Q(bg,{\'kI-7X\':\'9B(c7)\'})}hm.1R(bg)}E 2L(){B d1=(-bg.2D/2);B 8K=(-bg.1W/2);if(d1!=C.d1||8K!=C.8K){Q(bg,{"1g":(-bg.2D/2),"1a":(-bg.1W/2)});C.d1=d1;C.8K=8K}if(7e){B x=C.1A=="dT"?bg.1W:(bg.1W>35?bg.1W:35);B y=C.1A=="dT"?bg.2D:(bg.2D>35?bg.2D:35);Q(7e,{"1g":(-y/2)+C.CG-C.CF,"1a":(-x/2)+C.Ub-C.Ur})}V(B i=0;i<2l.S;i++){B it=C.1A=="2N"?2h.4P(2z(1i[i].C.1d))/2:2h.4P(1i[i].2D)/2;B il=C.1A=="2N"?2z(1i[i].C.1c)/2:1i[i].1W/2;if(it!=C.it[i]||il!=C.il[i]){Q(1i[i],{"1g":-it,"1a":-il});if(bg){Q(1i[i],{"1g":(4X(1i[i].C.1g)+C.9n/2-C.bi/2+C.Uq/2+C.Um/2),"1a":(4X(1i[i].C.1a)+C.7R/2-C.9b/2+C.Uk/2+C.Ud/2)})}C.it[i]=it;C.il[i]=il}}}E a7(){B i;5m=H;if(C.aC==1){if(on&&L(C.hf)){i=1}F{i=0}if(8l&&aC.S>2){i=2}if(aC[i]){hq();1m(1i[aC[i]])}}if(C.bg==1){Q(bg,{"2u":7Y(rn(C.bK,C.5d),rn(C.b3,C.5i))});if(2G(C.hc)){Q(bg,{"7X":"ro("+C.hc+")"})}}if(C.7Z>-1&&!zx){V(i=0;i<2l.S;i++){if(1i[i].C.5r!="3o"){Q(1i[i],{"1J":C.7Z})}}}if(C.ht!=-1){i7(1i,C.ht)}if(C.zw==1){g6+=45;gy(1i[0],g6)}if(C.dM>C.1z&&C.dM>-1){1z(C.dM)}if(18=="1f"&&o.R.ar()){}F{if(C.23==1&&C.hw!=1){B x=5A.S>1&&!on?5A[1]:5A[0];if(x){if(x.O(\'B:\')==0){2n.2w=1G[x.1C(4)];7x()}}1m(23);Q(23,{"1J":1})}}if(18=="4y"){o.U.53(H);o.53=H}o.aV=H;o.R.f7(X,"5m")}E 8g(){5m=I;B i;if(C.aC==1){if(on&&L(C.hf)){i=1}F{i=0}if(8l&&aC.S>2){i=2}hq();1m(1i[i])}if(C.bg==1){Q(bg,{"2u":7Y(C.5d,C.5i)});if(2G(C.hc)){Q(bg,{"7X":"ro(1)"})}}if(C.7Z>-1){V(i=0;i<2l.S;i++){if(1i[i].C.5r!="3o"){Q(1i[i],{"1J":C.a})}}}if(C.dM>-1){1z(C.1z)}if(C.ht!=-1){i7(1i,(C.8C==-1?\'#3z\':C.8C))}if(18=="4y"&&!o.1P){o.U.53(I);o.53=I}rq();o.aV=I;o.R?o.R.f7(X,"8s"):\'\'}E rq(){if(C.23==1&&C.hw!=1){1j(23);Q(23,{"1J":0})}}E ds(e){e?e.7o=H:\'\';if(!hI){o.R.du(X);if(18=="3M"){hD()}rq();if(C.Uh==1){g6+=45;gy(1i[0],g6)}eq=H;if(C.zu==1||(X=="r7"&&C.1j==1&&C.r6==1)){o.R.5g()}}};G.zt=E(){ds()};E hD(){if(2l){if(2l.S>1){if(on==H){1m(1i[0]);1j(1i[1])}F{1m(1i[1]);1j(1i[0])}}if(C.23==1&&5A.S>1){2n.2w=o.ni+(on==H?5A[0]:5A[1])+o.f9;7x()}}if(L(C.r3)){if(on==H){C.2B=C.r3}F{C.2B=C.hv}}hn();on=on!=H;if(C.2B){if(C.2B.O(",0/1")>-1){js(C.2B,on?1:0)}}if(C.bg==1&&L(C.r0)){if(C.r0!=-1){if(on){C.zs=C.5d;C.5d=C.r0}F{C.5d=C.zs}8i();as(bg);2L();if(C.1A=="1u"){7B()}F{1z(C.1z)}}}}E hn(){if(L(C.cN)){if(C.cN.S>1){if(on==H){4O(C.cN[0])}F{4O(C.cN[1])}}}}E rX(1q){1q.7o=H;o.R.du(X)}E hq(){V(B i=0;i<2l.S;i++){if(1i[i].C.5r!="3o"){Q(1i[i],{"1J":C.a});1j(1i[i])}}}E rI(1u){if(1i[0]){if(1i[0].1W>o.2C-C.3U-C.4g-C.7R-C.9b){if(C.qX==1){if(!1u){1u=1i[0].2w}1i[0].2w=\'<qX>\'+1u+\'</qX>\'}F{Q(1i[0],{"fB-bf":"o7"})}Q(1i[0],{"1c":o.2C-C.3U-C.4g-C.7R-C.9b})}}}E qW(){if(bg){h8=I;C.hF=0;1j(bg);if(1i[0]){C.w=1i[0].1W*C.1z;C.h=1i[0].2D*C.1z;1z(C.1z)}C.8y=0;8i();qV();as(7e);1m(bg);2L();o.R.3S();if(!5U(1b)){3t(1b)}}F{h8=H}}E Cw(1q){1q.7o=H}E bA(){if(!o.1k.2a&&!o.aV){a7()}7x()}E 1z(x){if(x>0){Q(bg,{"2r":"1z("+x+")"});V(i=0;i<2l.S;i++){Q(1i[i],{"2r":"1z("+x+")"})}if(C.g1){C.g1.1z(x)}2E=x;2P=x}}E ku(){23=1V("2k");Q(23,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1d\':\'2V\',"1J":0,"5n":"1J 0.1s 3B"});eA=1V("2k");C=4d(C,\'eB\',\'eB\');C=4d(C,\'zr\',\'zr\');Q(eA,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1c\':\'1v%\',\'1d\':30,\'2u-1S\':C.eT,\'1J\':C.eF,\'3q-8J\':C.pa});2n=1V("2k");Q(2n,{\'1n\':\'2g\',\'1a\':C.oS,\'1g\':C.kv,\'1S\':C.p6,\'5j-pe\':fl(C.pd),\'5j-4a\':C.pc*3f(v.b8,1),"iL-fS":C.pb+\'px\',"2A-1d":"1"});if(C.2n){if(C.2n.O("B:")==0){C.zq=H}}if(!C.zq){Q(2n,{\'fB-bf\':\'jj\'})}if(C.cI==1){6j=1V("2k");6j.2w=\'<2N 1c="c7" 1d="p9" AU="0 0 8 6" 7a="1.1" 5F="4J://5v.w3.5l/5p/2N" 5F:5z="4J://5v.w3.5l/aR/5z"><cF id="AS" AR="1Q" 5N="#\'+C.eT.1N("#","")+\'" 5N-AQ="AP" b5="0 0 8 0 4 6"></cF></2N>\'}if(C.hw==1){Q(23,{"1J":1});as(23)}F{qS(23)}1b.1R(23);2n.2w=o.ni+(C.2n==\'\'?3Q(18):5A[0])+o.f9;23.1R(eA);23.1R(2n);if(C.cI==1){23.1R(6j);B rS=o.rr?\'-c7\':\'-p9\';B ps=C.VJ;if(!L(ps)){ps=\'\'}B tp=ps.O("1g")>-1;if(tp){gy(6j,\'-VK\')}Q(6j,{\'1n\':\'2g\',\'2M\':(ps.O("2M")>-1?10*C.1z:\'2V\'),\'1a\':(ps.O("1a")>-1?10*C.1z:(ps==\'\'||ps==\'1g\'?\'50%\':\'2V\')),\'2S-1a\':(ps==\'\'||ps==\'1g\'?\'-zo\':0),\'3v\':(tp?\'2V\':rS),\'1g\':(tp?rS:\'2V\'),\'1J\':C.eF})}7x()}E 7x(){if(C.23==1){Q(23,{"1g":(eW==1?-h-23.2D+3:-23.2D/2)+C.VN-C.VO,"1a":(cg==1?-2n.1W:(eW==1?-w/2:+2n.1W))-(eW==1?0:2n.1W/2+5)+C.VP-C.VQ,"1d":C.kv+2n.2D+C.oT,"1c":C.oS+2n.1W+C.AW});Q(eA,{\'1d\':23.2D});23.C.4W="2c"}}G.c=E(){J 1b};G.s=E(x){J C[x]};G.ss=E(x,x2){J L(C[x])?C[x][x2]:I};G.g=E(x){9z(x){1o"1c":J w;1h;1o"1d":J h;1h;1o"h":J 3f(C.eH,h);1h;1o"x":J 4X(1b.C.1a);1h;1o"y":J 4X(1b.C.1g);1h;1o"1J":J 1b.C.1J?1b.C.1J:1;1h;1o"1m":J 3H;1h;1o"2E":J 2E;1h;1o"2P":J 2P;1h;1o"18":J 18;1h;1o"zm":J 7T;1h;1o"eq":J eq;1h;1o"1A":J C.1A;1h;1o"S":J C.hr?C.hr:0;1h;1o"X":J X;1h;1o"x0":J x0;1h;1o"y0":J y0;1h;1o"5m":J 5m;1h;1o"1f#":J 7T.O("1f#")==0;1h;1o"1f:":J 7T.O("1f:")==0;1h;1o"rZ":J 18=="3M"&&C.1A=="1u";1h;1o"1L#3H":J rC;1h;6m:J I}};G.1L=E(k,x){9z(k){1o"1m":5m?8g():\'\';3H=x;1h;1o"2o":zk(x);1h;1o"5D":5D(1b);1h;1o"3t":3t(1b);1h;1o"z8":C.3o=0;1h;1o"s6":if(C.zl>0&&C.3o!=1&&!eN){2F(eN);eN=1B(E(){3t(1b);C.3o=1;eN=1M},C.zl*2c)}1h;1o"1z":1z(x);1h;1o"VU":Q(1b,{"2r":"1z(0)"});1h;1o"2E":Q(1b,{"2r":"2E("+x+")"});2E=x;1h;1o"2P":Q(1b,{"2r":"2P("+x+")"});2P=x;1h;1o"1J":Q(1b,{"1J":x});1h;1o"rz":Q(1i[0],{"1J":x});1h;1o"fo":Q(1i[0],{"7X":"fo("+x+")"});1h;1o"1a":Q(1b,{"1a":x});1h;1o"1g":Q(1b,{"1g":x});1h;1o"1c":Q(1b,{"1c":x});1h;1o"1d":Q(1b,{"1d":x});1h;1o"oO":C.oO=x;1h;1o"cg":cg=x;1h;1o"1L#3H":rC=x;1h;1o"x":Q(1b,{"1a":x});1h;1o"y":Q(1b,{"1g":x});1h;1o"4C":C.4C=x;1h;1o"6n":C.6n=x;1h;1o"x0":x0=x;1h;1o"y0":y0=x;1h;1o"c5":C.c5=x;1h;6m:J I}};E zk(x){if(x&&o.1k.2a){hI=H;1B(zi,g5)}if(!x){if(C.ho==1&&8l){1j(1i[fU]);1m(1i[0]);8l=I}}if(C.hF==1){x?1m(1b):1j(1b)}F{if(X=="VV"||X=="zj"){x?1m(1b):1j(1b)}F{Q(1b,{"2o":(x?"6C":"1Q")})}3H=x;x?1m(1b):\'\'}if(x&&C.hJ){C.hJ=I;1B(7B,1v)}}E zi(){hI=I}G.4O=E(x,y){if(7T!=\'\'&&(C.1u==\'x\'||C.1u==\'1x\')){x=x+\'x\'}if(y){x=C.1u+x}4O(x);!5U(1b)?C.hJ=H:\'\'};B rG;G.gx=E(x){if(rG!=x){C.8W=x;4O(x);!5U(1b)?C.hJ=H:\'\';o.R?o.R.3S():\'\'}rG=x};G.rH=E(){gy(bv,jP);jP+=20};E gy(x,y){Q(x,{"2r":"i2("+y+"sa)"+(x==1i[0]&&!zh&&2E!=1?\' 1z(\'+2E+\')\':\'\')})};G.zg=E(x){if(C.1u.O("{22")>-1){4O(C.1u)}};G.hD=E(){hD()};E 4O(1u){if(C.1A=="1u"){if(L(1u)){if(C.ze){if(1u.S==4){1u=(C.hj?\'0:0\':\'fj:0\')+1u}if(1u.S==5){1u=(C.hj?\'0:\':\'fj:\')+1u}if(1u.S==7){1u=(C.hj?\'\':\'0\')+1u}}if(C.zd){if(1u.S==4){1u=\'0\'+1u}}C.hr=1u.S}1u=(C.s9?C.s9+(C.zc?\'\':\' \'):\'\')+1u+(C.rL?\' \'+C.rL:\'\');B z9=1i[0].1W+(C.bg==1?C.9n+C.bi:0);B AI=1i[0].2D+(C.bg==1?C.9n+C.bi:0);1i[0].2w=o.ni+(18=="3M"?s5(1u):1u)+o.f9;if(C.VY==1){1i[0].2w+=\'<ac C="2o:zb-6C;1c:Wb"></ac><ac C="3q-1g: cY 9U \'+3p(C.1S)+\';3q-1a: cY 9U 9r;3q-2M: cY 9U 9r;1n: 2g;2M:cY;1g: 50%;2S-1g: -8Q;"></ac>\'}if(18=="22"){Q(1i[0],{"1c":"2V","fB-bf":"jj"});rI(1u)}C.w=1i[0].1W+(C.bg==1?C.9n+C.bi:0);C.h=1i[0].2D+(C.bg==1?C.9n+C.bi:0);if(z9!=C.w||AI!=C.h||(C.w>0&&rD==0)){7B()}if(1i[0].1W>0){rD=C.w}F{7T!=\'\'?1j(1i[0]):\'\';if(1u!=\'\'){1B(7B,10)}}}}G.7B=E(){7B()};E 7B(){if(C.1A=="1u"){if(1i[0]){if(1i[0].1W>0){7T!=\'\'?1m(1i[0]):\'\';w=C.w=1i[0].1W;h=C.h=1i[0].2D;8i();as(bg);2L();if(o.R){if(5I([C.1n],"1b")){o.R.rB()}F{o.R.3S()}}}}}}G.rA=E(x){if(C.zF==1){B n=4;if(X=="W9"){if(o.1k.2a){J}}F{n=8}B y=\'hi\';B z=[];V(B i=1;i<n;i++){z[i]=1H.6M(y.6x(v.id,X,\'W7\',i))}if(z[1]){V(B i=1;i<n;i++){z[i]?1j(z[i]):\'\'}if(n==4){V(B i=1;i<n;i++){x>(i/n)&&z[i]?1m(z[i]):\'\'}}F{V(B i=n;i>0;i--){if(x*1+(1/n)>=(i/n)&&z[i]){1m(z[i]);1h}}}}}};G.On=E(){if(!on){if(2l){if(2l.S>1&&U.S>1){1j(1i[0]);1m(1i[1])}}if(U.S>1){18=U[1];if(C.23==1){2n.2w=fM(1);7x()}}if(C.ho==1&&8l){1j(1i[fU]);8l=I}hn();on=H}};E fM(x){J o.ni+(C.2n==\'\'?3Q(U[x]):(5A.S>1?5A[x]:5A[0]))+o.f9}G.9p=E(x){9p(x)};G.BO=E(x,y){if(C.g1){C.g1.bw(x,y)}};E 9p(x){B y=\'hi\';B z=1H.6M(y.6x(v.id,X,\'W4\'));if(z){Q(z,{"5n":"2r 0.1s dX-8s"});if(x==1){z.C.2r=\'Ci(0, 0)\'}F{z.C.2r=\'Ci(-W1, 0)\'}}F{if(x==1){C.a=1}F{C.a=0.5}}on=x==1;if(C.23==1&&5A.S>1){2n.2w=(on?5A[0]:5A[1])}Q(1i[0],{"1J":C.a})};G.fH=E(){if(on){if(2l){if(2l.S>1&&U.S>1){1m(1i[0]);1j(1i[1]);Q(1i[0],{"1J":C.a})}}18=U[0];if(U.S>1){if(C.23==1){2n.2w=fM(0);7x()}}hn();on=I;8l=I}};G.rX=E(){if(C.ho==1){hq();1m(1i[fU]);8l=H}};G.Cg=E(){B 2j=I;if(C.1j==1&&C.Cf==1){if(5U(o.1U)){2j=H}}if(!2j){5D(1b);B cU=1b.aG("*");V(B i=cU.S;i--;){Q(cU[i],{"4C-1r-d0":"W0"})}3H=H}};G.fv=E(){fv()};E fv(){3t(1b);B cU=1b.aG("*");V(B i=cU.S;i--;){Q(cU[i],{"4C-1r-d0":"a6"})}3H=I}G.4G=E(){if(2l.S>0){V(i=0;i<2l.S;i++){if(1i[i].4e==1b){1b.3u(1i[i])}1i[i]=1X}}if(bg){bg.c4("cd");bg.c4("dY");bg.c4("e7");bg.4e.3u(bg);bg=1X}if(C.1n==\'7Q\'){if(1b.4e==o.7Q){o.7Q.3u(1b)}}F{if(1b.4e==o.1I){o.1I.3u(1b)}F{if(o.1l){if(1b.4e==o.1l){o.1l.3u(1b)}}}}if(23){if(23.4e==1b){1b.3u(23)}}1b=1X};G.Ce=E(){d5?d5.d6():\'\'};G.Cd=E(){s7()};E s7(){Cc(2l[0],C.1S,1i[0])}E s5(x){B z=x+\'\';if(x.O(\'{\')>-1){if(x.O(\'{Z}\')>-1&&L(o.2O)){x=x.1N(\'{Z}\',ci(o.2O.8R().t))}if(x.O(\'{22\')>-1){B y=o.8I?o.8I:(v.22?v.22:\'\');if(x.O(\'{hM}\')>-1&&o.R){x=x.1N(\'{hM}\',o.R.9l(\'hM\'))}if(o.f6&&o.R){y=o.R.9l(\'f6\')}x=x.1N(\'{22}\',y);if(o.f6&&!o.R){1B(4O,1v,z)}}if(x.O(\'{1u\')>-1){V(B i=1;i<6;i++){if(x.O(\'{1u\'+i+\'}\')>-1){if(L(v[\'1u\'+i])){x=x.1N(\'{1u\'+i+\'}\',v[\'1u\'+i])}F{x=x.1N(\'{1u\'+i+\'}\',\'\')}}}}if(x.O(\'{5f}\')>-1){o.s0=X;if(o.R){x=x.1N(\'{5f}\',o.R.9l(\'VZ\'))}}}J x}G.rV=E(){4O(C.1u)};E i7(1i,6H){V(B i=0;i<1i.S;i++){Cb(1i[i],6H)}if(C.2B=="2W"){if(o.2W){o.2W.Ca(1i[0],6H)}}}};B C9=E(X,18){B i;B C=[];B w;B h;B bg;B 3H=H;B x0;B y0;B 2E=1;B 2P=1;B c6=0;B 6O=0;B VG;B 3j;B kU;B 5m;B 29;B 2X;B B8;B Bc;B oF;B Bb;B 23;B 2n;B 6j;o.Cx=-1;B h0;B 5m;B qQ;V(i in dD.P){C[i]=dD.P[i]}B 18=v[X].18;B 1A=v[X].1A;V(i in dD[18]){C[i]=dD[18][i]}V(i in v[X]){C[i]=v[X][i]}C.w=2z(C.w);C.h=2z(C.h);C=4d(C,\'2S\',\'2S\');C=4d(C,\'bq\',\'bq\');if(o.bu){if(C.C8>0){C.w=2z(C.C8)}if(C.dv){if(C.dv!=\'0 0 0 0\'){C=4d(C,\'bq\',\'dv\')}}}B 1b=1V("2k");if(v.1l.b7==1&&v.1l.1j==1){o.1l.1R(1b)}F{o.1I.1R(1b)}18=="2A"?o.7Q=1b:\'\';B 8T=I;if(C.aW){if(C.aW!=\'1F\'){8T=H}}Q(1b,{"1n":"2g","1g":0,"1a":0,"1J":1,"aF":"j3","kF":"fb"});if(C.C7==1){1b.C.4W=C.4c}8i();B 7A=1V("2k");Q(7A,{"1n":"2g","3v":2h.4P(-C.h/2),"1a":2h.4P(-C.w/2)});if(C.6R>0&&C.CJ==1){Q(7A,{"3q-8J":C.6R*C.h/2,"1d":C.h,"9Q":"3o","4s-2y":"1Q"})}if(2G(C.3T)){41(1b,{"id":(v.id+"ib"+C.3T)})}1b.1R(7A);if(18==\'2A\'&&v.rO==1){B5()}if(C.23==1){ku()}B 7q=1V("2k");eR(0,7q,0.3,(C.5w==1?"3B-5w("+(C.r4==1?"to 1a,":\'\')+3p(C.C6)+", "+3p(C.ik)+")":3p(C.ik)),C.w,C.VF);if(C.BW==1&&L(C.iq)){B gO=1V("2k");gO.2w=C.iq.1N(/\\#BV/g,3p(C.ik));7q.1R(gO);Q(gO,{"1n":"2g","3v":-2h.4P(C.h/2),"1a":0,"4s-2y":"1Q"});Q(7q,{"9Q":"3o","2u":"1Q"});B x=["rc","cF","C5","ez","eg"];V(B y=0;y<x.S;y++){B z=gO.s8("2N "+x[y]);if(z.S>0){V(B y2=0;y2<z.S;y2++){z[y2].C.5N=3p(C.ik)}}}}7A.1R(7q);B VE=[];B 9M=1V("2k");eR(1,9M,C.C3,(C.5w==1?"3B-5w("+(C.r4==1?"to 1a,":\'\')+3p(C.BP)+", "+3p(C.C2)+")":C.C2),0,C.Vk);7A.1R(9M);if(C.7Z>0){B bn=1V("2k");eR(2,bn,C.C0,C.Vh,0,C.7Z);7A.1R(bn)}B 5H=1V("2k");eR(3,5H,C.BY,(C.5w==1?"3B-5w("+(C.r4==1?"to 1a,":\'\')+3p(C.BX)+", "+3p(C.1S)+")":C.1S),0,C.a);if(C.BW==1&&L(C.iq)){B i4=1V("2k");i4.2w=C.iq.1N(/\\#BV/g,3p(C.1S));Q(i4,{"1n":"2g","3v":-2h.4P(C.h/2),"1a":0,"4s-2y":"1Q"});Q(5H,{"9Q":"3o","2u":"1Q"});5H.1R(i4)}if(C.6Y==1){B a1=1V("2k");C=4d(C,\'r5\',\'r5\');C=4d(C,\'qR\',\'qR\');Q(a1,{"1n":"2g","3v":C.h/2,"1a":0,"4s-2y":"1Q","5j-4a":C.BU*3f(v.b8,1),"1S":C.i3,"2A-1d":"1v%","3N-1g":C.Vc,"3N-3v":C.Va,"3N-1a":C.Vm,"3N-2M":C.Vn,"2S-1g":C.VD,"2S-3v":C.VA,"2S-1a":C.Vy,"2S-2M":C.Vw,"3q-8J":(C.BQ+"px"),"2o":"1Q"});if(C.Cj==1){Q(a1,{"2u":3p(C.C4)})}5H.1R(a1);B eI=I;B Vt=I}o.hU=C.h;7A.1R(5H);if(C.gt==1){B b5=[];if(1D CP!=="1M"){B 7p=1t CP(1b,b5,w,C)}}if(C.2X==1){if(C.bC.4F().O(\'<2N\')==-1){C.bC==\'\'?C.bC="<2N 1c=\'20\' 1d=\'20\'><g><eg ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 5N=\'#9m\'/></g></2N>":\'\'}2X=1V("2k");2X.2w=C.bC.4F();C=4d(C,\'CM\',\'CM\');Q(2X,{"1n":"2g","1g":-10+C.Sl-C.Sh,"1a":-2c,"4s-2y":"1Q","1d":20,"1c":C.cG,"1J":C.sE,"5n":"2r 0.1s 3B, 1J 0.1s 3B"});if(C.e0==1||C.oM==1){Q(2X,{"2r":"1z(0)"})}F{if(C.jm!=1){Q(2X,{"2r":"1z("+C.jm+")"})}}1b.1R(2X);if(C.rt!=-1){B x=["rc","ez","eg"];V(B y=0;y<x.S;y++){B z=2X.s8("2N "+x[y]);if(z.S>0){V(B y2=0;y2<z.S;y2++){z[y2].C.5N=3p(C.rt)}}}}C.dc=2X.1W}if(C.94!=0){Q(1b,{"2r":"i2("+C.94+"sa)"})}if(C.3o==1){1j(1b);3H=I}if(18=="1F"){if(C.1j==1&&C.ei==1){o.er=H;C.3o=H}F{o.er=I}}C.9Y=0;if(C.94!=0){C.eO=2h.By(C.94);if(C.eO>45&&C.eO<Se){C.9Y=90}if(C.eO>Ss&&C.eO<CL){C.9Y=Ct}}if(8T){o.d2=C.aW=="6b";w=C.w;5q(1,o.4V.5k(-1)[0],"no")}E eR(n,x,y,z,CK,CI){Q(x,{"1n":"2g","3v":0,"1a":0,"1c":CK,"1d":(C[\'h\'+n]>0?C[\'h\'+n]:C.h),"2u":z?(z.O("3B")>-1?z:3p(z)):\'\',"3q-8J":(C.CJ==1?1:C.6R*C.h/2),"1J":CI,"4s-2y":"1Q","5n":"2r 0.2s dX-in-8s"})}E 8i(){bg=1V("2k");C=4d(C,\'ec\',\'ec\');B eH=C.h+C.9n+C.bi;B CH=C.w+C.7R+C.9b;if(C.bg==1){}F{C.5i=0}C=4d(C,\'e9\',\'e9\');if(v.1l.eb==1||C.eb==1){C.5d=\'#sd\';C.bg=1;C.5i=0.5}Q(bg,{"1n":"2g","1g":0,"1a":0,"1c":CH,"1d":eH*C.sf,"sg":(C.h5*eH)/2,"2u":7Y(C.5d,C.5i),"cR":"2V","5n":"1J .1s 3B, 2u .1s 3B"});if(C.9B==1){Q(bg,{\'kI-7X\':\'9B(c7)\'})}if(C.sh==1){Q(bg,{"3q":"8Q 9U #"+C.sj})}if(C.29==1){if(C.gk==1){Q(bg,{"9g":"4s"})}if(!o.1k.2a||v.9k==1){bg.cd=ds;bg.SG=rM;bg.SF=l2;bg.f4=bA}}F{Q(bg,{"9g":"6m"})}if(!o.1k.2a){bg.dY=a7;bg.f4=bA;bg.e7=8g}if(o.1k.2a&&C.29==1){bg.1T("jV",E(1q){1q.7o=H;if(!L(1q.4v)&&1q.5S.S>0){1q.4v=1q.5S[0].fT;1q.6V=1q.5S[0].jY}h0=1q;a7(1q);l2(1q)});bg.1T("jX",E(1q){1q.7o=H;o.3j=I;8g(1q);rM(h0)});bg.1T("29",E(1q){1q.7o=H});bg.1T("aa",E(1q){if(!L(1q.4v)&&1q.5S.S>0){1q.4v=1q.5S[0].fT;1q.6V=1q.5S[0].jY}h0=1q;o.3j=H;bA(1q)})}Q(bg,{"1a":2h.sH(-C.w/2-C.7R)});Q(bg,{"1g":2h.sH(-C.h/2-C.9n+C.CG-C.CF)});if(C.CE==1){so(bg,C.5d,C.CD,C.CC)}1b.1R(bg)}E 2L(1c){if(1c!=w){w=1c;o.sr=w;B 8P=w/7q.1W;Q(bg,{"1c":(w+C.7R+C.9b),"1a":-w/2-C.7R,});Q(7A,{"1a":-w/2});Q(7q,{"1c":w});Q(7A,{"1c":w});B xx=9M.1W*8P;if(xx>7q.1W){xx=7q.1W}Q(9M,{"1c":xx});B wp=5H.1W*8P;Q(5H,{"1c":wp});eG(wp);if(18=="2A"){AO()}if(C.gt==1){7p?7p.Cq(w):\'\'}if(o.4R){o.4R.2L()}}}E eG(x){if(C.2X==1){if(x<C.dc/2&&C.cG!=20){x=C.dc/2}if(x>w-C.dc/2&&C.cG!=20){x=w-C.dc/2}B y=x-w/2-C.dc/2+C.Su-C.SA;Q(2X,{"1a":y})}}E oL(){Q(2X,{"2r":"1z("+C.jm+")"})}E a7(1q){o.R.f7(X,"5m");if(C.bg==1){if(C.b3!=-1){B m=1t ax({"mc":bg,"1A":"bB","to":C.b3,"Z":0.1,"me":(X+"bg")})}if(2G(C.bK)){Q(bg,{"2u-1S":C.bK})}}if(2G(C.sy)){Q(5H,{"2u-1S":C.sy})}if(C.2X==1){if(C.Cz==1&&L(C.sA)){if(C.kV==1&&3j){}F{2X.2w="<2N 1c=\'"+C.cG+"\' 1d=\'20\' 5F:5z=\'4J://5v.w3.5l/aR/5z\' 5F=\'4J://5v.w3.5l/5p/2N\'>"+C.sA.4F()+"</2N>"}}if(C.e0==1){if(C.oM==1&&!o.1y){}F{oL()}}F{if(C.kQ!=-1){B m2=1t ax({"mc":2X,"1A":"bB","to":C.kQ,"Z":0.1,"me":(X+"2X")})}}}if(C.23==1&&(o.K.1e()>0||18=="1F"||8T)){ee()}if(C.dC>0){Q(bg,{"2r":"2P("+((C.dC-1)/5+1)+")"});sF(C.dC)}if(C.2X==1&&C.oI==1){eG(8O(1q.4v)-6O)}if(18=="1F"){o.U.53(H);o.53=H}5m=H;o.aV=H}E sF(x){Q(7q,{"2r":"2P("+x+")"});Q(9M,{"2r":"2P("+x+")"});bn?Q(bn,{"2r":"2P("+x+")"}):\'\';Q(5H,{"2r":"2P("+x+")"})}E 8g(){if(!kU){if(C.7Z>0){Q(bn,{"1c":0})}if(2G(C.sy)){Q(5H,{"2u-1S":C.1S})}if(C.bg==1){if(C.b3!=-1){B m=1t ax({"mc":bg,"1A":"bB","to":C.5i,"Z":0.1,"me":(X+"bg")})}if(2G(C.bK)){Q(bg,{"2u-1S":C.5d})}}if(C.2X==1){if(C.Cz==1&&L(C.sA)){if(C.kV==1&&3j){}F{2X.2w="<2N 1c=\'"+C.cG+"\' 1d=\'20\' 5F:5z=\'4J://5v.w3.5l/aR/5z\' 5F=\'4J://5v.w3.5l/5p/2N\'>"+C.bC.4F()+"</2N>"}}if(C.e0==1){Q(2X,{"2r":"1z(0)"})}F{if(C.kQ!=-1){B m2=1t ax({"mc":2X,"1A":"bB","to":C.sE,"Z":0.1,"me":(X+"2X")})}}}if(C.dC>0){Q(bg,{"2r":"2P(1)"});sF(1)}if(18=="1F"&&!o.1P){o.U.53(I);o.53=I}o.R.f7(X,"8s")}if(C.gt==1&&7p){7p.8s()}if(C.23==1&&(o.K.1e()>0||18=="1F")){l5()}if(o.oQ&&18=="2A"){o.th.1j();o.Cx=-1}5m=I;o.aV=I}E ds(1q){1q.7o=H}E Cw(1q){1q.7o=H}E rM(1q){if(18=="1F"){if(o.6Z){kU=H;2F(qQ);qQ=1B(E(){kU=I;8g()},2c)}}oN();o.3j=I;if(C.2X==1){if(C.kV==1&&L(C.ph)){2X.2w="<2N 1c=\'20\' 1d=\'20\' 5F:5z=\'4J://5v.w3.5l/aR/5z\' 5F=\'4J://5v.w3.5l/5p/2N\'>"+C.bC.4F()+"</2N>"}}9N(1q.4v,1q.6V);o.R.du(X);o.R.c8(1q.4v,1q.6V);1q.7o=H}E l2(1q){3j=H;if(C.2X==1){if(C.kV==1&&L(C.ph)){2X.2w="<2N 1c=\'20\' 1d=\'20\' 5F:5z=\'4J://5v.w3.5l/aR/5z\' 5F=\'4J://5v.w3.5l/5p/2N\'>"+C.ph.4F()+"</2N>"}}c6=fP(bg);6O=di(bg);9N(1q.4v,1q.6V);5q(29,1,"no")}E 9N(aO,bm){B x;aO=8O(aO);bm=8O(bm);B Cu=2h.6B(1H.l3.ep,1H.8o.ep);B Cv=2h.6B(1H.l3.kW,1H.8o.kW);if(o.1k.2a){}F{bm=bm+Cv;aO=aO+Cu}if(C.9Y>0){x=bm-c6-C.9b;29=x/w;if(C.9Y==Ct){x=bm-c6-C.7R;29=x/w;29=(29-1)*-1}}F{x=aO-6O-C.7R;29=x/w;if(C.94>Sa&&C.94<RT){x=aO-6O-C.9b;29=x/w;29=(29-1)*-1}}29>1?29=1:\'\';29<0?29=0:\'\'}E 8O(x){if(o.7O>1){x=x/o.7O}J x}G.Cr=E(){7p?7p.Cq(w):\'\'};G.kO=E(){7p?7p.bw(w):\'\'};E oN(){3j=I}E bA(1q){6O=di(bg);if(C.7Z>0){if(o.1y||18!=\'2A\'){Q(bn,{"1c":8O(1q.4v)-6O})}}if(C.23==1&&(o.K.1e()>0||18=="1F"||8T)){ee();c6=fP(bg);9N(1q.4v,1q.6V);if(18=="2A"){if(v.RF==1){if(o.K.5e()&&o.K.8L().O("?oR")>0){2n.2w=\'- \'+ci((1-29)*o.K.1e(H))}F{2n.2w=ci(29*o.K.1e())}}F{B d=o.K.1e();if(v.3R>0){d=d-v.3R*1}B cj=\'\';if(C.gt==1&&7p){cj=7p.23(29*d);cj!=\'\'?cj=cj+\'<br>\':\'\'}2n.2w=cj+ci(29*d)}}if(18=="1F"||8T){2n.2w=oV(29)}7x(1q)}if(o.oQ&&18=="2A"&&o.th){if(o.K.1e()>0){if(C.23==0){c6=fP(bg);6O=di(bg);9N(1q.4v,1q.6V)}B 1a=(-w/2+(8O(1q.4v)-6O)-v.eD/2);1a>w/2-v.eD?1a=w/2-v.eD:\'\';Q(o.9C,{"1g":(-v.oD-(v.Cp>0?v.Cp*1:5)-v.oC),"1a":(1a<-w/2?-w/2:1a)});o.th.Z(29*o.K.1e(),8O(1q.4v),6O,w)}}if(C.2X==1&&C.oI==1){eG(8O(1q.4v)-6O)}if(o.1k.2a){l2(1q)}}E 7x(1q,t,l){B 1a=(-w/2+(8O(1q.4v)+1H.l3.ep-6O)-2n.1W/2)+(l?l:0);B e4=0;if(v.pf!=1){if(1a+w/2+2n.1W+10>o.2C){e4=1a;1a=o.2C-w/2-2n.1W-10}if(1a+o.2C/2<0){e4=1a;1a=-o.2C/2}}B x={"1g":(-2n.2D-C.Co*1-C.kv-C.oT)-(C.Cn==1?(C.h/2)*(C.dC>0?C.dC:1):0)+(t?t:0),"1a":1a};Q(23,x);if(C.cI==1){Q(6j,{\'1n\':\'2g\',\'1a\':2n.1W/2-4+(e4!=0?e4-1a:0),\'1g\':2n.2D-6})}}G.ee=E(e,x,t,l){ee();2n.2w=x;7x(e,t,l)};E ee(){if(!5U(23)||23.C.1J==0){1m(23);Q(23,{"1J":1})}}G.l5=E(){l5()};E l5(){1j(23);Q(23,{"1J":0})}G.c=E(){J 1b};G.s=E(X){J C[X]};G.ss=E(x,x2){J C[x][x2]};G.g=E(x){9z(x){1o"1c":J w;1h;1o"RN":J 7q.1W;1h;1o"1d":J C.h;1h;1o"x":J 4X(1b.C.1a);1h;1o"y":J 4X(1b.C.1g);1h;1o"1J":J 1b.C.1J?1b.C.1J:1;1h;1o"1m":J 3H;1h;1o"2E":J 2E;1h;1o"2P":J 2P;1h;1o"18":J 18;1h;1o"X":J X;1h;1o"x0":J x0;1h;1o"y0":J y0;1h;1o"29":J 29;1h;1o"Be":J Be;1h;6m:J I}};G.1L=E(X,x){9z(X){1o"1m":3H=x;1h;1o"3j":3j=x;1h;1o"2o":18=="2A"||C.1j==1?Q(1b,{"5r":(x?"3H":"3o")}):Q(1b,{"2o":(x?"6C":"1Q")});3H=x;1h;1o"2E":Q(1b,{"2r":"2E("+x+")"});2E=x;1h;1o"2P":Q(1b,{"2r":"2P("+x+")"});2P=x;1h;1o"1J":Q(1b,{"1J":x});1h;1o"1a":Q(1b,{"1a":x});1h;1o"1g":Q(1b,{"1g":x});1h;1o"29":29=x;1h;1o"bd":C.bd=x;1h;1o"1c":Q(1b,{"1c":x});1h;1o"1d":Q(1b,{"1d":x});1h;1o"oO":C.RR=x;1h;1o"x":Q(1b,{"1a":x});1h;1o"y":Q(1b,{"1g":x});1h;1o"x0":x0=x;1h;1o"y0":y0=x;1h}};G.2L=E(x){2L(x)};G.iZ=E(x){};G.ch=E(8u,8w){if(3j){if(18=="1F"||8T){9N(8u,8w);o.R.du(X)}if(18=="1F"){o.6Z=H}9N(8u,8w);5q(29,1,"no")}};G.c8=E(8u,8w){if(3j){oN();3j=I;9N(8u,8w);o.R.du(X);5q(29,1,"no")}};E 5q(Z,1e,x){Z<0?Z=0:\'\';if(v.3R>0&&1e>1){1e=1e-v.3R;Z=Z-v.3R}if(C.2X==1&&C.oM==1&&C.e0!=1){if(!C.Bd&&Z>0){oL();C.Bd=H}}if(3j&&1e!=1){}F{B 3D;if(1e>0&&Z>0){if(Z>1e){Z=1e}3D=w*(Z/1e);if(3D==5H.1W){3D=-1}}F{3D=0}if(3D>=0){Q(5H,{"1c":3D});if(C.oI==1&&5m&&!x){}F{eG(3D)}}if(L(a1)){if(1e<2&&18=="2A"){if(eI){3t(a1);eI=I}}F{if(!eI){5D(a1);eI=H}a1.2w=18=="2A"?3w(Z==0?1e:Z):oV(Z)}}}};G.5q=E(Z,1e,x){if(1e!=Bc||Z!=Bb||x){5q(Z,1e,x)}};G.Ba=E(){29>1?29=1:\'\';29<0?29=0:\'\';Q(5H,{"1c":(29*w)})};G.B9=E(Z,1e){if(1e>0&&Z>0){B 3D=w*(Z/1e);3D>w?3D=w:\'\';Q(9M,{"1c":4X(3D)});B8=1e;oF=Z}F{oF=0;Q(9M,{"1c":0})}};G.eS=E(x){if(C.4R==1){if(!o.4R){if(x!=0){if(1D B6!=="1M"){o.4R=1t B6(1b,C,x);o.8e=H}}}F{if((!L(x)||x==0)&&o.8e){o.4R.1j();o.8e=I}F{if(!o.8e||(L(x)&&x!=1&&x!=0)){o.4R.oE(x);o.8e=H}}}}};E B5(){o.9C=1V("2k");Q(o.9C,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1c\':v.eD,\'1d\':v.oD,\'9Q\':\'3o\',"4s-2y":"1Q","2u-1S":"#S6","3q-8J":v.B2+\'px\',"2o":"1Q"});o.9C.id="S3"+v.id;if(v.oC==1){Q(o.9C,{"3q":v.B1+"px 9U "+oB(\'1S\',v.AL)})}if(v.AD==1){Q(o.9C,{"5K-km":"RZ 8Q iY 9u(0,0,0,0.5)"})}o.9C.C.4W="oA";1b.1R(o.9C)}E ku(){23=1V("2k");Q(23,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1d\':\'2V\',"4s-2y":"1Q","1J":0,"5n":"1J 0.1s 3B"});C=4d(C,\'eB\',\'eB\');2n=1V("2k");Q(2n,{\'1n\':\'2g\',\'3N-1a\':C.oS,\'3N-2M\':C.AW,\'3N-1g\':C.kv,\'3N-3v\':C.oT-1,\'1u-fk\':\'7L\',\'1S\':C.p6,\'5j-pe\':fl(C.pd),\'5j-4a\':C.pc*3f(v.b8,1),\'iL-fS\':C.pb+\'px\',\'2A-1d\':"1",\'2u-1S\':7Y(C.eT,C.eF),\'3q-8J\':C.pa});C.AV?C.cI=C.AV:\'\';if(C.cI==1){6j=1V("2k");6j.2w=\'<2N 1c="c7" 1d="p9" AU="0 0 8 6" 7a="1.1" 5F="4J://5v.w3.5l/5p/2N" 5F:5z="4J://5v.w3.5l/aR/5z"><cF id="AS" AR="1Q" 5N="\'+3p(C.eT)+\'" 5N-AQ="AP" b5="0 0 8 0 4 6"></cF></2N>\'}1b.1R(23);23.1R(2n);if(C.cI==1){23.1R(6j);Q(6j,{\'1J\':C.eF})}23.C.4W="2c"};E AO(){if(o.2O&&v.aN==1&&!o.1y){B f=o.2O.8R();if(f.t&&f.d){5q(f.t,f.d)}}};E oV(x){B y=2h.4P(x*1v);if(8T){if(o.d2){J(8T&&2G(C.2n)?C.2n+\'&p4;\':\'\')+3i(x*o.4V.5k(-1)[0]).p3(1)}}J y};G.4G=E(){1b.3u(7A);if(bg){bg.c4("cd");bg.c4("dY");bg.c4("e7");bg.4e.3u(bg);bg=1X}if(2X){1b.3u(2X)}if(1b.4e==o.1I){o.1I.3u(1b)}F{if(o.1l){if(1b.4e==o.1l){o.1l.3u(1b)}}}1b=1X}};B AN=E(){B i;B C=[];B w;B h;B 3H=H;B 2E=1;B 2P=1;B x0=0;B y0=0;B bG=4E(kA,Tx);B 18,X="bg";B 1A="Tw";C["1n"]=v.1l.1n;V(B k in v.1l){if(v.1l.2e(k)){C[k]=v.1l[k]}}if(C.1m==0){v.1l.h=C.h=0;C.3N=C.2S="0 0 0 0";C.5w=0}C["1z"]=1;C=4d(C,\'2S\',\'2S\');if(L(C.oY)){if(C.oY!=20&&C.2S=="-20 0 0 0"){C.8c=C.oY}}if(2G(C.Bf)&&o.bu){C=4d(C,\'2S\',\'Bf\')}if(C.Tr==1){C.3U+=\'%\';C.4g+=\'%\'}B 1b=1V("2k");if(C.9B==1&&C.5w==0){C.BK=C.a;v.1l.a=C.a=1}F{C.9B=0}Q(1b,{\'1n\':\'2g\',\'1a\':0,\'1g\':0,\'1c\':(C.dZ==1?\'1v%\':o.8z),\'1J\':C.a,\'4s-2y\':\'1Q\',\'aF\':\'j3\',\'kF\':\'fb\'});o.1I.1R(1b);B bg=1V("2k");Q(bg,{\'1d\':C.h-(C.1n!=\'1g\'?C.cq+C.8c:0),\'2o\':\'6C\',\'2S-1a\':C.3U,\'2S-2M\':C.4g,\'3q-8J\':C.6R});if(C.B0>0){Q(bg,{\'3q\':\'8Q 9U 9u(eY,eY,eY,\'+C.B0+\')\'})}1b.1R(bg);w=1b.1W;v.ba=-C.8c;if(C.5w==1){if(C.1S==\'3G\'||v.1l.7l!=\'\'){if(C.1n!=\'1g\'){v.ba=98-C.h}B 3P=\'21:7l/oX;cm,TB+TL/T/D+TP/TO/TK==\';if(v.1l.7l.O("21:7l")>-1){3P=v.1l.7l}Q(bg,{\'1d\':C.h+(C.1n!=\'1g\'?v.ba:0),\'2u\':\'17(\'+3P+\') cE-x 50% 1v%\',\'2u-4a\':\'2V\'})}F{B bZ=\'to 3v, \'+7Y(C.1S,0)+\', \'+7Y(C.1S,1);Q(bg,{\'2u\':\'-qC-3B-5w(\'+bZ+\')\',\'2u\':\'-3r-3B-5w(\'+bZ+\')\',\'2u\':\'-ms-3B-5w(\'+bZ+\')\',\'2u\':\'-o-3B-5w(\'+bZ+\')\',\'2u\':\'3B-5w(\'+bZ+\')\'})}}F{if(C.9B==1){Q(1b,{\'kI-7X\':\'9B(c7)\'});Q(bg,{\'1J\':C.BK})}Q(bg,{\'2u-1S\':C.1S})}G.h=E(){J C.h-(C.1n!=\'1g\'?C.8c:0)};G.c=E(){J 1b};G.s=E(X){J C[X]};G.g=E(x){if(1b){9z(x){1o"w":1b.1W>0?w=1b.1W:\'\';J w;1h;1o"1c":J 1b.1W;1h;1o"1d":J 1b.2D;1h;1o"x":J 4X(1b.C.1a);1h;1o"y":J 4X(1b.C.1g);1h;1o"1J":J 1b.C.1J?1b.C.1J:1;1h;1o"1m":J 3H;1h;1o"2E":J 2E;1h;1o"2P":J 2P;1h;1o"X":J X;1h;1o"x0":J x0;1h;1o"y0":J y0;1h;1o"bG":J X+bG;1h;6m:J I}}F{J I}};G.1L=E(X,x){9z(X){1o"1m":3H=x;1h;1o"w":w=x;1h;1o"2o":Q(1b,{"2o":(x&&v.ow!=1?"6C":"1Q")});3H=x;1h;1o"1z":Q(1b,{"2r":"1z("+x+")"});2E=x;2P=x;1h;1o"2E":Q(1b,{"2r":"2E("+x+")"});2E=x;1h;1o"2P":Q(1b,{"2r":"2P("+x+")"});2P=x;1h;1o"1J":Q(1b,{"1J":x});1h;1o"1a":Q(1b,{"1a":x});1h;1o"1g":Q(1b,{"1g":x});1h;1o"1c":Q(1b,{"1c":x});1h;1o"1d":Q(1b,{"1d":x});1h;1o"x":Q(1b,{"1a":x});1h;1o"y":Q(1b,{"1g":x});1h;1o"x0":x0=x;1h;1o"y0":y0=x;1h}};G.4G=E(){o.1I.3u(1b);1b=1X}};if(1D(2H)=="4H"){BG()}o.G=G;if(2H.id){if(1H.6M(2H.id)){o4()}F{1H.1T(\'SY\',gw)}}F{1D BF==\'E\'?BF():\'\'}E o4(){if(L(2H.id)){if(1H.6M(2H.id)){if(!Cy(1H.6M(2H.id))||2H.3H==1){2H.T0==1?1B(gw,50):gw()}F{1B(o4,50)}}}}E gw(){V(B i=0;i<47.S;i++){if(L(47[i])){if(47[i].2U("id")==2H.id){if(47[i].2U("8X")){47[i].2U(\'2j\')}}F{if(v.SM==1&&47[i].2U("v","2J")==1){2H.2J=0}}}}47.2R(o.G);B 2j=I;if(L(2H.2t)){V(B i=2;i<10;i++){if(2H.2t==i&&o[\'u\'+i]!=\'\'){v=8F(v,43.5h(aK(o[\'u\'+i])));2j=H}}}if(o.u!=\'\'&&!2j){v=8F(v,(1D o.u!="3c"?43.5h(aK(o.u)):o.u))}if(1D(T1)!="E"){V(B X in 2H){if(2H.2e(X)){if(X.O("BE")==0){2H[X]=1X}}}}v=8F(v,2H);o.26=1H.6M(v.id);if(v.gn==1&&v.Th==1&&1D(o1)=="E"){pS(o.26,"Tg");if(!o1()){1G.1H.1T("gv",o1)}}F{BD()}}E BD(){B o0=v.1U;if(v.Td==1&&L(v.1U)&&L(o0)){v.1U!=\'\'?v.1U=o0:\'\'}if((!L(v.3g)||v.3g==\'\')&&v.Tc==1){1p(\'6u\');J}if(v.BB==1||v.nY==1){1G.1T(\'7k\',E(1q){B x=1M;B y;L(1q.21.Z)?x=1q.21.Z:\'\';L(1q.21.1F)?x=1q.21.1F:\'\';L(1q.21.BA)?y=1q.21.BA:\'\';L(1q.21.2U)?y=1q.21.2U:\'\';if(y&&v.nZ){if(v.nZ!=\'\'){B pm=v.nZ.1N(/\\s+/ig,\'\').2f(\',\');if(pm.O(y)==-1){J}}}if(v.nY==1){if(1D(Bi)=="E"){Bi(1q)}}if(y&&o.6e){if(L(1q.21.1L)){x=1q.21.1L}B z=3l(y,x);1G.7I.lj({1q:y,Ty:z},\'*\')}})}V(B X in o.cw){if(o.cw.2e(X)){o.cw[X]!=\'\'?o.fR+=o.cw[X]+\' \':\'\'}}1p(o.7a+\' \'+o.fR);aJ=v.id;o.d=6L.nO;o.hs=6L.S2;if(!v.5R&&5I([o.hs],\'#1r-\')){v.5R=o.hs.1C(o.hs.O(\'#1r-\')+6)}if(7I){B lk=I;33{if(7I){if(7I.1H){B ll=7I.1H.aG("Br");V(B i=0;i<ll.S;i++){if(ll[i].eu===1G){o.6l=ll[i];o.lc=H;v.Bq!=1?Q(o.6l,{"3q":"1Q"}):\'\';o.Bp=o.6l.C;1p("b9")}}}F{lk=H}}}2v(bp){lk=H}if(lk){o.lc=H;1p("UU-gI")}}o.lc&&1H.jd?o.gI=1H.jd.2f(\'/\')[2]:\'\';!o.Bo?Bn():\'\';if(1D(Bm)=="E"){if(Bm()){J}}o.6e=H;Bk();B Bj=1t 6o();if(Bj.UF()==20){if(4E(1,20)==10&&v.UC!=0){nR(o.nQ,o.nQ);1B(E(){if(1G.ga){ga(\'bM\',\'UA-GA-6\',\'2V\',{\'5L\':\'7r\',\'GB\':H});ga(\'GF\',\'Bl\');ga(\'Bl:GH\',[o.d]);ga(\'7r.bs\',\'1q\',{Bs:\'Bt\',Bv:\'gw\',BH:o.d})}},lb)}}if(v.ga==1&&v.BJ!=1){if(1D Bx==\'E\'){o.ga=1t Bx()}}if(!o.26){v.1p=1;1p(\'id "\'+v.id+\'" fw nX\');J I}o.26.2w=\'\';Q(o.26,{\'3N\':0,\'HQ-fS\':\'o7\'});o.7S=o.26.2D;o.7U=o.26.1W;if(L(v.fr)&&!L(v.42)){if(L(v.fr.42)){v.42=v.fr.42}if(L(v.fr.lh)){v.lh=v.fr.lh}}if(o.26.C.1c.O("%")>-1){o.HU=o.26.C.1c}if(v.42=="fG"||o.26.C.1d.O("%")>-1){v.42="%";o.iF=o.26.C.1d;o.7S=0}if(o.7U==0){if(o.26.C.1c.O("px")>0){o.7U=2z(o.26.C.1c)}F{if(o.26.4e.C.1c.O("px")>0){o.7U=2z(o.26.4e.C.1c)}F{if(o.26.4e.4e.C.1c.O("px")>0){o.7U=2z(o.26.4e.4e.C.1c)}}}}if(5Z(v.42).O("x")>0){o.42=v.42.2f("x")[0]/v.42.2f("x")[1];if(o.7S==0){o.7S=o.7U/o.42}}F{o.42=0}Q(o.26,{\'1n\':\'HV\',\'5K-j0\':\'op-5K\',\'1u-fk\':\'1a\',\'-3r-ol-HX\':\'1Q\',\'kw\':fl(\'ko-jt\'),\'bD-1d\':15,\'aF\':14*3f(v.b8,1),\'2A-1d\':\'fb\',\'Cl\':\'Cs\',\'1S-Bg\':\'1Q\'});if(v.km==1){Q(o.26,{\'5K-km\':\' 0 AT HY 9u(50,50,93,.1), 0 iY AT 9u(0,0,0,.H9)\'})}if(o.42>0){Q(o.26,{\'1d\':o.7S})}F{Q(o.26,{\'1d\':o.7S==0?o.iF:o.7S})}if(o.7U==0){Q(o.26,{\'1c\':\'1v%\'})}o.1I=1V("2k");Q(o.1I,{\'1n\':\'2g\',\'5K-j0\':\'op-5K\',\'aE\':v.j2,\'1S\':\'#3z\',\'1c\':\'1v%\',\'1d\':\'1v%\',\'1a\':0,\'1g\':0,\'aF\':\'j3\',\'2A-1d\':\'fb\'});if(v.pf!=1){o.1I.C.9Q=\'3o\'}if(v.Hf==1){o.1I.C.aE=\'9r\'}if(v.3q==1){Q(o.26,{\'3q\':v.AX+\'px 9U \'+v.dV})}o.Q=1H.1V(\'C\');o.Q.1A=\'1u/Q\';o.1I.1R(o.Q);o.1I.4U("id",\'Hh\'+v.id);j4(1);if(1G.AY){B AZ=1t AY(E(e){if(e[0].ot.S>0){V(B i=0;i<e[0].ot.S;i++){if(e[0].ot[i]==o.1I){pM()}}}});AZ.Hj(o.26,{Hk:H})}o.bR=1V(\'b9\');41(o.bR,{"id":"B4"+v.id,"B3":"no","22":"B4"+v.id,"B7":"H","BM":"H","Bh-j8":"H"});Q(o.bR,{\'1n\':\'2g\',\'1c\':\'1v%\',\'1d\':\'1v%\',\'3q\':0,\'4s-2y\':\'1Q\'});if(!1H.H7(\'.oj\')){B 1K="";if(v.BN==1){V(B i=1;i<4;i++){if(2G(v[\'1S\'+i])){1K+=\'--Fv\'+i+\':\'+3p(v[\'1S\'+i])+\';\'}}}ja("56, 56 > *{-3r-EI-5r: 3o;1n: jb;1g: 2V;1a: 2V;9Q:3H;Cl:Cs!6W;6B-1c:1Q!6W;cn-18: Et;2r-EA: 7L 7L;5K-j0:op-5K!6W;-3r-Cm-CA-1S: 9u(0,0,0,0);-3r-Cm-CA-1S: 9r;1u-FA:0!6W;"+1K+"} 56 3P{6B-1c:1Q} 56 > *:4M{FB: 1Q} 56,56 a,56 a:FC,56 a:Fy,56 a:dq,56 a:om,56 a:4M{1S:#9m;5j-4a:1v%;}56 b9{3q:0}56 b9{2o:6C!6W;6B-1d:1Q!6W;2u:9r}.oj{}");o.1I.4U(\'FP\',\'oj\')}o.1I.1R(o.bR);o.26.Fd=E Fg(e){o.jg++;if(o.jg==5){v.1p=1;1p(o.7a+\' \'+o.fR+\' \'+o.fQ)}if(!e)B e=1G.1q;e.7o=H;if(e.9o)e.9o();B x=e.fT-di(o.1I);B y=e.jY-fP(o.1I);if(v.Fk==1){if(L(v.jh)){if(46(v.jh)!=\'\'){o.oe=v.jh;L(v.CN)?o.dF=v.CN:\'\';v.jh==\'1Q\'?o.dF=o.d:\'\'}}}qn(x,y);J I};E qn(x,y){if(o.dF.O(o.d)==-1||v.CO==1||v.3O==1){if(!L(o.3O)){!v.iz?v.iz="3G":\'\';!v.qh?v.qh="3z":\'\';o.3O=1V(\'2k\');B 1K;B n=0;V(B i=0;i<10;i++){if((v[\'rm\'+i]==1&&v.3O==1)||i==9){if((L(v[\'rm\'+i+\'t\'])&&L(v[\'rm\'+i+\'a\'])||i==9)){1K=1V("og");if(i==9){if(v.Fp!=1){1K.od=o.oe+(v.CB==1?" "+o.7a:\'\')}F{1h}}F{1K.od=v[\'rm\'+i+\'t\']}if(i!=9){if(v[\'rm\'+i+\'a\'].O(",0/1")>-1||v[\'rm\'+i+\'a\'].O(",1/0")>-1){B z=v[\'rm\'+i+\'a\'].2f(\',\');1K.od+=\' (\'+(3l(z[0].1C(4))==1?3Q(\'on\'):3Q(\'fG\'))+\')\'}if(v[\'rm\'+i+\'a\'].O("3C")==0){o.fF=H;!o.3C?o.R.Ck():\'\'}}1K.4U("i",i);zf(1K);1K.1T("29",BS);o.3O.1R(1K);n++}}}Q(o.3O,{"1u-2r":"Ft","2A-1d":"1","fB-bf":"jj","2u":7Y(v.iz,0.7)});if(n>1){Q(o.3O,{"3N":"iY"})}o.3O.C.4W="FT";o.3O.f4=BR;o.1I.1R(o.3O)}F{5D(o.3O)}Q(o.3O,{"1n":"2g","1g":y,"1a":x,"1u-fk":"1a"});B oy=I;if(o.2C-x<o.3O.1W-20&&v.pf!=1){Q(o.3O,{"1a":x-o.3O.1W});oy=H}if(v.FH==1||oy){Q(o.3O,{"1u-fk":"2M"})}o.BZ=x;o.C1=y;2F(o.jk);o.jk=1B(E(){3t(o.3O)},5p)}}E BR(){2F(o.jk);o.jk=1B(E(){3t(o.3O)},5p)}E BS(e){B i=e.6i.BT("i");B y;B qk=I;if(i>0){if(i==9){o.dF!=\'\'?1G.8f(o.dF):\'\'}F{B x=v[\'rm\'+i+\'a\'];if(x){if(x.O("2U:")==0){if(x.O(",0/1")>-1||x.O(",1/0")>-1){B z=x.2f(\',\');B b=o.R.qq(x,"2B");B u=3l(z[0].1C(4),z[1],b);js(z,u);qo();qn(o.BZ,o.C1);qk=H}F{y=x.2f(",");3l(y[0].1C(4),(L(y[1])?y[1]:1X))}}if(x.O("3C:")==0&&o.3C){o.3C.2U(x.1C(6))}if(x.O("js:")==0){y=x.2f(",");6f(y[0].1C(3)+\'(\'+(L(y[1])?\'"\'+y[1]+\'"\':\'\')+(L(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}if(x.O("17:")==0){x=x.1N(/\\(17\\)/g,Ch());x=x.1N(/\\(Lf\\)/g,AJ(L(v.za)?v.za:1H.jd));x=x.1N(/\\(22\\)/g,o.8I);x=x.1N(/\\(6z\\)/g,v.6z);1G.8f(x.1C(4))}}}!qk?3t(o.3O):\'\'}}E zf(x){Q(x,{"3N":"zo iY","5j-4a":(v.zp?v.zp:"55")*3f(v.b8,1)+"%","iL-fS":"0.Lw","1J":0.9,"1S":v.qh});x.1T("M6",zz);x.1T("Mc",zA)}E zz(e){Q(e.6i,{"1J":1});Q(e.6i,{"2u":7Y(v.iz,0.5)})}E zA(e){Q(e.6i,{"1J":0.9});Q(e.6i,{"2u":"1Q"})}o.1k=1t zC();if(o.1k.4f){B qd=(v.yE==1?\'*::-3r-K-R-1y-Mr-au {2o: 1Q!6W;-3r-qf: 1Q;}\':\'\');if(v.jB==1&&v.yI!=1&&(v.yJ!=1||!o.1k.6w)&&(v.yK!=1||!o.1k.f0)){}F{if(o.1k.4f&&v.dG==1){}F{qd+=\'bU::-3r-K-R {2o:1Q !6W;}*::-3r-K-R-M5 {2o: 1Q!6W;-3r-qf: 1Q;}*::--3r-K-R-1r-au {2o: 1Q!6W;-3r-qf: 1Q;}\'}}B 1K=1H.1V(\'C\');1K.1A=\'1u/Q\';1K.1R(1H.yQ(qd));o.1I.1R(1K)}if(o.1k.qc){v.2J==1&&v.M4==1?v.2J=0:\'\'}if(o.42==0){if(o.1I.2D==15&&!o.iF&&v.Ac>0){Q(o.26,{"1d":v.Ac})}}if(L(v.iG)){v.Y.fe=v.iG}if(L(v.iI)){v.Y.iH=v.iI}if(L(v.1y)){o.2m=v.1y}if(L(1G.Ak)&&v.M2==1){1G.Ak(fm)}F{fm()}}E fm(){1p("fm");o.U=1t Al();if(!v.3g){v.3g="?"}if(v.pl){v.3g=v.pl+o.bb}o.Jm=iK();o.Ao=0;o.4S=Aq();if(o.4S){if(3F.5C("qi")!=1X){o.qs=3F.5C("qi")}F{o.qs=iK();3F.8q("qi",o.qs)}if(v.qF==1){if(3F.5C("qN")!=1X){o.4N=3F.5C("qN");if(2G(v.iM)){if(v.iM.O(o.4N)>-1){o.4N=1X}}}}if(v.Ar==1){if(3F.5C("qM")!=1X){v.8D=3F.5C("qM")}}V(B i=0;i<o.ao.S;i++){if(v[\'Ae\'+o.ao[i]]==1){if(3F.5C("As"+o.ao[i])!=1X){}F{v[o.ao[i]+\'s\']=0}}}gJ("IV");gJ("Ja")}o.gP=o.7n.1C(o.7n.O("://")+3);if(o.gP.O("#")>0){o.gP=o.gP.1C(0,o.gP.O("#"))}if(o.4S&&v.aN==1){o.2O=1t Jb()}if(v.gn==1){o.5r=v.Jc;pS(o.26,"5r",H)}v.cA==1&&v.gn==1?o.cA=1t Jd():\'\';v.ab==1?Jj():\'\';if(v.IM==1){o.9P=1t Il();o.9P.iR()}o.K=1t AA(v.3g);if(!o.1k.2a||v.9k==1){o.1I.1T("Ip",E(){o.4i=H;o.iT=H;o.R?o.R.AF():\'\'});o.1I.1T("K4",E(e){if(!o.3j){if(v.1l.7f>0){2F(o.zT);o.zT=1B(E(){if(o.4i!=o.iT){o.4i=o.iT;o.R.iU()}},v.1l.7f*2c)}F{o.4i=I}o.iT=I;if(o.R){o.R.iZ()}}})}if(!o.1k.2a){o.1I.1T("Kd",E(e){o.3j=H});o.1I.1T("zX",E(e){o.3j=I;if(!o.53){o.6Z=I;o.bx=I}if(o.1k.cn&&o.1k.9k&&o.1P){1B(E(){o.4i=I;o.R.iU()},4h)}1B(E(){o.4M=H},4h);if(o.1k.2a&&o.R.pi()){}F{o.R?o.R.c8(e.4v,e.6V):\'\'}if(v.dr==1){if(o.R.ar()){o.R.6q()}}});o.1I.1T("DZ",E(e){if(L(o.R)){if(o.3j){o.R.ch(e.4v,e.6V)}F{o.R.pv()}}})}if(o.1k.2a){1G.1T("Kh",Bz,I)}v.qH==1&&1D zG==\'E\'?o.qH=1t zG():\'\';o.2I.1T("jV",E(e){if(e.5S){o.cp=e.5S.S}o.3j=H;o.4i=H;o.iV=I;iW("1y",e)},{cO:H});o.2I.1T("aa",E(e){if(e.5S){o.cp=e.5S.S;if(o.cp>1){o.qE=1}}if(o.3j){o.iV=H;iW("Kk",e)}},{cO:H});o.2I.1T("jX",E(e){o.3j=I;1B(E(){o.4i=I},4h);if(v.jH==1){B gb=1t 6o().aq();if(gb-o.al<(v.gj?v.gj:0.3)*2c){jx(e)}}!o.iV&&o.cp<2&&o.qE!=1?fg(e):\'\';o.iV=I;o.cp=0;if(e.5S.S==0){o.cp=0;o.qE=0}iW("4l",e)},{cO:H});33{1G.1H.1T("zX",E(e){o.4M=I;if(!o.53){o.6Z=I;o.bx=I}if(o.3j&&o.R){o.3j=I;o.R.c8(e.4v,e.6V);o.R.iZ()}if(!o.4i&&!o.1k.2a&&!o.1k.tv){o.R.ak();if(o.4w){o.4w.ca()}o.R.Ei()}})}2v(bp){}1G.1H.1T("DZ",E(e){o.R&&o.3j?o.R.ch(e.4v,e.6V):\'\'});o.1I.1T("jV",E(e){o.cn=H;o.3j=H},{cO:H});o.1I.1T("jX",E(e){o.cn=I;o.3j=I},{cO:H});1G.1H.1T("aa",E(e){if(o.R&&o.cn){o.R.ch(e.5S[0].fT,e.5S[0].jY)}},{cO:H});1G.1H.1T("Iz",E(e){B x=e.6i.jZ.k0();if(x==\'Db\'||x==\'Da\'||x==\'D9\'){J}F{o.R?o.R.Dd(e):\'\'}});1G.1H.1T("Ii",E(e){B x=e.6i.jZ.k0();if(x==\'Db\'||x==\'Da\'||x==\'2k\'||x==\'D9\'){J}F{o.R?o.R.D2(e):\'\'}});if(o.6l){qD(7I.1H,BC)}qD(1H,BI);E qD(x,z){B y=[\'\',\'qC\',\'3r\',\'ms\',\'J9\'];if(x){V(B i=0;i<y.S;i++){x.1T(y[i]+(i<y.S-1?"IP":\'\'),z,I)}}}if(!L(o.bR.eu)){1p("J0");J}F{o.bR.eu.1T(\'3S\',jE,H)}if(!o.1k.2a){o.2I.1T("29",fg,I);if(v.jA==1&&v.jH==1){o.2I.1T("IS",jx,I)}}pj();if(v.2W){v.2W.on==1?o.2W=1t DO():\'\'}v.4Q==1?o.4Q=1t IR():\'\';v.d3==1?o.d3=1t IQ():\'\';o.R=1t qz();if(v.ae.DM){o.k7=v.ae.DJ}9S();8H();if(o.4S){if(v.qy==1&&v.1F!=0&&!o.1k.2a){if(3F.5C("qx")!=1X){v.1F=3F.5C("qx")}if(3F.5C("eU")==1&&v.jW==1){v.4y=1}}if(v.DF==1){B sp=3F.5C("Dz");if(L(sp)){if(sp.O(\'.\')>0&&o.d2){o.U.aB(sp,1)}F{if(o.4V){B k8=5I(o.4V,sp,H);if(k8!=-1&&o.R.Dy(\'6b\')){o.9e=k8;o.K.aB(o.4V[k8])}o.R.Dx()}}}}B q6=I;if(v.Dt==1){V(B j=0;j<o.e5.S;j++){if(3F.5C("qu"+o.e5[j])!=1X){v[o.e5[j]]=3F.5C("qu"+o.e5[j]);q6=H}}}if(o.1k.2a){if(!q6){v.pJ&&v.pJ>-1?v.kb=v.pJ:\'\'}if(L(v.Dp)){v.Dv=v.Dp;2G(v.DL)?v.DG=v.DL:\'\'}}}if(o.2O){B f=o.2O.8R();if(f.t&&f.d){o.R.e8(f.t,f.d);o.R.3k(f.t,f.d);v.1e=f.d}}o.U.3m(v.1F);if(v.4y==1){o.U.4n();o.R.5g()}if(L(v.Dm)){3l("6b",v.Dm)}o.7g=1t pG();if(v.6R>0){if(v.dr==1||o.9q<pF){Q(o.26,{"3q-8J":(v.6R+"px")});Q(o.1I,{"3q-8J":(v.6R+"px")})}F{Ms()}}if(L(v.5a)){pE("5a")}if(L(v.bT)){pE("bT")}if(L(o.Y)){js("Y")}if(v.6N==1&&v.Mq==1){o.U.ki()}V(B i=2;i<10;i++){if(L(v["kj"+i])){if(v["kj"+i]=="2a"&&o.1k.2a){3l("kj",i)}}}1B(jE,4h,H);1B(E(){js("6e");if(v.8M){if(1D v.8M==\'E\'){v.8M=v.8M.5L};6f(v.8M+(v.8M.O(\'()\')==-1?\'("\'+v.id+\'")\':\'\'))}},1)}E fg(e){if(o.pC[o.2I]>2){J}o.pB=H;v.gj==0?v.jH=1:\'\';if(o.jD&&v.jw==1&&!o.1k.tv){jx(e)}F{B t=(v.gj?v.gj:0.35)*2c;jC();2F(o.Dc);o.Dc=1B(E(){o.ay=0},t+54);if(v.jH==1||(v.jA==0&&v.1E.jy!=1)){pw()}F{o.jD=1B(pw,t)}}o.ay++;pz()}E pw(){jC();if(o.1k.2a){if(o.R.pi()){o.R.pv();if(o.2Q&&v.jv==1){o.U.4D();v.jv=0}if(v.KT!=1){J}}if(o.eX){if(v.Dk==1&&v.Kz==1&&o.1k.a9){J}if(v.dG==1&&v.Ky==1&&o.1k.4f){J}}}if(o.ay>1&&v.1E.jy==1){o.ay=0;J}o.ay=0;if(v.jw==1){o.1k.2a&&v.Kv==1?\'\':o.U.fg()}}E jx(e){jC();B y=I;if(v.1E.jy==1){if(e){if(v.1E.KX==1&&!o.1k.2a){}F{B x;if(o.1k.2a){x=e.KI;if(!x){if(e.Em){x=e.Em[0].fT-di(o.1I)}}}F{x=e.Lg}if(o.7O>1){x=x/o.7O}if(x){if(x<o.2C/2){if(x<o.2C*20/1v){3l("3x","-"+3f(v.1E.E2,10)*o.ay);v.1E.2l==1&&v.1E.DW==1?6d(\'3x\',0):\'\';y=H}}F{if(x>o.2C-o.2C*20/1v){3l("3x","+"+3f(v.1E.E2,10)*o.ay);v.1E.2l==1&&v.1E.DW==1?6d(\'3x\',1):\'\';y=H}}if(y){if(e.9o)e.9o()}}}}}if(!y){if(v.jA==1){if(v.jB==1&&o.1k.2a){}F{o.1P?o.U.6T():o.U.7C()}}}}E jC(){2F(o.jD);o.jD=1M}E jE(x){if(o.E0!=o.1I.1W){x?o.E0=o.1I.1W:\'\';jE()}F{8H()}}E 8H(){B y=I;if(o.8z!=o.1I.1W||o.9q!=o.1I.2D){y=H}pj();o.R?o.R.3S():\'\';o.K.3S();y&&!o.1P?js("3S",o.8z+\',\'+o.9q):\'\'}E pj(){B xw=o.1I.1W;B xh=o.1I.2D;if(o.R){if(v.Eb==1){if(v.Y.1n!="3v"){B x=o.R.9l("L0")+o.R.9l("1g")+5+o.R.9l("L4")+3f(v.L1,0);Q(o.26,{"1d":x})}}}if(o.42>0&&!o.1P&&!o.bJ){xh=xw/o.42+3f(v.py,0);Q(o.26,{"1d":xh})}if(!o.1P&&!o.bJ&&!o.8Z){o.8z=2h.4P(xw);o.9q=2h.4P(xh)}if(o.1k.2a&&o.1P&&v.pP==1&&9H.aH){if(o.42>0){if(o.42<1||o.K.7j()<1){B sp=9H.aH.pI(\'CR\');if(sp!==1M){sp.8m(E(){}).2v(E(e){})}}F{B sp=9H.aH.pI(\'pR\');if(sp!==1M){sp.8m(E(){}).2v(E(e){})}}}F{B sp=9H.aH.pI(\'pR\');if(sp!==1M){sp.8m(E(){}).2v(E(e){})}}}o.2C=xw;o.3W=xh;if(L(v.22)&&o.R){v.22!=\'\'?o.R.E4():\'\'}if(L(o.fc)){o.K.1z(o.fc)}if(o.1O&&!o.1P){o.1O.2L()}o.4w?o.4w.2L():\'\';o.9P?o.9P.2L():\'\';o.4Q?o.4Q.2U(\'3S\'):\'\'}E 9S(){o.U.pU(v);V(B x in v){if(v.2e(x)){if(x.O("22")==0){if(v[x]!=\'\'){o.F2=v[x];o.U.9S(x)}}}}o.d3?o.d3.Eh():\'\'}E 9j(17,26,1z){if(17){if(17!=\'\'){if(v.9T==1){17=9T(17)}if(26==o.1U&&17==o.pW){}F{if(17.O("#"+v.az)==0){17=o[o.fd[0]](17)}if(17.O("#0")==0){17=dP(17)}17=pV(17);if(L(v.Dn)&&17.O("//")==-1){17=v.Dn+17}B s="q3";if(1z=="5N"){s="D1"}if(1z=="1Q"){s="2V"}if(1z=="CY"){s="1v% 1v%"}if(17.O(\' 9Z \')>0&&26==o.1U){o.g4=17.2f(\' 9Z \');4p(o.pZ);o.pZ=7J(AM,3f(v.Eu,2)*2c);o.cL=0;17=o.g4[0]}17=17.1N(/ or /g,\'"),17("\');17=17.1N(/\\s/g,\'%20\');if(v.I1==1&&5I([17],\'.pX\')){B 1K=\'7r\'+v.id+\'I6\';26.2w=\'<bU id="\'+1K+\'" 2q="\'+17+\'" 92=1 jK=1 2J=1 2Q=1 C="1c:1v%"></bU>\';o.cz=1H.6M(1K)}F{o.cz=1M;26.2w=\'\';Q(26,{\'2u-7l\':\'17("\'+17+\'")\',\'2u-cE\':\'no-cE\',\'2u-1n\':\'7L\',\'2u-4a\':s})}1m(26);26==o.1U?o.pW=17:\'\'}}}};E AM(){if(L(o.g4)&&L(o.cL)){o.cL++;if(o.cL>=o.g4.S){o.cL=0}9j(o.g4[o.cL],o.1U,v.cM)}}E Id(x){if(x.on==1&&L(x.2q)){x.2q=pV(x.2q);B y=1V("2k");if(x.2q.O("4J")>-1||x.2q.O("//")==0){B z=1V("3P");z.2q=x.2q;y.1R(z)}x=8F(x,v.BL);x=4d(x,\'2S\',\'2S\');Q(y,{\'1n\':\'2g\'});if(x.1n.O("3v")>-1){Q(y,{\'3v\':x.cq})}if(x.1n.O("2M")>-1){Q(y,{\'2M\':x.4g})}if(x.1n.O("1g")>-1){Q(y,{\'1g\':x.8c})}if(x.1n.O("1a")>-1){Q(y,{\'1a\':x.3U})}o.26.1R(y)}};E BI(){if(o.1P&&!pO()){o.U.pT(H);o.1k.ff?8H():\'\'}F{if(o.bJ||o.4i){pO()?o.1P=H:\'\';o.U.pK()}}1p("1P",o.1P)}E BC(){if(v.gn==1){pS(o.26,"5r",H)}}E G3(){1p("aH "+9H.aH.jP)}E Bz(){if(2h.By(1G.aH)===90){1p("pR");if(v.Ag==1){B ok=H;if(v.Bw==1&&!o.1y){ok=I}if(v.Bu==1&&!o.1r){ok=I}if(o.7v){ok=I}if(o.1O){ok=H}!o.1P&&ok?o.U.7C():\'\'}}F{1p("CR");if(v.Ag==1){o.1P&&v.pP!=1?o.U.6T():\'\'}}}E pO(x){!x?x=1H:\'\';B y=I;33{y=!!(x.RM||x.RL||x.RI||x.RH||(x.RG!=1M))}2v(e){y=I}J y}E Cy(x){J x.1W==0&&x.2D==0};E pM(){V(B x in o){if(x.O("zy")>-1){4p(o[x])}if(x.O("pL")>-1){2F(o[x])}}1p("T6")}}',
    62,
    3610,
    "|||||||||||||||||||||||||||||||||||||var|style||function|else|this|true|false|return|media|exist|||indexOf|but|css|controls|length||actions|for|pjstg|key|playlist|time||||||||url|action||left|control|width|height|duration|settings|top|break|icon|hide|system|toolbar|show|position|case|log|event|play||new|text|100|hls||start|scale|type|setTimeout|substr|typeof|hotkey|volume|window|document|frame|opacity|tmp|set|undefined|replace|vast|fullscreen|none|appendChild|color|addEventListener|poster|createElement|offsetWidth|null|vasturl|pip||data|title|tip|||container||error|click|mobile|file_type|1000||hasOwnProperty|split|absolute|Math|Play|stop|div|icons|seekto|tiptext|display|_type|src|transform||player|background|catch|innerHTML|Pause|events|parseInt|line|linkurl|screen_w|offsetHeight|scaleX|clearTimeout|exist2|options|mediacontainer|autoplay|current_quality|Resize|right|svg|continue|scaleY|muted|push|margin|files_quality|api|auto|chromecast|handle|playlist_dic|media2||||try|||||||Seek|mediascale|object|dash|vasttype|existv|file|urls|parseFloat|mouseDown|Duration|apiProcessor|Volume|cast|hidden|CheckColor|border|webkit||hide2|removeChild|bottom|Time|seek|pause|ffffff|files|linear|share|_to|ShowOrHide|localStorage|000000|visible|casting|settings2|is_hls|_from|custom|padding|rightmenu|img|Lang|delete|resize|dom|marginleft|youtube|screen_h|obj|tagvideo|subtitle||attr|aspect|JSON|||trim|pljssglobal|||size|Hls|order|MarginPadding|parentNode|ios|marginright|500|mouseHere|_|preload|end|m_to|Mute|sbt|clearInterval|butPosition|canvas|pointer|xhr|live|clientX|droplist|info|mute|vast_loaders|m_type|vastloader|animation|Unmute|random|toString|Remove|string|vast_|http||dechar|focus|default_quality|UpdateText|round|effects|cut|storage|captions|setAttribute|files_speed|zIndex|int|dash_created|is_dash||minutes||volumewheel|200||pjsdiv|||charAt|midroll|controller|metadata|bgcolor|isLive|next|refresh|parse|bga|font|slice|org|over|transition|chrome|2000|UpdatePlay|visibility||removeEventListener|File|www|gradient|preroll|vast_and|xlink|tips|motions|getItem|show2|current_audiotrack|xmlns|Events|line3|indOf|FindBut|box|name|obj2|fill|toolbarHidden|seconds|hlsconfig|plstart|touches|bg2|isVisible|com|status|onError|_url|String|||floor||||||||framework|speed|files_audiotrack|PluginHotIcon|init|eval|isConnected|realfullscreen|target|tipcrn|Advertising|parentIframe|default|skip|Date|_log|Settings|ShowPoster|HLS|waiting|remove|currentTime|iphone|concat|buffered|label|is_sleep|max|block|navigator|hours|lastwheel|SetQuality|clr|current_url|VAST|txt|location|getElementById|pass|leftBg|ended|isVastBgLoad|rounding|reload|Normalscreen|is_ws|clientY|important|safari|value|hidden_volume_over|||||||||||version|ctx|icn|hlsquality|area|hideleavetimeout|alert|ll1I|folder|ratio|message|image|stretch_width|href|cancelBubble|pnt|line0|pjs|Waiting|files_quality_ag|vast_or|ispipkit|gif|Tip|pipwebkit|airplay|lines|ResizeText|Fullscreen|curtain|End|track|HlsLevelsLength|reloadTimer|parent|setInterval|hls_created|center|Sub|lIll|fzoom|onEnded|timeline|bgpaddingleft|container_h|actionstt|container_w|words|redirect|filter|hex2rgb|aover|||||||||||ncrtat|StopWaiting|margintop|quality|cutted|open|onOut|current_subtitle|Background|channels|charCodeAt|replay|then|VastRemoveAndPlay|body|download|setItem|_css2|out|val|stage_x|_keyStr|stage_y|unmute|loaded|normal_w|media_error|Stop|iconscolor|default_audio|nativecontrols|UpdateObject|destroy|MainResize|titlestore|radius|bgl|currentFile|ready|noads|Zoomed|delta|1px|flag|files_subtitle|_cul|but_x|apiprm|customtext|playing|audiotracks|fullscreen_process||pld|loop||rotation||gaTracker||||m3u|bgpaddingright|fltrs|tag|current_speed|Switcher|cursor|onPlay|hls_subs|Poster|desktop|PlaylistG|fff|bgpaddingtop|stopPropagation|CustomSwitch|normal_h|transparent|line_width|sttx|rgba|dur|toolbar_hide|forcehide|hlsaudio|switch|subs|blur|thumb|pause_before_vast|always|sec|vimeo|screen|empty|plid|skpbt|bitrate|line1|CalculateClick|source|quiz|overflow|audioTracks|Title|fplace|solid|keys|ShowOrHideProcessor|qualities|vertical|and|salt|line3value|ldr|vast_loadtxt|Playlist|hls_config|paused|onOver|volumewheelin|android|touchmove||span||control_title|PlaylistNext|but2|but_space|reloadto|search|SettingsClose|clicktime|_rb|gao|vsts|browser|getTime|SettingsVisible|Clickable||button|DashLevelsLength|levels|Motion|clicks|enc2|coh|SetSpeed|iconsover|preventDefault|backgroundColor|fontSize|getElementsByTagName|orientation|_lastime|pljssglobalid|decode|PipWebkit|tagframe|timestore|event_x|qbr2|PlaylistNextExist|1999|l1lI|Scale|cow|controlover|customline|UpdatePlaylist|request|prev|but_y|||bgaover|audiotrack|points|CreateHLS|hidedown|globalfs|iframe|toolbar_margintop|pltxt|vast_longtimeout|hiddenwidth||space||vast_impressions|bgpaddingbottom|pauseroll|||event_y|line2|err404v|err|marginproc||send|mediapip|small|icns|update|hidden_volume_over_process||FvZYcp48as9pgPf|onMove|alpha_div|handleicon|min|ll1l|console|motion_id|hidejustfull|tracks|fullscreen_start|bgcolorover|buffer|create|hls_force|NativeEnterFs|abc|onWaiting|frameresize|nativeAudioTrack|overlay|video|nomute|https|RemoveCurtain|VastAddPreload|bgg|Reload||||removeAttribute|hdnn|topBg|8px|StageMouseUp|PlaylistPrev|Close|||onclick|posterhide||rightside|StageMove|timeFormat|add||vast_poster|base64|touch||tchs|marginbottom|actplay|intro||||compilation|||pstrv|minify|_step|starttimeout|plNxtExst|repeat|polygon|handle_width|_status|tippointer|flip|native|pstrsi|poster_scale|texts|passive|or0|groupId|pointerEvents|pjs_id|mediaSession|items|load|subtitle_on|alpha|3px|textTracks|state|bgt|line_speed|mediatags|HideInterval|hdicon|toggle|hlsdrm|_preloaded|Curtain|HidePoster|rightbs|handlewidth||overopentimeout|Toggle|HideProof|shuffle|findLeft|||stretch_with_volume||HideForce|recover|Il1l|link|hidevideo|onClick||ControlClick|mrgnprs|butNames|ObjectFit|SetAudioTrack|responseText|_ease|Object|expand|default_style|videoHeight|brandurl|nativefullios|autoLevelCapping|onload|enc3|rldcnt|seeking_time|scaleover|VastRecover|hideonpause|fd0|xbg|ToolbarDown|maxBufferLength|pic|control_line|bordercolor|PlaylistExist|ease|onmouseover|stretchonfullscreen|handlehide|FileTo|NativeControls|file2_separator|left0|sub_options|showovercontrol|onmouseout|Played|clickmargin|menuproc|clickarea|bgpadding||ShowTip|hlsend_to|ellipse|pldur|hideoutmute|mode|gatracked||||iosfull|scrollLeft|clicked|hidden_volume|youtu|scl|contentWindow||airplayed|setSpeed|TagPlay|rect|tipbg|tippadding|PlaylistVisible|thumb_width|midrolls|tipbga|HandleWidth|bgh|l3v_show|m3ut|ShowForce|volumescroll|AfterVast|htto|rotation2|PlaylistShow|_seekaftervast|StyleLine|Cut|tipbgcolor|pljsmute|toolbarInterval|bottomside|nativefull|255|speeds|ipad|wheelstep|isPaused|marginprocleft|onmousemove|days|butplstart|Mouse|speed1|ni2|readyState|1em|custom_aspect||autoplaylist||ScreenClick|ToolbarShow|hidewithoutmoving|00|align|checkFont|Ready|file3_separator|saturate|||playersize|_max_order|||BufferStop|not|RemotePlayerEventType|ctx2||frag|white|sourceBuffer|ssfontsize|600|shareme|off|Off|vast_longtomsg|canvas2|hmaxk|kbps|TipText|ymax|onplay|findTop|playerid|compilations|spacing|pageX|iconreplay|yamtrid|details|galabels|_t|XHR|current_color|tmln|heartbeatInterval|lrpd|pstrs|300|iconangle|hls_stuck_time|playlist_source|Array||now|NewFile|_ended|Thumbs|VastNext|gain|va2l||dclckto|hand|custom_speed||observer|swipev|uijs|VstLdTxt|QualityChangedNoHand|errorto|pointed|onPause|scroll|Init|CustomText|Rot|onDuration|onVolume|128|currentLevel|normalscale|ResizeSettings|hlsautoquality|pip_quality|onMeta|domain|SettingsTimers|fcdef|stty|onSeeked|hlschangequality|svg0|href2|postroll|onSeeking|seeking|cftlr|onTimeupdate|file_separator|qbr1|jpg|autoQuality|plurls|lastTouch|UpdateTime||wait|VolumeWheelX|bgo|current_plurl|wait_to|imgldd|MenuProc|vast_type|resizeonplay|bgbrovr||vstpause|icon2|dontplay|pauserollonplay|pjs_|timeshort|ima|control_|bgcontainer|SwitchText|iconsreplay||hideAllIcons|lngth||iconscolorover|VastLoader|linkurl2|tipalways|HidePoster2|restart_audio|worked|vol|userseek|Ended|CustomToogle|KeyPlusDown|loading|dvrtime|outro|noclick|resizetxt|KeyPlusUp|Load|title2|MidrollOverlay|NativeExitFs|SettingChanged|Airplay|adsfirst|VastVideo|rename_audio|timeline_h|VastVisible|AudioTrackChangedNoHand|isvg|PlaylistPrevExist|PlaylistError|openplaylistbefore|PlaylistControls|rotate|valuecolor|svg3|SetSetting|num|IconsColor|VastBgLoad|VastAndLimit|fontsize|_control_|letterspacing|||||done||heartbeat|colorbg||filerorto||find|adsinchain|customdesignsvg|ErrorOr|||hideuntilto|dashquality|picture|_fullscreen_end|sub_sizeproc|rmbgcolor|yaCounter|AirplayChanged|response|HlsLevel|lang|container_h_procent|autonext|playlistrewind|playlistloop|sub_color|randomstr|letter|forbidden_quality|sub_bgcolor|sub_bga|seeked|mtp|Start|opera|mouseHere2|Review|mouseMove|Touch|fatal|5px|StageLeave|sizing|Download|screencolor|14px|datetime|script|ssflyp|edge|scripts|setActionHandler|pushCSS|static|StopMedia|referrer|rldplay|ksu|rightclick|rc_label|offsetLeft|nowrap|rightout|eventstracker|handlescale|omt|but_h|CreateShare|errorMessage|998||serif|isTypeSupported|unmuteonclick|screenclick|DoubleClick|seeksides|isMuted|doubleclick|nativecontrolsmobile|ClearClick|click_t|FrameResizer|mediaSource|deviceName|click0timeout|mime|videoWidth|playsinline|333333|PipSize|CreateDASH|audiosrc|angle|AudioContext|nops|unmuteplease|loadLevel|HlsUpdateAudio|touchstart|mutestore|touchend|pageY|tagName|toLowerCase|onStep|_steps|MediaReady|_speed|code|Error|title_template|spd|PlayLocal|audioTrack|sub_bottom|700|cu2|hdicon2|fit|vastfrombg|covervideo|Password|design|getDASH|getHLS|shadow|stuck|sans|RemoveMedia|Subtitle|gaTrackPlay||quartile|CreateTip|tippaddingtop|fontFamily|rld|timeld|FileType|100000|apdr|newfile|hidevar2|hidevar|lineHeight|fileTimeout|Recover|backdrop|_stopped|close|timerTime|fspr|resizeonwidth|RenewPoints|join|handleaover|urls_and|prefile|nhs|mouseUp|handleiconspress|scrollTop|poster_aover|deltaY|_lastactbut|poster_a|showoverto|onDown|documentElement|win|HideTip|full|navigationUI|Action|Ctxt|mini|3000|iniframe||gifed|sub||changeheight||postMessage|exception|frames|result|while|autohide|current_file|stretch_width_last|resizeonmouse|getQuality|||wtcntrl|nohls|MseIsSupported|ErrorReload|poster_float|fixed|reloadtimeout|SetSubtitle|onDash|heightInterval|smbls|xy00|HideControl|CheckDash|settingsovertimer|ErrorMsg|mediadrag|nextLevel|WaitSize|reloadfirst|playlistovertimer|RadioTags|pipto|fonts|CustomTextButs|prototype|span05|CheckPip|m3ui|JsEvent|ontouchmove|HlsAudioTrack|effect||tmp2|posterhidepause|resizetext|audioctx|BeforeVast|isNaN|pp2|hls_started|autoplaymute||stopkeys||TitlePl|renameTracks|v360|isAuto|NativeSubtitle|enabled||tagSrc|Playing|Status|playerjscom|PlayerSize|||HlsAudioTracks|ShowShare|tagsurl|ChangePip|toolbarisdown|isPlaying|loading_error|gained|removeItem|timerInterval|_tags|contentDocument|1440p|hideuntilstarted|1080p|sleep_timeout|720p|HlsSleep|240p|480p|Captions|360p|toolbarhidden|but_w|onPipEnter|onPipLeave|ToolbarHide|onTagError|ControlCoordinate|hlserror|CreatePoster|Preload|YoutubeReady|re_y|leftright|_move_rights|SpeedChanged|_rights|order0|onYoutubeReady|sepia|updown|firstly|2160p|leftandrightpadding|quick|Metadata|write|checknative|400|CloseSttx||Seeked|killMotion|playiconbut|dontload|hlsDashSub||_hlssubtracks|Loading|HlsSleep0|HidePositionControl|livewakeup|is_hls2|NoSpan|iOSTrackLoaded|all|PlaylistRewind|bg_hide|startcss|maxMaxBufferLength|ClosePl|youtubeposter|StartSpeed|resizeme|PlaylistHere|pjs_cast_button_|cast_available|nativesub|removeTracks|Loaded|ws_created|PlaylistLoad|hostname|pepper|gaurl|Script|encoded|chr|stringify|last|mdswp|found|pjsframed|postmessages|pstr|InitVisible|Prefile|utx|VisibleCheck|copyObject|fromCharCode|normal|Exit|playlist_title|ssfontcolor|sstext|drawImage|innerText|brand||div2|played|pldur3|pjscssed||user|active||destroyed|content|logout||fontnames|removedNodes|spn|_css|nocontrols|start2|tmpr|mozRequestFullScreen|999|SettingsParser|thumb_border|thumb_height|restart|_time_load|requestFullscreen|requestFullScreen|handlemove|introstart|webkitRequestFullScreen|ShowHandle|handlehideinit|EndMove|over_final|msRequestFullscreen|thumbs_on|DVR|tippaddingleft|tippaddingbottom|playroll|TipVol|StartTimeout|png|paddingtop|_blank|play25|play50||toFixed|nbsp|play75|tipcolor|reloadlog|fileorto|6px|tipbgrounding|tipletterspacing|tipfontsize|tipfont|family|notofh|submm|handleiconpress|ToolbarHidden|MainUpdateSize|connected|||volumeLevel|muteOrUnmute||playOrPause|||CastContext|getInstance|StageMove2|ScreenClick2||screenmarginbottom|JsClk|SubStyle|acted|moving|PlayRemote|str2obj|120|Alert|20px|lock|sub_bottommob|FullscreenUI|timeout|Destroy|ll11|isFullscreen|landfullmobile|l1ll|landscape|Visibility|NormalscreenUI|TitleTemplate|checkBase64|currentposter|mp4|rid|pstrsin|session|||contain|savedPlayerState|2px|substore|piped|other|Text|sub_shift|lang_|mobiletv|ioscss|rename|appearance|playerjs_|rmcolor|pljsuserid|cpm|dont|show_settings|show_playlist|RightMenu|reRightMenu|ahd|butByS|sub_color2|userid||pljs|Alpha|extensions|pljsvolume|volumestore|Controls|_stop|_timeout|moz|FSL|tchs2|qualitystore|match|geo|tem|TheEnd|sub_weight|sub_shadow|pljstrack|pljsquality|CreateWS|vars|onup_to|valuemargin|Pnt0|vast_preload|pl_first_id|ClickArea|imageLoaded|marquee|moveOr2end|ie9|bgcolorlink2|||linkurl0|grdlft|valuepadding|hideonplay|control_start|IndexPlaylistProcessor|VastPreloadLoad|overlays|_currentIcon|path|minw||End3|End2|vastcontainer|isVpaid|_recover|vastgo|VastGo||exist2v|brightness|VastCheckNext|TipHide|doctype|IndexPlaylist|handlecolor||vstdwn|midrollo|||iconopacity|UpdateVolume|resizeFromText|settingsNumberVisible|last_text_w|limit|vast_starts|lastt|Rotate|Marquee|vastclick|NewAspect|postsmbl|onUp|shwvstfnsh|thumbs|pstr_to|stopotherplayers|RemoveForNextAd|btm|adscounter|posteronpause|UpText|vast_midroll_limit|ReplayIcon|VastPreloaded|ctxt|ctxtnk|||||Places|hidetime|SetCSS|querySelectorAll|presmbl|deg|VolumeWheel|onMobOver|ff0000|onMobMove|clickscaley|borderRadius|bgborder||bgbordercolor||RenewSubtitle|vts|fts|Bglines||PluginIntro|timeline_w|||exitfullscreen||||coloroverplay|volumewheelfull|handleiconover|fullblack|showtitleplaylist|Pos0|handlea|LineScale|Heartbeat|ceil|fjs|advertising|application|nameofhlsquality|norld|Playback|device|renameQualities|ffdd1f|VolumeChanged|posterhidetime|castdevice|valuefontsize|headfontsize|PlayChanged|posterhidestart|casterror|activeiconsize|Connection||||||livewakeuptime|notv|MSIE|maxTouchPoints|scrollarrows||HlsLiveWaiting|HidePoster3|loadSource|StopOtherPlayer|scrollarrowsize||msie|firefox|scrollarrowcolor|onLoadStart|helvetica|arial|||MuteChanged|alert404text|reachGoal||yaHit||PluginPip|startLoad|playerjs|ga_event|Yandex|yamtr_event|noindex|swipep|analytics|NTDNKDAF|sBSsykkr|alert404|Swiping|vtt|High|FlussonicMsePlayer|debug|I1lI|sub_reset|lI1l|shift|swiping|supported|Controller|incorrect|file2|audioGroupIds|hlsTextTracks|935|006||SourceBuffer||||||||||PluginErrorVideo|alertspaddingv|alertspaddingh|hlsmaxlvl|FindFileInPlaylist|alertsbga|ReloadTimeout||livets|alertsfontsize|CastInit|plcontinue|receiverid|unpause||ErrorTypes|getCurrentSession|MetaAudio|google|alert404v|MediaSource|setVolumeLevel|LoadedData|onLoadedData|Available|hlslowquality|playerState|after|changeAspect|apto|UpdateSub|language|mimeCodec|alert404video|sug|alertscolor|str|tagsinterval|Ease|limitwidth|casturl|limitmaxwidth|winmob|pjs_parent_i|pjs_i|height_div|width_div|network|scrollleft|alerts|Number|666666|||introtitle|comment|onPlayTag|gstatic|hdiconlist|recovery|xml|vast_impressions_all|alertsbgcolor|introspllimit|PluginSug|StateChanged|sourceBufferValidAPI|rnd|no_||HlsQualityLevels|introskiptime|plapto|900|ChkHlsEnd|endfull|movable|PipSwitch|Timeout|filetod|FileTimeout|fileto||redirectonclick|seeked_time|channel|subpausehide|files_channel|rest|Update|yamtr|nativeSubtitle|MediaYoutube|CreateMedia|callback|reYT|PipToggle|imageExists|heartbeatinterval|vast_longtimemsg|InvertPlaylist|current_time|ovr|RenameTracks|trcka|autoplayed|PluginThumbs|MediaSess|minduration|adblock|resume|fullonplay|fullonplaymobile|PlgnVstLdtx|redirectonplay|||current_vast_url|midrollimprsd|PlgnVstPstr|Image|timelimited|vast_prestarttimeout|deltaX|subdrag|crt|rand|zoom|ParseUrl|unset|PostFullscreen|fs_error|scrollwheelfull|Timer|whlskfll|iosExitFullscreen|cancelFullScreen|exitFullscreen||cancelFullscreen|mozCancelFullScreen||webkitCancelFullScreen|msExitFullscreen||TheEnd2|intros|PjsFramed|PluginSub|pjsframe|reloadlive|timelimit|timebreak|removeNativeSubtitle|nomidroll|ct2|dashaudio|maxresdefault|wheel|YoutubeID|passontime|PluginTrack|Quartile|getAudioTrack|playedquartile|Stopped|openpl|finishrewind|720|thumbnails|PlayerjsEvents|hlsaudio_off|playlist_id|40000|hlsfto||||hlsmto|1800|dasherror|hlsdebug|hlsvastwait|FindIdPl|pldur2|VastInfo|hlsquality_off|adsystem|dashjs|preloaddash|wrapper|vast_adid||mss|hlscookies|vpaid_starts|preloadhls|PlgHlsFdt|pjsfrm|skipads|Papi41|VastBreak|cuid|sub_off|playByYoutubeId|time2|hls_stuck_duration|||1200|butseekto|RenameQualities|dvr|160p|castinit|geobj|540p|getContext|customBuffer|Playerjs|isSupported|embed|360|parentElement|splice|preloaded|102|_ue|urlsl|_ud|224|Za|XMLHttpRequest|sugar|andlimit|scrollX|globalfontname||||getBoundingClientRect|gtag|PluginMovable|VastLongTimeout|GET|styleSheet|nativehlsios|toLocaleTimeString|pjslog|m3u8|3600|full_hours|full_minutes|PluginDash|mpd||framei|last_ors|640|notag|Scripted|disableRemotePlayback|rgb|keyframes|anonymous|audio|MediaVideo|_html|frmvst|PlayerjsAsync|scalesmall||often2|clickscalex|Hideuntilto|addtitleplaylistbr|addtitleplaylist|hidestartbutios|openplaylistroot|openplaylistpause|openplaylistafter|nativenotios|nativenotiphone|nativenotipad|topside|PluginHdIcon|often|mobileover|hidebefore2|createTextNode|hidebefore|hideafter|2001|unblock|ontouchstart|lineh|bold|weight|fontsizesmall|||picheight|rotateplaying|svgtmln|onMobOut|iconmargin|liketext|unhidden|prevorius_default_w|parent_domain|inline|minus4back|with_min|with_hours|RightCSS|RenewFromTitle|zoomed|noClickTimeout|control_duration|DisplayControl|hidesec|action_settings|bgstretch|4px|rmsize|tipvar|tipmargin|bgcolorlink0|Click|hideafterclick||rotateonhover|selectOpen|Interval|RightOver|RightOut|5000|System|icon3|inversetime|displayvolume|PluginGeo|upd|playonhover|leavetimeout|setting|hideonvolume|apdra|ShowAnimate|HideAnimate|ShowControl|check|PluginSkip|unfixing|leavetimeout2|hideuntilmeta|pstrwt|hideonfullscreen|mouseup|hidewovar|hideonvar|hidebeforesec2|hidebeforesec|hideaftersec|hideonwidthlimit|hideonwidth|hideoverwidthlimit|hideoverwidth|alwaysjustpause|alwaysnotfullscreen|hidewithoutplaylist|wtpstr_to|WaitPoster|playerheight||vast_nofirst|hlscaptions|landscapefull|opposite|action2|Control|requestAnimationFrame|Actions|keyCode|which|sesstime|plusminus|StorageSupport|trackstore|pljsfirst|HideElement|nums|UpdateSettings|SubOpt|QualityChanged|PlaylistMove|PlaylistOpenId|Media|PlaylistPlayId|PreNewPl|thumb_shadow|updatePlaylist|StageOver|Volumescrolled|posteronwait|prevorius_default_h|encodeURIComponent|hidetimeout|thumb_bordercolor|Posters|ControlsBg|Continue|evenodd|rule|stroke|Rectangle|15px|viewBox|linetippointer|tippaddingright|bordersize|MutationObserver|obsrvr|brd|thumb_borderwidth|thumb_radius|scrolling|pjsfrrs|CreateThumb|PluginCut|allowfullscreen|_duration_load|UpdateLoad|UpdatePlaySeek|_time_play|_duration_play|handleinit|cul|mrgnsmll|scheme|allow|PjsFrMsg|today|CustomFonts|linker|PjsFr|prtObj|prted|parentIframe_style|notframe|IFRAME|eventCategory|Player|lsfullplay|eventAction|lsfullstart|PluginOldGA|abs|OrientationChange|method|postmessage|ParentFS|Init2|rc_|PluginReplace|optStr|eventLabel|FullscreenChange|ga4|blra|logo|allowtransparency|clrs|Tmln|gradientcolorload|valuerounding|RightMove|RightClick|getAttribute|valuesize|FFFFFF|customdesign|gradientcolor|linespeed3|right_x|linespeed2|right_y|colorload|linespeed1|valuebgcolor|polyline|gradientcolorbg|ontop|wps|ControlLine|Color|SvgColor|controlCSS|setcss|HdIcon|hidewithposter|Buffer|Href|translate|valuebg|CrShr|direction|tap|toptip|linetipmarginbottom|thumb_bottom|place|PlacePoints|ltr|270|xOffset|yOffset|CancelBubble|current_thumb|isHidden|handleiconsover|highlight|rc_version|bgline2|bgline1|bglines|clickmarginbottom|clickmargintop|bgw|_a|roundout|_w|315|handlemargin|rc_labelurl|rc_anyway|PluginPoints|Visible|portrait|setHlsQuality|loadedmetadata|showing|cubic|webkitSetPresentationMode|floatleft|stretch|sttr|PjsCheck360|cover|KeyDown|available|1001|timeupdate|ssflyw|addTrack|volumechange|pjsin|textarea|input|click_t2|KeyUp|marginprocright|XY|lrppp|durationchange|enterpictureinpicture|leavepictureinpicture|nativefulldroid|subtitles|default_speed|preposter||sub_sizemob|userplay|userpause|back|sub_designstore|normalscreen|sub_size|seekwindow|SettingsSpeed|SettingsExist|pljsspeed|hlsSub|unmuteonplay|current|muteiconbut|setDashQuality|speedstore|sub_size_fullscreen|actpause|setTracks|template|subtitleTrack|sub_sizemobfull|templated|linkpause|ChromeCast|screenshot|setDashAudioTrack|setQuality|autoLevelEnabled|linktarget|setHlsAudioTrack|PluginShare|seekicon|resizePlaylist|titlepl|mousemove|screen_lw|NewPl|seeksidesec|upTexts|updateTitle|customTextPl|connect|nextAutoLevel|um1|volumegain|showShare|change2playlist|marginprocbottom|ControlsBgClick|gainedsource|resizeSettings|ControlX|read|closePl|upText|lrpps|resize2|changedTouches|Gain|marginproctop|nativeControls|customText|subtype|customData|manipulation|posterstime|wrapper0|nameofdashquality|trackId|CAPTIONS|castpause|origin|filetype|castplay|switchpip|errortimeout|midroll_time|getVolume|vast_skip|backface|Track|vast_xcolor|VOLUME_LEVEL_CHANGED|vast_progressbgcolor|TrackType|IS_PAUSED_CHANGED|TEXT|timeplay|vast_click|previoustrack|trackContentType|isyoutube|artwork|MediaMetadata|started|IS_CONNECTED_CHANGED|RemotePlayerController|midrollcrtm|youtubeready|maintitle|trackContentId|vpaid|fillText|Active|cut2|vastinfo|vastnow|menu|showvlt|showplaylist|oncontextmenu|dashlowquality|playlist_length|ContextMenu|playlist_folders|cut1|vastpause|rc_custom|invert|jpeg|laquo|toDataURL|rc_nobrand|uncasted|raquo|casted|uppercase|dashcookies|pjscolor|vastresume|images|hover|10000|indent|outline|visited|vast_progresscolor|LoadRequest|activeTrackIds|loadMedia|rmright|nameofyoutubequality|sscopyright|vrsn|vaststart|getCastDevice|currentfile|dashdebug|class|Courier|Arial|fillStyle|99999|friendlyName|vastmute|startAd|vastids|096|nexttrack|introclosetime|partnerpostrollor|partnermidrollor|Orientation|settings1|settings1action|settings2action|109|midrollpoint|108|107|106|introclickable|105|104|103|partnerpauserollor|101|settings3|settings3action|settings4|settings4action|settings5|settings5action||introtxt|poster_floatmargin|poster_floatposition|poster_floatwidth|poster_floatheight|default_channel|StringVar|activeicon|titlecolor|encode|2048|88484718|allowLinker|191|vast_openclick|vast_preroll_vmap|require|vast_pauseroll_vmap|autoLink|vast_postroll_vmap|vast_midroll_vmap|vpaid_timeout|192|vpaid_timeout2|vast_resound|127|110|partnerprerollor|111|112|113|114|115|116|117|vpaid_slotinframe|118|119|121|122|0123456789|eventstrackervast|MarPad|poster_floatbgcolor|querySelector|mpegurl|07|resumeSavedSession|insertBefore|async||same|transbg|androidReceiverCompatible|oframe|RemotePlayer|observe|childList|vast_unmutehover|dis|16x9|clk|tab_and_origin_scoped|GenericMediaMetadata|textTrackStyle|GENERIC|rel|MetadataType|stylesheet|metadataType|vast_volumebgcolor|circle|MediaInfo|googleapis|vast_volumecolor|vast_impression||vast_linktxtonmobile|head|vast_unmutebutonce|ytautoquality|minivis|vast_default_volume|reduce|removebykey|substring|150|arguments|__onGCastApiAvailable|word|PJSDIV|nodeName|FindPjsDiv|container_w_procent|relative|cssText|select|35px|autoJoinPolicy|receiver|pstrvd|receiverApplicationId|setOptions|NaNpx|number|_vdpsrt|olor|control_buffer|setProperty|repeating|45deg|CC1AD845|Logo|1000000|IS_MUTED_CHANGED|vast_linktxtcolor|vast_xbgcolor|keydown|160|iosv|PluginQuiz|mutedautoplay|iemobile|blackberry|mouseenter|matches|fine|matchMedia|WebkitAppearance|vast_timeout|vast_pauserolltbimp|vast_pauserolltimebreak|wkdt|vast_pauseonclick|keyup|elastic|Philips|Tizen|Roku|BRAVIA|armv|432|857|275|webOS|tvOS|vast_pauseroll_limit|quizes|embedheight|vast_closeonclick|fullscreenchange|PluginMediaTags|PluginEffects|dblclick|Shadow|Font|sleeptimer0|Bottom|Yes|1val|Skip|Local|offsettimer|Sleep|sleeptimer|0val|roll|once|All|together|MSFullscreenChange|offsettimerinit|TimeStore|startvisibility|PluginMini|embedwidth|toUpperCase|560|__storage_test__|vast_pauseroll_counter|PluginBlock|296|MacIntel|sessid|918|vast_prerolltbimp|vast_preroll_counter|175|997|984|994|985|981|988|979|971|962|001|007|897|885|874|848|818|785|003|747|705|659|606|547|483|416|344|267|775|915|platform|Trident|ipod|957|883|vast_volume|Windows|914|992|Safari|mouseleave|029|Firefox|041|036|Edge|019|vast_prerolltimebreak|Opera|mousedown|appVersion|vast_title|vast_preroll_limit|orientationchange|996|trident|move|vast_preroll_andlimit|userAgent|appName|993|983|line_play|embedsize|unfix|toogle|startvast|nombclck|dwn|EditTracksInfoRequest|nfsclios|nfscldr|Test|VpaidSet|vpaid_|SetChannel|youtubeid|getSessionObj|lastIndexOf|logapi|layerX|sub_bgo|editTracksInfo|dispatchEvent|initEvent|createEvent|sub_bgpadding|adShown|vast_Impression|rewound|unmuted|mobtch1|resumed|vast_introtbimp|ffeeab|seeksidesmob|prt|sub_store|scroll_height|change2playlist_bottom|ga_proc|PLAYER_STATE_CHANGED|margin_bottom|vast_titlecolor|fix|isfullscreen|vast_titlebgcolor|sender|vast_skipcolor|playsinlineonmobile|cast_sender|loadCastFramework|mainresize|ref|offsetX|vast_skipbgcolor|subtitle_start|moveplaylist|disconnected|setVolume|plduration|RegExp|Boolean|updateCuid|185|sub_big_fullscreen|vastbreak|vast_linktxtbgcolor|sub_bg|TextTrackStyle|15em|_timer|Promo|sharetop|Enter|LIVE|Audio|website|advertiser|the||adsinvitation|shareiconscale|ads|shareiconscaleover|shareiconmargin|Ultra|vast_postrolltimebreak|Quad|vast_postrolltbimp|Super|1296p|Full|Medium|Small|Tiny|clipboard|skipTime|Copied|introspl|Previous|Reset|rafinit|vast_postroll_limit|autoplaynomobiletv|panel|mouseover|gainact|eventlisteners|capiom|watch|playerjs_hit|mouseout|edgeColor|00000016|sharetitle|edgeType|DROP_SHADOW|CASUAL|nonInteraction|fontScale|foregroundColor|vast_introtimebreak|vast_postroll_counter|vast_midrolltbimp|vast_midrolltimebreak|passonstart|playback|PluginRounding|vast_midroll_counter|hdiconclr|f00|radius_|Metric|vast_playroll_counter|vast_playroll_limit|300000|PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMTAwJSIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgMTMgOSIgd2lkdGg9IjEwMCUiPjxwYXRoIGQ9Ik01LDcgTDYsNyBMNiw4IEw1LDggTDUsNyBaIE0xMCwzIEwxMCw0IEw4LDQgTDgsMyBMMTAsMyBaIE0zLDYgTDMsNSBMNSw1IEw1LDYgTDMsNiBaIE0yLDcgTDMsNyBMMyw4IEwyLDggTDIsNyBaIE03LDcgTDEwLDcgTDEwLDggTDcsOCBMNyw3IFogTTEwLDYgTDExLDYgTDExLDcgTDEwLDcgTDEwLDYgWiIgZmlsbD0iIzAwMCIgZmlsbC1vcGFjaXR5PSIwLjY0NzEiIGZpbGwtcnVsZT0iZXZlbm9kZCIgLz48cGF0aCBkPSJNNSw3IEw1LDYgTDUsNSBMMyw1IEwzLDYgTDMsNyBMMiw3IEwyLDIgTDMsMiBMMyw0IEw1LDQgTDUsMiBMNiwyIEw2LDcgTDUsNyBaIE0xMSw2IEwxMCw2IEwxMCw3IEw3LDcgTDcsMiBMMTAsMiBMMTAsMyBMMTEsMyBMMTEsNiBaIE0xMCw0IEwxMCwzIEw4LDMgTDgsNCBMOCw2IEwxMCw2IEwxMCw0IFoiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgLz48L3N2Zz4|copied|Speed|playtry|FwfjgxzkeQDPe3zWFIg0fPvXf2nkgwKRDsZjDsNQFmnocMD0yxj9zpqQyxN9zpqQyxgScxHRFIfnClfjdwLSc2k0FIfnClfjcPOVet0Qy2cPcPcPclgfBp48as9QFmnfB3D2cp4lBszkb3HSe24lElzpgw9ZylZlgxOZcIy6yQD2coyVyPzQymRZiIZlb29XgxzYev9ZfPL2ymS7yP9ocwLoymRnDoZle24lEmqVyPOme24lEly8f3cQyxgScxHRFIfoCsfjdwLSc2k0FIfoCsf|hideonbar|hideonleaveandplay|menufltr|showuntilmeta|setaction|FwfjgxzkeQDPe3zWFIg0fPvXf2nkgwKRDI41Bsq1AIf|FvZYfwv0dt48as9QFmnfB3D2cp4lBszkb3HSe24lElzZewv5ylZlgxOZcIy6yQD2coyVyPzQymRZBszlc2DYew9oymRlCmKobmCpylZlbPgYymRnBszlc3rkcwHSePflEly3ytfjDoq3ylZldMDYeP1kfPgSely6ymqjCsqZytGlBszlc2ulElyZBmblBszlc2vYgPLoymRZBmbVyQDmbMnOe3cOfly6ymblBszRdMHOymRnBszRdMHOe25Zewv5ymRnBszRdMHOe255e3L0gMzOymRnBszSb29Xf2DYew9oymRlcPbZCtqZylZldMDYeQDme2nYfP92caylElzPcPcPcPbliIZlb29XgxzYev9VdacOymS7yP9ocwLoymR2BszYely6CsZlgwL4gsy6yPnSgPKlBszVcaH0cazpfwvmdM5QymRoBszkb3HSe24lElzVdacOylZlgxOZcIy6yQHOhxGlBszRbM5NymRZBszmewOmdoy6CsZlcP9XgxDShPKlEmuZBszWbazQdM4lElyZytqjCsqnDIyVyPulEmqXDIZldwONcIy6CIZldwONcM9XgP9NymRniIZlb29XgxzYev9pgw9ZymS7yP9ocwLoymRnDlZle24lEmqVyPOme24lEly8f3cQyxgScxHRFIfoCsfjdwLSc2k0FIfoCsf|hidelap|FvZYf3cQFlyVyPOme24pymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtyVytCSzp48fwv0dsrNFIgDCJbVDo4nCpb2CJupClrCCJbVDo4nCtNnDmN0DIrCCJKXCmq4CJf4DIZ3BmuZEJu2EJG1yuZnDs4oDpKZEJCVDo4nCtNnDmN0DIrtCJGXCmf1CtNpBtCXCJN5CJy2CmKjCJuXCtbpCJN3BtqjDo4nCpf1Dtb0DIZZyuCpBmynCJj5DJNnBtqjCsZpBmu5EJuoDmy1ytqVDo4nCtNnDmN0DIrtCsZnCI4ZCJNoCJy2ytCXCmunEtN1EJuVCJGXCmu4CpC4EIq3BmupDpK0DmG1Btu0BmynEtCpEtNjJtfXCJC3DJG2DtKVCJyXDtGnCtG2DIrtDs4nEJCpCtj1DIZnCl40DtuZDtb1ytuXDpj0Cpj2DmyVCJqXCtGnDpqnEsqnBmf4DtC4DmboBtfXCJq5CJb5DtKjGpuXDpj0Cpj2DmyVDs4nDpb2CpfZDIq0Bmu5CpCZEtK1BtuXDpf3CmNoCpbjDo4nCpf1Dtb0DIZnBmf3Dpy5CmC2yuCnCs4ZEtu3EtG0BtuXDpf3CmNoCpbjCJyXDtNZDpq2CoZ0Bmu3DmbpDpq1ytuoBmG5CtfZDmCVDo4nCtNnDmN0DIrCCJqXDmG0DJu2DoZ3BmuZEJu2EJG1yuZnCo4pEty4EJN2BtunBmK1CmGZCtGjJtu2BtfXCJC2DmunCpyjMlfjcPOVet0Qy2cPcPcPclf|aw4jysqjFvZYcp5femnfB3D2cp4lBszkb3HSe24lElzPgMnVf2DocMLXylZlbMD0dM9XCly6yP5YfP1kexDmfPLOelyVyQH5fwKlElzpgPflBszZe3DSgwOYely6yPDYeQHoe2npBazSc2k0ylZleMvoc2OXymRlClqnCsqZytu1ylZldMDYeQDme2nYfly6yPcPCtqZCsz9Bszme250fP9Va3D0baz0ymS7yP9ocwLoymRnDIZlfw9pdaHSe24lElzmcM50caylBszpb2vVcIy6ymGlBszYely6CIZldMDYely6ymnpgPfjg2ONgwj9zpyZzorRcMOQdxG9zpyZzp48corPdMnVBaz1ewK9z25YeQSOfP8QyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtGVytySzp48fwv0dsrNFIgDCs41DtboDpboCpNVCs4oDtG3DtboDsrCCJyXDpupCmC4DoZ3Bmf3DmCpCpujJtqXDJj2CtGnDJKoBtu1BmG1CpG0EJCjJtqXDJG2Cmf2CmC5BtqXCmG0DpG2CmGjMlrDCl4ZDJCpCpCnDsZoBmN0CJf3DpyjJtyXCtf4EJCpEtfVCJyXDpCpCtf0ClrCEI44EtbpDpq3ClZ3Bmf5CtK4CtuoyuZoBmq1CpCpCpu0BtyXEJGnDpf3ClrdzorPdMnVFIfmcPcPcPcPz1ZYFmnfB2f|scaledrag|showovr|dragging|scaledrag0|createposter|0001|aw4jysqjysqjytnZbaHRywG9z00ZBtuXEtuoDpjoCtfjGpqVCs44CJu2CJqnDpjjCs44CmqpCJy1BtqjCI44CJCoCpf2EsZZyuZ5BmuZCmG1Cty4BtqjJtNXCJqoDtKZCmjVCo41EtqoCJuoEIrCCo41DpN0CpG0EsZpBmK4CtynCJy5yuCpBmK3EJGpDtG4BtGXDJjnCpjpCJNjCo41DpN0CpG0EsZ2Bmj1Dpy0DtCoytCXDJf5DtC0DtjVDl44DJfoDtGpClrCCsZ2Bmj1Dpy0DtCoyuZZBtuXEtuoDpjoCtfjMlfjdMG9z1zOb3HkePgVcIfjcPOVet0QypqZEJrPclfjcPOVes1ogMnOFIgXe256cazYzp48as9ZbaHRFOnXysqjysqjysq8fwv0dsrNFIgDCJqVCI44CJy3EtyZDortCJqVCs44CJu2CJqnDpjjCJqXEtyZCpuoDIZZytunBmjnCpypDpfVCsrCCJNXCJqoDtKZCoZZyuZnEI4nCty0DJqpBtCXDJjZCmunCmNjJtupBmK3EJGpDtKVCo41EtqoCJuoEIrtCJCXDJf5DtC0DIZ0BmK4CJC4Cpu5ytupBmK3EJGpDtKVDl43EJNpCJb0CIqnCo41DpN0CpG1BtbXDpN5Cpu2DtujJtuZBtbXDpN5Cpu2DtujJtuZBtuXEtuoDpjoCtfjMlfjdMG9z1zOb3HkePgVcIfjcPOVet0QypqZEJrPclfjcPOVes1ogMnOFIgXe256cazYzor0fPvXf2cYfP09z3HobM5pewv0cIjnDs41DJuoCmKVytCXCpN5DmK4AIrpb2vVcIjWCIZjCINjgxzkeQDVbaHOAs0nDs41DJuoCmKVys0pBmC5EJb1EsNjzp48as9ZbaHRFOnXysqjysqjysq8fwv0dsrNFIgDCsZ5BmK1CtfZEtynyuCZBtjXDJG5DJC2CpujCs44CmqpCJy1BtfXDpC3EJy2CJGjCI44CJCoCpf2EsZ3BmfpDpNoDmu0yuZ5BmuZCmG1Cty4BtfXDpC3EJy2CJGjJtNXCJqoDtKZCmjVCJuXCpu4CJC3DsrCCo41DpN0CpG0EsZnCI4pCJjnCpf0yuCpBmK3EJGpDtG4BtuoBmCnEJCZEJCjCo41DpN0CpG0EsZnDs41CJKoDmN5ytCXDJf5DtC0DtjVCJGXDJu1Cmb5EIrCCsZnDs41CJKoDmN5yuZZBtNXDJKZDpq4CmujMlfjdMG9z1zOb3HkePgVcIfjcPOVet0QypqZEJrPclfjcPOVes1ogMnOFIgXe256cazYzor0fPvXf2cYfP09z3HobM5pewv0cIj0BmK1CJyoDIZjCJuXCJy2DJN4AIrpb2vVcIjnBsqWCINjgxzkeQDVbaHOAs00BmK1CJyoDIZjBJunBmuoDmK5EsNjzp48as9ZbaHRFOnXysqjysqjysq8fwv0dsrNFIgDCJqVEI41Dmb2EtjpClrtCJqVEs41DmK1CJb0CoqnCs44CmqpCJy1BtfXDpKpEJq2CmKjCJuXEtupCmC3DoZ3Bmf1CpNZDmy1yuZnEI4nCty0DJqpBtfXDpKpEJq2CmKjJtu5BmuZCmG1CtCVCJuXCpC0CJu3DIrCCJCXDJf5DtC0DIZnCI4pCpGnCJf1yuCnCo41DpN0CpG1BtuoBmCpDJy4EJGjCJCXDJf5DtC0DIZnDs41CJKoDmN5ytupBmK3EJGpDtKVCJGXDJu1Cmb5EIrCCJqVCJGXDJu1Cmb5EIrCCJqVEI41Dmb2EtjpClrdzorSct0QKPLmgwvXc2nOzorPdMnVFIfmCtq5CwcPzorPdMnVBaz1ewK9z25YeQSOfP8QyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtu0BmK1CJyoDIZjCJuXCJC0DJj4AIrpb2vVcIjWCIZjBJuSyxHobM5pewv0cIjWCJGXDJKnCmy1BsqWCJuXCJC0DJj4AIqQFmnfB3rkgwj|vast_posterurl|hideuntiltext|hide0timestore|hidelastpl|hideafterstart|hideunwait|hideonmobile|hideondesktop|Fxrkgwjjct0QJJjXEJN5EJNVCJqXDtC3DtNjJtjXEJN5EJNVCJqXDtC3DIrCClZ1BmynEtf1yuZ4BmN5EJN5BtqjJtjXEJN5EJNVCJqXDtC3DtNjMlrDCsZZyuZoBtqjJtyVCJqXCmG5EtCjJtqVCJqXCmG5EtCjJtqVCsrdzorPdMnVFIfmcPcPcPcPz1ZYFmnfB2f|vast_loadtxtd|ylZlbMD0dM9XymRlf2kkfPKlBsz0harOymRlf3cQylZlfw9pdaHSe24lElz0e3qWfPOQdxGlBszWbazQdM4lElynDIqnDIqZytqlBszlcoy6CIZlbPgYymRnBszpb2vVcIy6CIZlbPgZbMHNdM5QymRlDlq2ytbjDlyVyPzQbIy6Cs4pBszlc2vYgPLoymRZBmbVyPvXdM1kgwOYely6yQrYf2O0dM9XylZlcMvpcIy6yPLVbaD0dMCliIZlewvXcoy6yPLXylZlfxzOew9kcsy6CIZlf2L0gwOXc3ClEQVlf2L0gwOXc3C0ymRZiIZlfaLkewO0haD0e3zOymRZBszWgaHOf3HYfPKlEmqVyQcYexLWcaD0e3zOymRZBszPdM5Sf2kocagSePGlEmqVyPcSewL0eoy6BJuVyQcYexLWcIy6ymulBszXe3D0fwZlEmuVyP5Yf3LlymRnBszXe3O0ymRnBszmdxzYeMLmbaD0ymS7yP9XymRnBszpgMylEmv9BszQew9lbMnPe250ymRZBszPe250foy6CsZldwnpgPLof2OYely6ymuXDs4nCsyVyQrocMnYbMHRexClEmuVyP5kgwO2cMkVf2OXf2vPbazSymRnBszRexDme25PdMflEQVleMv4GQLPcPLoJwLXc3HRymRnCmr9BszZfP90cMD0dM9XymRZBszocMHSfPLmgsy6CsZlfPOQdxHWcM51ymRnBszob19mgaD0e20lEmuVyQzma3cOfQDSe24lEmqVyQzma2nkbPLVymRlJ25Se25Gewv5BN5OgxgYfPVlBszme250fP9Va2OseMLQymS7yP9XymRnBszYfPHOfly6CmqVyPvmgwOYely6yPD1f3HYeIyVyPOme24lEly8f3cQyxgScxHRFIfoCsfjdwLSc2k0FIfoCsf|nomedia|ylZlbMD0dM9XymRlePL4gsyVyQH5fwKlElzpgPflBszpb2vVcIy6CI4oBszZe3DSgwOYely6yPDYeQHoe2npylZleMvoc2OXymRlCsqZytqjCJKliIZlb29XgxzYev9pdwvocIy6hozYfPHOfly6CJNVyP9XymRZBszSb29XymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQywcSewZ9zoCZCtqZCtqQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtyVytySzp48fwv0dsrNFIgDDI41DmboEtG1BtjXCmboDtjpDmbjGpKXDJb2Cmj0DIZ4BmCnDpGoDJCoytKXDJK0CJqZCJfVEs4pDmNnDJbnCIq1BmK1CtN2Dpq1BtjXDtypDpGnyuZnCI4nDmC5DtqoBtunBmy5EJq4CtCjGpunBmb0DtKoDJuVCJqXEtjoCtypClqnCl4oDJNpCJu2BtuZBmboCJf2CpjjCJyXEJC4DJqnBtuZBmboCJf2CpjjGpu0BmG2DJK0DJjVCJqXDmyoCmN5ytu1BmfZCmN1CJfVCJuXEtNZDtu2DlqnDI43Cty5DJu3BtupBmG1DJqZDIrtCJKXDpqoEJKnDoZnDI4ZCmu1DJK2ytu0BmG2DJK0DJjVCJbXCmj5DmfpClqnCl45Cpj1CtuVCJbXCmj5DmfpClrtCJuXDtuZCmC3EsZnDl4oEtN2DpCoytuZBmu3Dtq1CtGVCJKXCtynDJK1DlqnCs4nDpGZDJq0BtupBmG1DJqZDIrtCJqXCJf0CtKZDsZnCo4pEJj2CpbpytuZBmu4DmypDtfVCJCXCpG4CJK0ClqnCs4nEtNpDmf5BtupBmy5CpK2EJCjJtGXDJf2CpN0DmCVCJqXDtu4CmCjGpGXCtN0Dtu3CoZnCs44CpC2Etu2ytCXDtjnCtypCmfVCJuXCtNpEJGnytyXEtqnEtCpEtGVCJuXCtNpEJGnyuCnBmy3DtN2Cpq5BtunBmq5CpN0CIqZBmqpDpC4Cpu3DpbVEI44CmfZDpyZEsqZBmqpDpC4Cpu3DpbVEs4oDmy0EtC2DlrtCs4ZCpfpEtCnDpf2BtbXDmN2Cmj5DpNjCI4oDpG5DmCZEIZ1BmGoDpjnDJG2ytyXEtqnEtCpEtGVDI40Cmf4CJK0DlrtCo40EtuZCmCoDoZ1BmGoDpjnDJG2ytGXCtN0DJNnCpfVDI42EtN2EtqoClq0BmK3DmC5DtbpBtbXCJq1CJCnEtjjJtuZBmu4EJC2DpNVCo4oCmN3EJy1EsrtCJqXCJj2CmC0DoZpBmu3Dtj1CtNpytuZBmu3Dtq1CtGVCo4nCmCnCmqnDIqnCs4nDpGZDJq0BtCXCtb2DpKnDtGjGpuZBmu3Dtq1CtGVCI41CtC1EJqZDoqnCI40CJqoCpf4BtqXCmC1CmN0CJu4ytuoBmNpEtKZCIZZBmypDJy5DtunEsrtCJGXDtb1DJG1EsZZBmypDJy5DtunEsqnDI43Cty5DJu3BtuXDJqpDJNZCtfjCJKXDpqoEJKnDoZpBmq2Dmf1CJG0yuCnDI43Cty5DJu3BtGXDmCoEJG1CpujCJGXDtb1DJG1EsZ1BmNZCJGnEJb0ytuoBmNpEtKZCIZ1BmNZCJGnEJb0yuCnCl4oDJf3DtKnBtKXEJqnDtu5DmGjCJuXDmG0CtqoEIZ1BmbpEJK1Dtj4ytunBmu2CpN0CtyVDI4oCmy0EJf3EIrCDI41DJq5DmfZDIZ4Bmq5EJG0CmKoyuC1BmK1CpNoDmunBtjXCJK0Cpj0CJjjDI41DmboEtG1BtjXCmq2CJu0EJNjDI41DmboEtG1BtjXCmboDtjpDmbQywcSewZ9zoDPcPcPcPbQas8|FvZYf3cQFlyVyPvmgwOYely6yQrocablBsz0harOymRlf3cQylZlf2DkewKlEmuXClZlfw9pdaHSe24lElzme250fP9VfoyVyP1kfPgSely6ymqjCsqZytu1yQ0VyPDYeQHoe2niePL4gsy6hozYfPHOfly6CJjVyP9XymRZBszSb29XymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtKVytKSzp48fwv0dsrNFIgDCs40DmN0EsZncI0ZDIrCCs40DmN0EsZncI0ZDIrCCs40DmN0EsZZyuZ3BmG2EJG3BtKXCmu4DpKjJtqXDtb5DtjVCJqXDtC3DIrCCs40DmN0EsZncI0ZDIrdyu03BmKpCtKoBtqjJtNXDJCZDJyVCsrCEI41Cpq1ClZnCs42CmG4ClrCDo41Cpq1ClZnCs42CmG4ClrCDo41Cpq1ClZZyvRQywcSewZ9zoDPcPcPcPbQas8|hideall|dropopen|Show|PluginSettings2|Created|seekiconbut|nativehlstv|aw4jysqjysqjytnZbaHRywG9z00nCsZ5BmK2Dmb4EtCoyuCnCsZ4BmK2DJKnDmGpytuZBmjoCtCnCmKVDo43DJC5CtboDIqnCI44CJCoCpf3BtfXDpKpEJq2CmKjJtu5BmuZCmG1CtCVDo43DJC5CtboDIrCCJNXCJqoDtKZCoZnCI4pCpGnCJf1yuZnCo41DpN0CpG1BtunBmCpDtunDpKjGpupBmK3EJGpDtKVCJyXCpC1Cmj5DsqnCo41DpN0CpG1Btu0BmKnDJy2EJNjCJCXDJf5DtC0DIZnDs41CJKoDmN5yuZnCsZnDs41CJKoDmN5yuZnCsZ5BmK2Dmb4EtCoyvRQywONFIgIcMD0bM5QewKQywcSewZ9zoDPcPcPcPbQywcSewZWfQLVcJ0QeP9XhPLoeofjgxzkeQDPe3zWFIg0fPvXf2nkgwKRCJGXDJKnCmy1BsqnCI4nCpG1EtjSyxDmbMnOAs0nBsqWCINjgxzkeQDVbaHOAs0nDs41DJuoCmKVys0nCI4nCpG1EtjSysf|bezier|aw4jysqjysqjytnZbaHRywG9z00ZBtNXDJKZDpq4CmujGpqVEs41DtN1CpbpCIqZBmjoCtCnCmKVDo43Cpf5CmbnDsqnBmjnCpypDpb4BtfXDpC3EJy2CJGjJtNXCJqoDtKZCmjVDo43Cpf5CmbnDsrCEI4nCty0DJqoEsZnCI4pCJjnCpf0yuZpBmK3EJGpDtG4BtunBmCnEtupDpGjGpCXDJf5DtC0DtjVCJyXCpu5Cpq5CoqpBmK3EJGpDtG4Btu0BmKnDJy2EJNjCo41DpN0CpG0EsZnDs41CJKoDmN5yuZZBtu0BmKnDJy2EJNjJtqVEI41DJq3CtjoCIrdzorSct0QKPLmgwvXc2nOzorPdMnVFIfmcPcPcPcPzorPdMnVBaz1ewK9z25YeQSOfP8QyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtGXDJKnCmy1BsqnCI4nCmb1EJjSyxDmbMnOAtuVys0nAIr0fPvXf2nkgwKRBJGXDJKnCmy1BsqWCJuXCJy2DJN4AIqQFmnfB3rkgwj|ssfly|nativehlsinsafari|nativehlsinedge||ssdown|support|seektome|cancel|flussonic|cancelskip|PlugMediaChannels|tskp|complete|taginframe|combined|mp4a|plclose|error_time|urlmse|codecs|avc1|42E01E|tagcors|nodownload|crossorigin|crossOrigin|FvZYfwv0dt5felqjysq8as9QFOnXFvZYf3cQFlyVyPOme24oymRlFxD2cor3dMH0dt0QCmrZhsfjdwLSc2k0FIfnDar4zor2dML3GP94FIfpCmyjDsqoCsqnDIfjgPLof2OYem0QCI4nzor4eMnXfp0QdxH0ftSfB1ZYg3g3BQfpBP9oc1ZYCmqZCvZYf3cQzor4eMnXfpS4ewOXdp0QdxH0ftSfB1ZYg3g3BQfpBP9oc1ZYCJN5ELZYhwnSePVQFOnXysqjytnQyxD0fP9UcJ0QeP9XcIfjf3Hoe2WOBagScxHRFIfnzorPdMnVFIgXe25OzorPdMnVBaz1ewK9z2L2cM5YcwGQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtCoCl4ZCtqZCtqVytGXCtqZCtqZAIf|drunchr|ynxnopip|nativenodownload|controlsList|hideuntilstartedios|hideuntilended|DASH||FxrYexOQe24jfw9SeQHpFIf5Bmu1DpN1EtN4ytqjEI4nDJf5DJj5Esq1Bmu4CJjnEtu4ytKXCJfnCJu4DoqoBmK5CtNZEJq5zorPdMnVFIfmcPcPcPcPzp48as9Ze2n5c29XFmnZe2n5c29XyxrYdM50fp0QDI44Cmf3EJyZEsqZytKXEty3DpNoCtjjDI4nEtu4CJjnEsqnBmj0CtN1CJf5ytyXDJNZEJq5CtNQywcSewZ9zoDPcPcPcPbQFmnfB3rYexOQe24|openById|3840|2160|customqualities|playById|eng|English|2560|rus|Fxrkgwjjct0QJJfXEJq5CJG2DsZnCl44CpC5DsrCDo45CtNnDtb0Btu0BmuoEJC5DtKjJtuZBmjpCJC3DpGVCJGXCJy5CpN0DIrCCJqXEJC2DJbnDlZnDs4nCmqnCpjnyuCnCI4nDJq0DpbpBtu0Bmq4CmynDJGjCJuXDtu5Cpf2ClZnCo45DmN4Dtu1ytunBmb4Cmf4EJyVCJCXDpCoEJN0DsrtCJyXCtN4CJfoDsZnCo4pDJN1CtC5ytuoBmC0Ctb2DtuVCJyXDpNnCpf0DIqnCl4pDtq2DmGnBtuoBmq0Dpy2CpGjGpuoBmC0Ctb2DtuVCJuXCmK3DmupCoqnCl4ZCtbnDtj2BtuZBmb3CmjnCoqnCI40DmK5Etf1BtuZBmCoCJu2DmbjGpunBmu1CmKZCmfVCJqXCJu3Ctj3CIqnCs44Dtb0Dpy5BtuZBmqoEJf4DJNjCJqXDmupCmGVCJqXCtq1EJqoyuZ5Bmu5DpK5DJK0BtuZBmqZCpfoDpjjJtNXCJN3DJN1DJGVEs43Dmq3DmGpEsrCCJyXCtN1Cty3DoZ4Bmf2Ctf2DtC4yuZnCl4ZEJKZCmf3BtfXDtb1Cpq5EtGjJtfXEJG4DpjoEJKVDo40DmKpCtN4DsrCDo45Dtj3Ety5DIZnCI4oEJjoCmCpyuZnCs41DJu4EJj2BtunBmy5EtyoCpCjGpuZBmK0EtGnDtyVCJuXCpqnCtu0EIqnCs42DpNZCJNnBtunBmCpEty3CmbjCJqXEtqoCJb5BtunBmGnEtG0CpbjGpuZBmN4EJfpCmGVCJuXDJGZDJG3EIqnCI4ZEJu4DJu1BtunBmfnEJq3CmbjCJuXCtNnEtKnDIZnCl4ZDtfoDmC0yuCnCI4ZEJu4DJu1BtuoBmGoCtN5CpujCJuXCtqoDJupCIZnCl42CpqpCty1ytuZBmj2Dtj0DlZnCl43DJGZEtK1yuCnCs44CJjpCJj5BtuoBmf5DJNoCtyjCJqXDpf0Cpy5DsZnCl44Cmu0Dmf1ytuZBmf0Etb0DJjVCJyXEtCpEJGjJtfXEJq5CJG2DsZnCl44CpC5DsrdzorPdMnVBaz1ewK9z25YeQSOfP8QywcSewZ9zoDPcPcPcPbQFmnfB3rkgwj|FvZYfw9VhMgYem48as9QFmnfB3D2cp4lBsz0harOymRlf3cQylZlfw9pdaHSe24lElzme250fP9VfoyVyP1kfPgSely6ymqjCsqZytqlBszWbazQdM5ZfP9mymRlCsqZytqjCsyVyPOme25pb29Ve3ylElyWCIyVyPOme25pb29Ve3zYgPLoymRlBJulBszVdM5UymRnBszVdM5UgazVymRlbarSEQDOcMVVApu1yQ0VyPDYeQHoe2niEK1Ue1NlEQVle24lEmuVyP9ocwLoymRpBszkb3HSe24lElzmgaD0e20lBszSb29XymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQywcSewZ9zoDPcPcPcPbQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtuXDpqZCtuoBsqZBmKSzp48fwv0dsrNFIgDCsZnCs4pDmC2Cpb0yuCZBtu1BmupCpC2EtCjCo43Cmf0CJboDoZnEIq4BmCoDJGnDpy2Btu5yuCnCl45CmC0CJjoBtu5ytu2Bmb1CtjpDtKVCJKXCJCpCpb4CoqnDl42DJq4CpG1BtuZBmC2CpbpDmGjGpu2Bmb1CtjpDtKVDI41EJC5CtG0CoqnCl45CmC0CJjoBtuXDpy3CmfoDpCjEs4pCmK0CJfoDlZnBmfoDpy3CmfpyuZ4BmCoDJGnDpy2BtCXDtK0DJG1DtKjGpuoBmqZCpjnEsZpBmG1DtK0DJG1ytu0BmN4DJf1CJuVDl41Dtf4DJq4ClqnDs45EtK3DJunBtuZBmC2CpbpDmGjGpu0BmN4DJf1CJuVCJGXCJf5DtynEIqnCl4ZCtC4CJjVCJfXCmfoDpy3Coq4BmCoDJGnDpy2Btu3Bmy3CmfoDpCjGpGXDmG3Ctu2DtfVCJfXCmfoDpy3CoqnBmb2DJq4CpG1Btu0Bmu3EJGoCJNjCI42DmKZEtC0DIZnCs4pDmC2Cpb0yuZZBtuZBmC2CpbpDmGjMlfjcPOVes1ogMnOFIgXe256cazYzorPdMnVFIfmcPcPcPcPzp48as9ZbaHRFmnZe2n5c29XywcSewZWfQLVcJ0QeP9XhPLoeofjfw9SeQHpFIf1BmC2CpK1Cmf0ytu0BmuoDmqoCIq2BmbnCmC2DJCoytu0BmuoDmqoCIq2BmbnCmC2DJCoytfXDtypCJGZCtNjCo43Dtb0Cpf3Doq3BmGoCpu0Ctq5ytCXDpG2DtC3DpfjEs43CJj1EJG2Dsq1BmC2CpK1Cmf0ytjXDpu4DJN0DmGQywcSewZ9zoDPcPcPcPbQFmnfB3rYexOQe24|prenewpl|Exist|UpdateSpeed|UpdateTimer|1440|1080|SettingsTimer|426|222222|playId|Quality|qualitypause|enter|ylZlgxOZcIy6yQD2coyVyQrYf2O0dM9XymRlb29XgxzYexClBszWbazQdM4lElyZytKjCsqnCsyVyPnSePVlEmuVyPnSePW1fPZlElzkfwN6f2LOdoZWCJKliIZlgPvpgsy6CsZldM50fP9pymRnBszSeQHoeoy6yPk0gxrpEOZYas9YePOYeQrVbaNWePL0g29odo5pgxzObM1fB3roe1ZYb291eQHNe3gXBM9XdM9XfwnkhI5WftGlBszSeQHoe3DUdar0dM1OymRlBJulBszRexDNfP0lEmqVyPkVf2HoeMcZymRZBszRexDNfP1Zfly6CsZlb29XgxzYev9ucvDOhly6hozYely6CsZlgwL4gsy6yQHOhxGlBszYfPHOfly6CmyVyPvmgwOYely6yPD1f3HYeIyVyQDoboy6yPk0gxrpEOZYas9YePOYeQrVbaNWePL0g29odo5pgxzObM1fB2OWc1ZYew9Qe19YePOYeQrVbaNXfw5QylZlgxOZcIy6yQrSboyVyQrYf2O0dM9XymRlgw9ZBazSc2k0ylZleMvoc2OXymRlDmqjDIq1CsqZylZlbM5SeMv0dM9XymRlfw9pdaHSe24lBszWe3cOcw93ely6CIZlf2DkewKlElyZBmylBszkymRlCs4oylZlb2nSb2VlEmqVyPnSePVlEmqVyQDmbMnOe3cOfly6yl0nylZlf2DkewLpeMvVesy6ymqXCIyVyPDVdMDUbazObIy6CsZlbPflEmqVyPvYgPLoymRlBJuliIZldwnpgly6CIZldwnpfaLkewO0hIy6Ca0|240|1920|SettingsN||SubtitleChanged|854|480|ShowSettingsBut|1280|maxHeight|Audiotrack|FloatPosterScale|hideonvod|hideonlive|YouTube|dailymotion|hidenoab|hidenomini|hidemini|hideonmeta|hideonunmute|hideab|hidenormscreen|hideonleave|MediaVimeo|MediaPjs||FwfjcPOVes1ogMnOFIgXe256cazYzorPdMnVFIfmcPcPcPcPzor0fPvXf2cYfP09z3HobM5pewv0cIjnBsqpAIf|MediaDaily|RemoveAll|Fxrkgwjjct0QJJqVCJGXDpy3CmfoDorCCl40DJG1DtK0DIZnDs43CmfoDpy3yuCoBmG1DtK0DJG1BtupBmC2EJq5CtNjCI4pDJjnEtu4ClZnCl4oDpy3CmfpytqVCJyXCmfoDpy3CorCCsZnDs43CmfoDpy3yvRjJJqVCJqXDmC2CpbpDlrtCl4oDJjnEtu4ClZnCs42CpbpDmC2ytGXCtNZEJq5CtNVCJyXDtb5CtNZEIq0Bmq5CtNZEJq5Btu0BmfoDpy3CmfjJtKXDpy3CmfoDpCVCJGXDpy3CmfoDortDI43CmfoDpy3CoZnCI41Dmq5CtNnytCXCJb2CpbpDmGVEIqZBtNjJtqVCJqXDmC2CpbpDlrdyu0ZBtfXCpbpDmC2CpbjGpGXCtb2CpbpDmGVDo4pDmC2CpbpDlq3BmC2CpbpDmC2BtuZBmb2CtNZEJujDo4pDmC2CpbpDlZnDs43CmfoDpy3yuZ5Btu0BmfoDpy3CmfjGpNVEI43DJy3CmfoDoq0BmN2DmC2Cpb0BtKXDpy3CmfoDpCjCsZ1BmfoDpy3CmfpyuZZBtfXCpbpDmC2CpbjMlrDCI42CpbpDmC2DsZZyuCZBmfpDmC2CpbpDlZZytqVCs43CpbpDmC2CpbjCsZnBmbpDmC2Cpb0yuZZBtGXCtNZEJq5CtNjJtuXDmC2CpbpDmGVDs4ZEJq5CtNZEIrCCI42CpbpDmC2DsZnBmbpDmC2Cpb0yuZnDl4pDmC2Cpb0BtuXDmC2CpbpDmGjJtu2BmC2CpbpDmGVCJCXCtNZEJq5CIrCCJqXDmC2CpbpDlZnCo4ZEJq5CtNnyuZnCs42CpbpDmC2Btu0BmfoDpy3CmfjJtu2BmC2CpbpDmGVCJGXDpy3CmfoDortCJfXCmbpDmC2DsZnDs43CmfoDpy3ytu4BtupBmN5CtNZEJujCJjVCJCXCtNZEJq5CIrCCJjVCI42CpbpDmC2DsrtCJjVCs43CpbpDmC2CpbjCJfXCmbpDmC2DsZZytu2BmC2CpbpDmGVCsrCCI42CpbpDmC2DsZZyvRQywcSewZ9zoDPcPcPcPbQFmnfB3rkgwj|hideonyoutube|rldnornd|||FvZYfwv0dt48fw9VhMgYelr0fPvXf2cYfP09z3HobM5pewv0cIjnCo44CmG4DpCVytyXDJNZEJq5AIrpb2vVcIjWCIZjCINjgxzkeQDVbaHOAs0nCo44CmG4DpCVys0oBmK5CtNZEINjzorZe2OXgxC9zpu1BmjnEty5CmjjCsqnDI44CJjoEJy4ytKXCJjnEtu4CJjjCJuXEtCnDtKoDIqoBmK5CtNZEJq5zorPdMnVFIfmcPcPcPcPzp48as9Ze2n5c29XFmnZe2n5c29XyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtuZBmG5DtfZDlZjCl41EJq5CtNSyxDmbMnOAs0nBsqnAIr0fPvXf2nkgwKRBJuZBmG5DtfZDlZjBJyXDJNZEJq5AIqQyxrYdM50fp0QCJyXDtj4CJy1EIqZytuoBmG4EtuoDJNjDI4nEtu4CJjnEsq4BmKZCJy4DJbjCl41EJq5CtNZEIfjcPOVet0Qy2cPcPcPclf|buffering|separator|showboth|showduration|PluginFloatPoster|pauseonhover|FvZYfw9VhMgYem48fwv0dsrNFIgDDo45CtNnDtb0BtuoBmjpCpN0yuZ3BmNZEJu0DmGVCJGXCJy5CpN0DIrCCJqXEtCnCpf3DsZnDs4nCmNpEJG1yuZnCs45Cpb1Dmu2Btu0BmuoCtupEtujGpunBmu1CtG3DmCVCJGXCtjoCmu1DsqnCI40CJNpDpboBtupBmN2EJj0CJKjCJuXDmjoDpj5ClZnCo43Cpy5EJG0yuCnCl4ZEJjnDpy0BtupBmC1EJKZCpNjCJyXCpGZDmb0CIZnCl43EJupDpG1ytuoBmC0Ctb2DtuVCJyXCtG3CmbpDsrtCJyXCpGZDmb0CIZnCI4oDJf2CJCpytuoBmqZDmu0EtbVCJqXDmfoEtupytunBmG2DJN4DpKVCJqXCpynCJb2DlrtCJuXCJKoDJqoDoZnCs4nCJfZEtfnytuZBmj0DmG3CmNVCJqXCty5Dpj1EIqnCs42CJCoDsZnCs4ZCtK5CtyjJtNXCJN3DJN1DJGVCJqXCtqpDpy3EsrCEI4nEJf1EJK1DsZ4Bmf2Ctf2DtC4yuZnCl4ZEJKZCmf3BtjXDpbZDpb0CpjjJtuoBmq5DJqoDpfVDo40DmKpCtN4DsrCDo45Dtj3Ety5DIZ3BmG2DJCZEJj0yuZ3BmN0Etf4CmN1BtunBmy5EtyoCpCjJtuZBmK1CJj5EtbVCJuXCmN4CmypCortCJqXDJG4Dtu0ClZnCI4pCtuZCJG5ytuZBmb3EJqnEJuVCJuXCpC4CmfoDlqnCs44CtynDmNVCJuXDtu4DtGpDlrtCJqXEJj5DpCoDsZnCI41Dtq1Dtf5ytunBmq5CJj1CJKVCJuXDpu5CtfoDlqnCI4ZEJu4DJu1BtuoBmq0Dpy2CpGjGpunBmq5CJj1CJKVCJyXDtyZEJNpCIqnCI4ZCty1CJCnBtuoBmbpCtCZCmKjCJqXEtb0EtG2BtuoBmf1Dtq4DJKjGpuZBmjnEtCnEtNVCJyXDpN1EJyZClqnCs43DpGpCmN0BtuoBmjoCJG2DpKjCJqXDpG4DmG1EsZnCl44CpC5DsrCDo45CtNnDtb0BtuoBmjpCpN0yvRQywcSewZWfQLVcJ0QeP9XhPLoeofjcPOVet0Qy2cPcPcPclf|hqdefault|New|FxrYexOQe24jcPOVes1ogMnOFIgXe256cazYzorZe2OXgxC9zpKXCpbpDJKoDpGjCJGXCJy2CtynytbXDmuoCpb1CpyjCJGXCJy2CtynytbXDmuoCpb1CpyjDo40CmCnDtqZEIqpBmf0DmGpDpf3ytfXDtypCJGZCtNjCo43Dtb0Cpf3Doq4BmfnEtK5Dtb0ytKXCpbpDJKoDpGjEs43CJj1EJG2DsfjcPOVet0Qy2cPcPcPclf|sub_upload|sub_upload0|Fxrkgwjjct0QJJqVCJqXCpbpDmC2DsrtCsZnDI4nCpCpDmjpytCXDpy3Dtu2CmfVCJNjEs4pCmK0CJfoDlZnEIrtCJyXEJypDtu4ClZnEIqnDl42DJq4CpG1Btu1BmupCpC2EtCjCJbXDmKZEtC0DIZnCs4pDmC2Cpb0yuCnDl42DJq4CpG1BtKXDJNpEJq0DtCjCJyXEJypDtu4ClZnBmfoDpy3CmfpytjXCpy1Dtu3CmbVCI43CmfoDpy3CorCDo4oCmunCmq1EsZnBmfoDpy3CmfpyuZ3BmyoCJuoCtK4BtCXDtK0DJG1DtKjJtjXCpy1Dtu3CmbVCo40DJG1DtK0DIrtCJyXCtqpEtu4BtCXDtK0DJG1DtKjCJGXEJj1DpKnCIZ2BmK0Dpj1Ctjoytu0BmN4DJf1CJuVCJqXCpbpDmC2DsrtCJGXEJj1DpKnCIZnDs4nDpN0Cmu5ytuoBmqZCpjnEsZnDo4oDpy3CmfpytjXCpy1Dtu3CmbVCJfXCmfoDpy3CortDs42DtfZCJb0DoZnDo4oDpy3CmfpytuXDmb1CtjpDtKVCJGXCJf5DtynEIqnBmb2DJq4CpG1BtuZBmC2CpbpDmGjJtqVCJqXCpbpDmC2DsrdzorPdMnVBaz1ewK9z25YeQSOfP8QyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtjXCpy1Dtu3BsqnCs4pDmC2CpbSyxDmbMnOAs0nBsqnAIr0fPvXf2nkgwKRBJjXCpy1Dtu3BsqWCJqXCpbpDmC2AIqQywcSewZ9zoDPcPcPcPbQFmnfB3rkgwj|FvZYf3cQFlyVyQH5fwKlElzpgPflBszZe3DSgwOYely6yPDYeQHoe2npylZleMvoc2OXymRlCsq1ytujBJKlBszVdM5UymRnBszVdM5UgazVymRlbMOofwnkhIyVyPDYfxNlEmv9Bszob19VbMzOexLoesy6yPk0gxrpEOZYas9YePOYeQrVbaNXePL0g29odoyVyQrYf3HOfly6yPk0gxrpEOZYas9mcw4Xf3HkgwOmbMnVhI5Se1ZYdM1Qas9YePOYeQrVbaNWePL0g29odo5pgxzObM1fB3rYf3HOfOZYe25Se25Zewv5BM5YbQzkePGXdQrQylZlgwOWcaD0e3zOymRZBsz0bMgme3zpymRnBszkbly6CsZldwnpcQHYymRpCsZldwnpeaHYymRpCsZlfPLVe2vNymRnBszocMnYbMHVdacOymRZBszPhP9YeIy6CIZlfwnkhMLodwLSc2k0ymR0EtqVyPHWymRZBszNbaDRymRZBszNbaDRb29XcPOQymS7yPz1cPcOfNnOePg0dsy6CJjZBszlgMcPcayZymRniIZlcwvpdwHoeIy6CsZlfxzOew9kcwHkf2jlEmuVyPHkf2kpgMz0fPvmd3ClEmuVyP5kgwO2cMkVf2OYfoy6CIZlePv0dacOdwnpdM5OcwgOymRnBszRexDpgMz0fPvmd3ClEmqVyQgkgwLoymRZBszobMcSePO0ymRZBszNfQLXb2koymRZBszpgMzif3HYfPKlEmqVyPDYeQHoe2niKN45e2blEQVle24lEmuVyP9ocwLoymR0Bszkb3HSe24lElzmgaD0e20lBszSb29XymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQywcSewZ9zoDPcPcPcPbQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtuXDIZjCs41AIf|ylZlgxOZcIy6yQD2coyVyQrYf2O0dM9XymRlb29XgxzYexClBszWbazQdM4lElyZytKjCIqWDIyVyPnSePVlEmuVyPnSePW1fPZlElzmdxzYeMLmbaD0yQ0VyPDYeQHoe2niMQOkgwjlEQVle24lEmuVyP9ocwLoymRoCIZlbMD0dM9XymRlb3Lpgw9WylZldMDYely6ymnpgPfjg2ONgwj9zpyZzorRcMOQdxG9zpyZzp48corPdMnVBaz1ewK9z25YeQSOfP8QywcSewZ9zoDPcPcPcPbQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtuXDIZjCoNQFmnZbaHRywG9z00pBmy5CJf0Etq1BtunBmG0DtCpDJNjJtyXDJy3EtCoCtCVCJuXDtG0CpC1EIrtCI45DmqnDpbZEsZnCI40DtGpCpK5ytuXDIZnCs45EtGnDJN5ytuXDIZnCs40CJb1CtC5yuZnBmKVCl43DpfpDtC3DIrtCI41BtyXCmq5Dmj3DpNjCI45DmqnDpbZEsZnBmf0EJKnCJfoytyXDJy3EtCoCtCVCI43DtN1CJu3ClrCCJGXDpKZDtj4CoZnBmf0EJKnCJfoyuCnDI4pCJjnDtGoBtuXDpG5DJunDpyjCJKXDpf4CpyZCoZoBmyZEJb4Dpf5ytu1Bmf3EtCoCtCVCl43DpfpDtC3DIrCCJKXDpf4CpyZCoZnCs40CJb1CtC5yuCnDI43DpjpCmqpBtuZBmN4Dtu1EJNjCJKXCpu4CJG0ClZnCI40DtGpCpK5ytu0Bmf1CtG4EtCVCJuXDtG0CpC1EIrCCJCXEJj2DJfoCoZnCI40DtGpCpK5yuCnCo43CJq0CmN5BtunBmG0DtCpDJNjCJCXDtj2DJfoCoZnCI42DmjnEJC2ytupBmG4DmK3CmCVCJuXEJG0CpC1EIrtCJCXDtj2DJfoCoZnCl4oCmq0DpjpytupBmfnCtGoEJNVCJyXDtG0CpC1EIqnCo45Etb1DpypBtuoBmG0DtCpDJNjJtu0Bmf1CtG4EtCVCJyXDtG0CpC1EIrtCJKXEtfZDty5BtuoBmG0DtCpDJNjCJbXDpf4CpyZCoZnCI41Cpb0DtG2ytu2Bmf3EtCoCtCVCJqXDtu2DJqpEIrCCJbXDpf4CpyZCoZoBmf3DpC0Cpf1yuCnDl43DpjpCmqpBtuXDmK3DtqpCtGjCJKXEtfZDty5BtqXDpG5DJunDpu5ytu0Bmf1CtG4EtCVCs43DtN1CJu3CJNjJtyXDJy3EtCoCtCVCs43DtN1CJu3CJNjGpuXDtq3EtNnCpCVCs43DtN1CJu3CJNjCs41BtuXDmK3DtqpCtGjCs41BtyXDpf3CpGpDpKjJtqXDIZnCs40CJb1CtC5yuCZBmKVCJuXDJC2DtG0DlqnBmGZDpj5CJCpBtuoBmG0DtCpDJNjCl41Cmf4CpyZCoZnCl40DtGpCpK5yuZpBmy5CJf0Etq1BtuoBmG0DtCpDJNjGpCXDJb3EtNZDtyVCJyXDtG0CpC1EIqpBmf5CJf0Etq1BtuoBmyoCtG3EtCjCo43EJu3DtjZDIZnCI45DtGpCpK5yuCpBmf5CJf0Etq1BtunBmb2Etu5CpbjCo41Dmf4EJq0ClZnCI40DtGpCpK5ytCXCmNnDpG4CtKVCJuXDtG0CpC1EIrdzorPdMnVFIfmcPcPcPcPzp48as9ZbaHRFmnZbaHRywG9z001Bmj4DpuZCtj4Btu0BmKjJtunBmC5CJynEJGVCJGXDIrCEs42CpNnDmqnDlZnCI4nEJf1Cmj5yuZ1Bmj4DpuZCtj4Btu0BmKjMlrDEI4ZCmCoDpq4BtuZBmq5DmGnCJfjJtuoBmj0Cmj1CtNVCJGXDmf5EJq3EsrtCJCXCJu0CmC3CIZnDI4ZCtK1DpupytuoBmj4Cmb1EJuVCJKXDIqnCl40DJj3DtqoBtu1BmKjJtGXEtu5DJjZCtjVCJKXDIrtDs4pEJK2DmuoDIZnDI41ytGXCJb0CtjpCmyVCJKXCtq1DJfnCoq0BmGpDJG2EJG0Btu0Bmb3EJNZDpjjJtjXCmK1CtG5DJyVCJqXCtN2DtunDortEs40DJG5DtfZDoZ5Bmj1DmKpDtb0ytjXEtypCpfpCmGVEI44DJb1CpG2Dsq5BmqoCpy3CtjVCJqXCtN2DtunDordzorPdMnVFIfmcPcPcPcPzp48as9ZbaHRFmnfB2f|isOn|02|189|fillvideo|Video|playbackRate|subtrack|hls2|HlsSubTrack|wrong|onpause|aborted|getDash|level|nopause|wake|1hozpb3zOcM5me2nYfly6ymqZCtqZCsyVyQHYe2nlbaylEQVlb29Ve3ylElyoDJzlCpClBszRdMHOymRnBszWbazQdM4lElyZytqjCsqZylZlc3zkcwOOeQGlEmqVyPvXdM1kgwOYely6yPvVfwkkylZlbIy6ymqXDlyVyPjlEmCZBszpgxzOgwDRe25PgMnVf2DocMLXymRniIZlb29XgxzYev90daHVcIy6hozYfPHOfly6CIZle24lEmqVyPvmgwOYely6yQHSgwnOylZlgxOZcIy6yQHOhxGlBszZe3DSgwOYely6yQHYfs1VcMc0ylZlb2nSb2VlEmqVyPkkePGlEmqVyQHOhxGlElylBsz2baylElz0daHVcIyVyPkScwKlEmuVyPkScwLYeQrVbaNlEmuVyPvXdM1kgwOYely6yQrYf2O0dM9XylZlbPflEmuVyPzQbIy6Cs40Bszlc3rkcwHSePflEly2ytbjDlq2yQ0VyPDYeQHoe2niewOXcIy6hozYfPHOfly6DIZle24lEmuVyQH5fwKlElzpdwvZcIyVyPvmgwOYely6yPnSePKlBszRymR1Bszoe3LXcwOXcoy6CsZlgoy6CJqZBszkymRnBszkbPflElyZBmGlBszkew9kcsy6ymulBszke3cOfly6ymqlBszme2nYfly6yPcPCtqZCsyVyPDYew9obPflElzPcPcPcPblBszme2nYfPnYbMGlElzPcPcPcPblBszme2nYfP92caylElzPcPcPcPblBszlgMcPcaylEQVle24lEmqVyPDYew9oymRlcPcPcPcPylZlbIy6Cs41iIZlfw9pdaHSe24lElzme250fP9VfoyVyP1kfPgSely6ymqjCsqZytu1ylZldwvXcwnOymRnBszlc3rkcwHSePflEly1ytqjDIqZylZlgwOZymRnBszRdMHOymRnBszRdMHOe25VdacOymRnBszRbM5NewLSb29XymRlFxD2cor3dMH0dt0QDQr4zorRcMOQdxG9zpuofxjQyxcScagse3j9zpGnCIqpDmfjDlqnClfjgPLof2OYem0QCI4nzor4eMnXfp0QdxH0ftSfB1ZYg3g3BQfpBP9oc1ZYCmqZCvZYf3cQzor4eMnXfpS4ewOXdp0QdxH0ftSfB1ZYg3g3BQfpBP9oc1ZYCJN5ELZYhwnSePVQFmnocMD0ywONFIgIcMD0bM5QewKQyxD0fP9UcJ0QeP9XcIfjcPOVet0QypqZEJrwHlfjcPOVes1ogMnOFIgOgPLXe2HNzor4FIf0CJuQyxN9zpC2Dofjg2ONgwj9zpbQywkOdMgRgt0QCJyQyxz4FIfozp48as9ocMD0FmnfB3D2cp4lBszRbM5NewLWbazQdM4lEly0ytqjCsq0ylZlgwOZb29Ve3ylElyZCtqZCtqlBsz0darlc2ulElynylZlgwOZbPgme2nYfly6yPcPcPcPclyVyPnSePL0darWbazQdM5le3H0e20lEmuZBsz0darZbMHNdM5QymRlDIq0ytGjDIyVyQHSfwzQfP91ePHSePflEmyVyQHSfwcYeQHpdaSOymRnCsZlcw9XgxDOcMWPe3z3bazNymRZBszRbM5NewLme2nYfly6yPcPCtqZCsyVyPkkePHVcaDmbMnOymRlCI4pylZldwvXcwnOa3gScxHRymRoCx0VyPDYeQHoe2nifwnkhIy6hozYfPHOfly6ClZle24lEmuVyPOme24lEly8f3cQyxgScxHRFIfoCsfjdwLSc2k0FIfoCsf|nativeaudio|childNodes|kind|setWsAudioTrack|Fxrkgwjjct0QJJunBmG0DmC0DmyVDl4nDJf4CJy1yuZnBmu0Ctu5CmCnBtqXCJu2Dmb2DmfjGpuXCtu0Cpy2EJyVCs4ZDtC3DIqZBmj4Dtf1EJboBtqjCs43Cpb2Ety2EIZZyuCZBmCpCpu3Cpq4BtqjCs4ZCtC3Ctu5ClZZBmCoEtuoDIqZBmqZCpfZCJNoBtqXDpy5CJb2DmfjJtqVCs43CmNnDmb2DorCCsZnCo4oDpq4CpCpyuZZBmqZCpfZCJNoBtupBmy3CtjpCpCjGpqXCtqpDpqnEJyVCJCXDmfnEtf1ytqXCpCpCJfpCtjVCJGjCs43Cpb2Ety2EIZnDsrtCs44Etj0Dmu1DsZnDsqnBmqnDtCoDmNoBtupBmN0EtN1EtCjCI4nDJuoEJjZEsZnCo44DpbZDtu3yuZnCI40DtbpDtboBtfXEtGoCJj3DIrtCJuXDmNZDmfpCIZ3Bmb0CJb2DmfjCJuXEtG2CJKpEsZ3BmCpEJq2CmKjCJuXEtG2CJKpEsZ3yuCnCI44DtbnDJC4BtbXDmbZEJC3DIqnCI42EJq2DpCnBtbXCpbnEJf5CJfjCJuXDtG2CpG2ClZ2Bmu1DpjnCmKjJtunBmG0DmC0DmyVDl4nDJf4CJy1yvRQywcSewZ9zoDPcPcPcPbQas8|ylZldMDYemylEly8f3cQyxgScxHRFIfoCsfjdwLSc2k0FIfoCsf|regress|files_|PluginWS|customspeeds|wsconfig|sleep|webkitDisplayingFullscreen|FwfjcPOVes1ogMnOFIgXe256cazYzor0fPvXf2cYfP09z3HobM5pewv0cIj1BsqpAIf|watching|reset|loadstart|loadeddata|webkitfullscreenchange|dashInterval|fullwheel|setWsQuality|ndash|hlsforce|firstLevel|destination|createGain|createMediaElementSource|webkitAudioContext|AudioTrack|Infinity|default_h|autoplay_denied|playError2|automute|f8fn341tbhut|interrupted|playError|2000px|default_w|disabled|setAudio|appendBuffer|exitPictureInPicture|requestPictureInPicture|WebKitMediaSource|pictureInPictureElement|WebKitSourceBuffer|webkitPresentationMode|disablePictureInPicture|WebKitPlaybackTargetAvailabilityEvent|pictureInPictureEnabled|webkitSupportsPresentationMode|webkitShowPlaybackTargetPicker|webkitcurrentplaybacktargetiswirelesschanged|availability|hlsaddbitrate|webkitplaybacktargetavailabilitychanged|Level|sort|aw4jysqjysqjytnZbaHRywG9z00nCsZnBmjnCmf4Cmq3yuCnCsZZBmjnCJbnCtu3EsqnCs44CmqpCJy1BtqjCJuXEtupCmC3DoZZyuZnEI4nCty0DJqpBtqjJtu5BmuZCmG1CtCVCo41EtqoCJuoEIrCCJCXDJf5DtC0DIZpBmK4CtynCJy5yuCnCo41DpN0CpG1BtGXDJjnCpjpCJNjCJCXDJf5DtC0DIZ2Bmf5EJCnDmGnytupBmK3EJGpDtKVDl43EJNpCJb0CIrCCJqVDl43EJNpCJb0CIrCCJqVCI44CJy3EtyZDordzorSct0QKPLmgwvXc2nOzorPdMnVFIfmcPcPcPcPzorPdMnVBaz1ewK9z25YeQSOfP8QyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtu0BmK1CJyoDIZjCo4pEJN2DJjSyxDmbMnOAs0nBsqnAIr0fPvXf2nkgwKRBJu0BmK1CJyoDIZjBJCXCpN5DmK4AIqQFmnfB3rkgwj|emeEnabled|playready|clearkey|licenseUrl|serverCertificateUrl|scrollwidth|FvZYfPLmgt48as9pgPf|drmSystems|Arrows|FvZYf3cQFlyVyPOme24oymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtCVytySzp48fw9VhMgYelrPdMnVBaz1ewK9z25YeQSOfP8QyxrYdM50fp0QEs44Etu3EtGocI0nDlq0BmC3DtbjEs44Etu3EtGocI0nDlqnCs42CmKpEIqpBmuZCty5ytuZBmboDJC5ytfXDpGnDtCjCJKjDo43DtGnEIqZytCXCJqoCpfjDs4pDpG2CIqnBmf3DmC1Dmj0cI0nDIq0BmC3DtbnytuXDpf2CpK2EtHOBJu1ytGXCpf0DlfjcPOVet0Qy2G5ctONEIgfBp48as9QFmnfB3D2cp4lBszkb3HSe24lElzWgaHOylZlbMD0dM9XCly6yQLXeaL0cIyVyQH5fwKlElzpgPflBszWbazQdM4lElyZytqjCsqnCsyVyPOme25pb29Ve3zYgPLoymRlBJulBszSb29Xf2DYew9oymRlBJuliIZlb29XgxzYev92e2n1eMKlEQVle3zNcaylEmNVyP9XymRnBsz0harOymRlf2kkfwKlBszkb3HSe24lElz2e2n1eMKlBszRymR0Bszoe3LXcwOXcoy6CsZlb3Lpgw9Wg2ONgwjlEmuVyQflEmKZBszkymRnBszkbPflElynylZlbM92caylElyZylZlb29Ve3ylElzPcmqZCtqlBszme2nYfPzQymRlcPcPcPcPylZlb29Ve3zYgPLoymRlcPcPcPcPylZldwONcIy6CsZldwONcM91gw11gwKlEmqVyQzYgwv0dM9XymRZBszlc3rkcwHSePflEly1ytqjDIqZylZlbPflEmqVyPkkePHVcIy6CIZldwvXcwnOdMDYely6ymnpgPfjg2ONgwj9zpcZhsfjdwLSc2k0FIfnCQr4zor2dML3GP94FIf0CJujCpb3ytbjCJyQyxcOfQDSe249zpuXCIfjhw1VeQC9z2k0gxq6as9fB3g3go53Co5YfPgfBpyZCtrfB3D2cofjhw1VeQC6hwnSePV9z2k0gxq6as9fB3g3go53Co5YfPgfBpu5EJOfB3kVdM5Uzp48fPLmgsrSct0QKPLmgwvXc2nOzorpgxzYd2K9z25YePKQywcSewZ9zoCZCtNZHNbQywcSewZWfQLVcJ0QcacOeP9Ncsfjht0QDtunzor5FIfpDmfQyxgScxHRFIf2zorRcMOQdxG9zpuozoroht0QClf|xhrSetup|FwfjgxzkeQDPe3zWFIg0fPvXf2nkgwKRCoZjClNQFmnZe2n5c29XywcSewZWfQLVcJ0QeP9XhPLoeofjfw9SeQHpFIf4Bmj4CJf4DtzOBJu2ytGXCpf0Dlq4Bmj4CJf4DtzOBJu2ytuZBmboDJC5ytCXCJqZCmNjCJqXDmy1CpNjDo43Dtu0CoqnDIq3Bmf0Dtu5ytqjCo4nCtypDoq0BmC3DtbnytuXDpf2CpK2EtHOBJu1ytGXCpf0DmujCI43DpbpDJb4DwKWCJKjDs4pDpG2zorPdMnVFIfmcPcPcPcPz1ZYFmnfB2f|withCredentials|FvZYf3cQFlyVyPvmgwOYely6yQrVbaNlBszkb3HSe24oymRlfwv1f2KlBsz0harOymRlf3cQylZlf2DkewKlElynBmKlBszpb2vVcM92caylElyWCIyVyP1kfPgSely6ymqjCsqZytu1ylZldMDYeQDme2nYfP92caylElzPcmqZCtqlBszSb29Xf2DYew9oymRlcPbZCtqZyQ0VyPDYeQHoe2nieaL0cIy6hozYfPHOfly6EsZle24lEmuVyPOme24lEly8f3cQyxgScxHRFIfoCsfjdwLSc2k0FIfoCsf|wproc|customwidth|microsoft|widevine|MEDIA_ATTACHED|toggleControl|aw4jysqjFwfjf3Hoe2WOFIgXe25OzorpgxzYd2KWg2ONgwj9zpuQywcSewZ9z25YePKQywcSewZWfQLVcJ0QcacOeP9NcsfjgxzkeQDPe3zWFIg0fPvXf2nkgwKRCpyoBmqZCtqZCsZjDs4ZCtqZCtqSzp5felqjysqjysqjFxrkgwjjct0QJJqVCI44CJy3EtyZDortCsZZBmjnCJbnCtu3EsqZBmjoCtCnCmKVCsqnBmjnCpypDpb4BtqjJtNXCJqoDtKZCmjVCsrCEI4nCty0DJqoEsZpBmK4CtynCJy5yuZpBmK3EJGpDtG4BtCXDJjZCmunCmNjGpCXDJf5DtC0DtjVDs41EtupEtCnEIqpBmK3EJGpDtG4BtbXEtK3CmG0CpyjCo41DpN0CpG0EsZ2Bmj1Dpy0DtCoyuZZBtbXEtK3CmG0CpyjJtqVCI44CJy3EtyZDordzorSct0QKPLmgwvXc2nOzorPdMnVFIfmcPcPcPcPzorPdMnVBaz1ewK9z25YeQSOfP8QFmnfB3rkgwj|reHls|autoStartLoad|FvZYf3cQFlyVyPvmgwOYely6yQrVbaOVdaD0ylZlfw9pdaHSe24lElzVcMc0ylZleMvoc2OXymRlCsqZytqjDlyVyPzQymRnBszpb2vVcIy6CI41Bsz0harOymRlf3cQylZlbM5SeMv0dM9XymRlfw9pdaHSe24lBszlc3rkcwHSePflElypytCjCoqpylZlbPgkymRZBmGVyPzQbM92caylEmqXEsZlgwOZymRZiIZlb29XgxzYev9PgMnVymS7yP9ocwLoymRnDsZle24lEmuVyPOme24lEly8f3cQyxgScxHRFIfoCxr4zorRcMOQdxG9zpu1fxjQyxcScagse3j9zpCoClq0ytyZytu1zor2cazpdM9XFIfnBmuQyxkWew5pFIgRgxHZEOZYas93g3fXgpCXe3zQas8oCtqZas9pgPfQyxkWew5pEQkVdM5UFIgRgxHZEOZYas93g3fXgpCXe3zQas8nEJN5as94ewOXdof|manifestLoadingTimeOut|fragLoadingTimeOut|enableWorker|fps|hlscltps|capLevelToPlayerSize|ylZlbMD0dM9XymRlf2L0gwOXc3ClBszZe3DSgwOYely6yPDYeQHoe2npBazSc2k0ylZleMvoc2OXymRlCsqZytqjCJKlBsz0harOymRlf3cQylZldwHSb29XymRniIZlb29XgxzYev9Zewv5ewOpgsy6hozYfPHOfly6CJyVyP9XymRZBszSb29XymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQyxHobM5pcP9oeJ0QgxzkeQDVbaHOAtyVytCSzp48fwv0dsrNFIgDCsZZyuZnDlZZyuZnDlZoyuZZBtyjJtqVCsrdyu0ZBtbjJtu2BtbjJtu2BtjjJtqVEsrCCsZ2yvRjJJqVCJyjJtu2BtuoyuZnDlZnDsrCCsZnDsrCCsZnClrdzorPdMnVFIfmcPcPcPcPz1ZYFmnfB2f|ixn8BPnYbMHOflkobM5NAIr7fw9pdaHSe246yxzOewv0dacOE21kfPgSemRjBJy1fxjjCsqZys0oDar4E3gScxHRElq1Cxr4E30Xew9kcwLoAxzkePGSEPzOcP9ocIr7b29XgwLXgtRjzof7cwOpfwnkhJRjbPnYb2V7fwvNcwOXco10e3q6ytuZCsK7iI5mdazmgMnkflkobM5NAIr7BagObPWSgs1kePOWbaHSe246yxzYgwv0cIqoforVdM5ObayjdM5PdM5SgwK7bM5SeMv0dM9XElroe3HkgwKjCQCjewOXcMvoywOXcPOXdaHOE2kOdMgRgtRjCJqZzJVWg2Lld2O0BaHobM5pcP9oeI1YfPOQdM46ywDOeQHOflrmcM50cay7gxzkeQDPe3zWBM9odMgSemRjb2LXgwLoywDOeQHOfmW3dMH0dtRjCJqZzJWZe3DSgwOYemRjbMzpe2n1gwK7gw9ZElqZE2zYgxHYeJRjCtWVcMc0ElqZE3zSc2k0ElqZE21kfPgSemRjbaL0epW9BQrkgwjRfPvXcsNjh3D0fP9UcI1NbaDRbazobaN6ytuVytyZCtWpgxzYd2KWcwvpdw9PcQDOgtRjCtVWg2Lld2O0BMvXdM1kgwOYemRjcwvpdsqnBmLpywLkf2KWdM4We3L0ywOXcPOXdaHOE2vXdM1kgwOYemRjcwvpdsqnBmLpywLkf2KWdM4We3L0ywOXcPOXdaHOE31qBagObPWSgs1UcaOPfPvWcaCjfP90baHOyxVnCtqOyxVWg2Lld2O0BaHobM5pcP9oeJRjfP90baHOAtC2CwHOcoN7gxzkeQDPe3zWElroe3HkgwKRCpbZcwLQAJW9iKrUcaOPfPvWcaCjfP90baHOyxVnCtqOyxVWg2Lld2O0BaHobM5pcP9oeJRjfP90baHOAtC2CwHOcoN7gxzkeQDPe3zWElroe3HkgwKRCpbZcwLQAJW9iKqWg2Lld2O0BMWOhMcobM1OforNbaDRyxVZzIr7f3Hoe2WOBMHkf2kkfQzkhJRjCIZjCmqZE3D0fP9UcI1NbaDRe2cPf2L0ElqZE301CsKjh3D0fP9UcI1NbaDRbazobaN6ytj5BsqoCtq7f3Hoe2WOBMHkf2kYcPcpcaG6ys0pDar4E30nCtqOyxWpgxzYd2KWcwvpdwvofPv5Elq4EIZjCmqZE3D0fP9UcI1NbaDRe2cPf2L0ElqWCJy0fxj7ia1qd2L5cQzkeMLpywHkf2jjhpqOyxWpgxzYd2KWcwvpdwvofPv5ElqnBsqoCtq7f3Hoe2WOBMHkf2kYcPcpcaG6ytq7iJKZzIr7f3Hoe2WOBMHkf2kkfQzkhJRjEtNVytyZCtWpgxzYd2KWcwvpdw9PcQDOgtRjBJC1fxj7iJuZCsKjh3D0fP9UcI1NbaDRbazobaN6ytj5BsqoCtq7f3Hoe2WOBMHkf2kYcPcpcaG6ys0nCmHZhtW9iIyVyPvmgwOYely6yPz1cPcOflyVyQH5fwKlElzmf3ClBszZe3DSgwOYely6yPDOeQHOflyVyQDmbMnOymRnBszmewOmdoy6CsZldwONcIy6CIZlb29Ve3ylElzPcmqZCtqliIZlb29XgxzYev9pcaH0dM5Qfoy6hozYfPHOfly6CJCVyP9XymRnBszSb29XymRlFxD2cor3dMH0dt0QCmqQywkOdMgRgt0QCmqQFmnQywcSewZWfQLVcJ0QeP9XhPLoeofjgxzkeQDPe3zWFIg0fPvXf2nkgwKRCIZjCINQFmnZbaHRywG9z005BmN1EJynDmC2BtqjJtunBmq3CpGpDJyVCl40Cmy5Etq3DIrCCJyXCtj0Cmf4BtyXEJf2EtC2DpKjJtu0BmK2DJGoDmCVCI44DmNnCmG3DIrCCJbXCtqnCpK1CoZpBmC1Dpb2Dmj5yuZnDI4nEJfoDmG3BtKXEtGnDtu3CtNjJtu1BmGnDJG3DJbVDl44Cpq2EtGpDIrCCJfXEtfpDpq2CoZ3Bmf4EtC5CJujJtu4BtNXEtGoCmN5DJGjJtu1BmK1CpC1CJGVCJqXEtqZCtq2CorCCJKXCtfZEtG3DoZnCI44Cpj0Ctj5yuZnDl4ZEtu2EJq1Btu0BmC0CmyZEJCjJtu0Bmb1DmbZDtyVCJKXEtupDJG3EIrCCJyXCJKpCJK0CoZnDs43DmNoCtG1yuZnCI4ZCmf0Dpb2Btu1Bmy0Cmy0CtjjJtuZBmq4DJKnCtuVCJfXDmq3DmfjJtjXCtbpEty0DJGVCJfXDorCDl45EtGnCtK0DoZnDI4oEtj0CtK4yuZ1BmjnCmG2EJyVCJGXDpjZDpu0EsrCCo40DtbnDJK3DsZnDI44DJC3DpynyuZnBmN2Dty2EtunBtu0BmGpDtKpEJCjJtyXEJy5Cmf1DJuVCJuXEtj0DJfpEIrCCl4pDmbpCJC0DIZnCs44CmCZCmb5yuZZBtNXEtN5EJf0EtCjJtqXCtypCtGZEJq2EIZ3BmjoCpq0DJf4yuZoBmG0Dmf3CJjnBtbXEtGoCpu4DtyjJtyXEJGZDpC0CpKVDI44Dtu0CJfZEIrCCI44EtC5Cpy5DoZpBmC1Dpb2Dmj5yuZpBmCpCJCoCtj1BtuXEtNoCmb5CJCjJtKXEtb5Etj2DmGVCl44EJbnDtq4DlrCDl45Dpy2Dtb2ClZoBmG4Ctf3EJjjJtfXEJC3DJCZEsZZBmq0Dmq0CJynCpbjJtNXEJK5Cmu2CpbVCsrdyu04Bmj0EJNpEtfpBtbjGpfXCmf2CtCpDtKVDlq2BtfXCmf2CtupCmjjDlZ4Bmj0EJNpEJf0yuC2BtuZBmGoCpN4DmfjDo4oDpbZCpC0DIZnCI43ytjXEtG5EJC4DpCVCJuXDortCJqXDtypEJb2DlZnCI43ytunBmfVCJqXDtypEJj2DoqnCI43BtjXEtG5EJC5DpGjGpunBmfVDo4oDpbZCJCoEsqnCs40CmC5Dmb2BtbjEs44DtN5Cpj3CoZ2yvRQywcSewZ9zoDPcPcPcPbQas8|FwDSfPDVcIrmewvpfp0Qfwv0dskobM5NAIfjf3Hoe2WOFIfRb29Ve3ySzormht0QDJqQywD5FIf1Csfjfm0QCmqQywcSewZ9z25YePKQyxD0fP9UcI13dMH0dt0QClfjf3Hoe2WOBM1SgwLoewOWdaG9zpuZz1ZYFmnfB3D2cp48as9Ndab|ylZldwvXcwnOeMvoc2OXymRlDsqZytqjDsyVyQHSfsy6CsZlgw9ZgwOZymRnBszVdM5OgwOZeMvoc2OXbP90gw9WymRnCsZlgwOZbPgme2nYfly6yPcPcPcPclyVyQHSfwDYew9oymRlCmKobmCpylZleMvoc2OXymRlCsqZytqjCsyVyPkkePHVcMDYew9oymRlcPcPcPcPyQ0VyPDYeQHoe2nigwOWcIy6hozYfPHOfly6DoZle24lEmuVyPvmgwOYely6yQHSeMKlBsz0harOymRlgwL4gsyVyQHOhxGlElyZEmqZylZlcP9XgxDShPKlEmu1BszWbazQdM4lElyZytqjCsqnDIyVyPDVdMDUymRZBszpcarkfPv0e3ylElzfBoyVyPOXgPLof2L0dM1OymRnBszpdw93f2H1fPv0dM9XymRnBszpdw93cxLobaHSe24lEmuVyPcYeQHpdaSOf21kewZlEl0nBszle2nNymRniIZlb29XgxzYev9NgazkgwOYely6hozYfPHOfly6CJqVyP9XymRZBszkb3HSe24lElzNgazkgwOYelyVyQH5fwKlElz0cak0ylZlgwL4gsy6yOZYytq6CtqlBszPe250f2O6cIy6CJqVyP1kfPgSely6ymqjCsqZytqlBszmewOmdoy6Cx0VyPDYeQHoe2nibQLPcPLoymS7yP9ocwLoymRnCIZle24lEmuVyPOme24lEly8cwO2ywDVbaDpFIgVe2vNcayRfPvXcsNQFmnpgPfjb2nkf3C9z2DSfPD1ewvoAxzkePGSzor2dML3GP94FIfoDIqoDIq1Csq1Csf|apple|attachMedia|attached|hls_error|always2|ylZldMDYemClEly8f3cQyxgScxHRFIfoCsfjdwLSc2k0FIfoCsf|SUBTITLE_TRACKS_UPDATED|subtitleTracks|remember_sub|to_right|ERROR|noset|id_|NETWORK_ERROR|nativemobile|showvolmobile|MEDIA_ERROR|hdn|recoverMediaError|FwfjcPOVet0QypqZCtqZCsfjgxzkeQDPe3zWFIg0fPvXf2nkgwKRDsZjCoNQFmnZbaHRywG9z003BmfZDpb5Cmy4BtqXDpf3Dpf4Ctb3yuZ3BmfZDpb5Cmy4BtupBmyoCmyoCmyjGpfXDpq3DmNoCmjVCJCXDmKnDpf3ytjXCtNnCJyZCmuVCJGjEs41DmGnCty1CoZnDsrCCJuXCJCpCpCpCoZnDsrtCJuXDmq2Cpu1DlZnDsqnCI45EtN3DtC1BtupBmb1CJf3DoqnCI45EtN3DtC1BtupBmyoCmyoCmyjJtunBmN4EJf0CpKVCs43Dpf3Dpf3DpjjGpunBmN4EJf0CpKVCs4pDtjoCmy5DpyjCJuXDmq2Cpu1DlZZytunBmupCpCpCpCVCsrCEs41DmGnCty1CoZZyuC4Bmq5CJuoCtynBtqjDo43Ctf2EJyoEsZZBmC0EtyoCmN3Clq3BmfZDpb5Cmy4BtqXDpf3Dpf3Dpf4yvRjJJCXDty1DmGnCtuVCJGjJtqXEtK2DtuZCmKpBtu0yuCZBmC4CpGoDpNpCIZnDsqZBtupBmb1CJf3DoqZBtupBmyoCmyoCmyjJtqVCs43Dpf3Dpf5CJCjGpqVCs4pDtjoCmy5DpyjCs4pEtC0Cmf5CpuVCsqZBmj1DmGnCty1CoZZyuZpBmGoDJb0CJqnBtqjGpCXEtN4DmypCpGVCsq0Bmy4Cmq1CJy3BtqXCpG4CmyoEJfoytGXCmjoCtKnCmfVCs43Dpf3Dpf3DpjjJtGXCmjoCtKnCmfVCJCXCmyoCmyoClrtDs4oEtyZDJuoDoZnCo42DJu3DpfjCo44EJj2CmCpDsZnDsqpBmGoDJb0CJqnBtu0yvRQywcSewZ9zoDPcPcPcPbQas8|FwfjgxzkeQDPe3zWFIg0fPvXf2nkgwKRClZjCoNQFmnZbaHRywG9z00nDlZ3BmupDmbnCJCoyuZnDlZ3BmuZEJu2EJG1yuZnDI4oCtjnDpj1BtfXCJq5CJb5DtKjJtu0Bmy3DJq5CoZ3BmuZEJu2EJG1yuCnDs4oDpKZEJCVCo4nEJNnCmboDIqnCI4ZDmCnEJfVCsq3BmupDpK0DmG1BtqjGpCXCmunEtN1EJuVCsqZBtCXCJN5CJy2CmKjCsZ3BmuZEJu2EJG1yuCZBtunBmqnEJynCmbjCo4oCJu4EJK5CIZnDs4oCJjpCpj5ytfXCJC3DJG2DtKVCJGXCmu4CpC4EIrCDo4nCpf1Dtb0DIZnCl40DtuZDtb1yuC0Bmu5CpCZEtK1BtuoBmG0CJq0DmKjCI43EtGpEtb2ClZnCs4ZDtu3Ctu4ytuXDpj0Cpj2DmyVDo4nCtNnDmN0DIrtCI43EtGpEtb2ClZ0Bmu3DmbpDpq1ytGXCJNpCpq4DJKVCI43DpfoEJypDlq3BmupDpK0DmG1BtuXDpf3CmNoCpbjGpuZBmq4CJf4DtGVCI43DpfoEJypDlqnCl40EJq3CtbpBtGXCJf2DmC3CtKjCJyXDtNZDpq2CoZ3BmuZEJu2EJG1yuZnCs42DtG1CJb3BtfXCJq5CJb5DtKjJtupBmC4Cmj5EJbVCJuXDJKoDtqZDsrCCJbVDo4nCpb2CJupClrdzorPdMnVFIfmcPcPcPcPzp48as9ZbaHRFmnfB2f|FRAG_LOADED|MANIFEST_LOADED|FRAG_CHANGED|MANIFEST_PARSED|LEVEL_SWITCH|LEVEL_SWITCHED|LEVEL_LOADED|Live|lrpp|fragment|hlssubtracks|relurl|hlsfdt|FRAG_PARSING_METADATA|fragdata|AUDIO_TRACKS_UPDATED|AUDIO_TRACK_SWITCHING|subtitleDisplay|187|vast_unmutebutcolor|ffce00|webkitSupportsFullscreen|openlast|hlsdvrtime|fullscreenElement|msFullscreenElement|mozFullScreen|wheelDelta|OpenScroll|webkitIsFullScreen|webkitFullscreenElement|offsetwidth|webkitExitFullscreen|webkitendfullscreen|webkitEnterFullScreen|roundingver_final|outros|235|playedstore|PasswordTime|f48eco3q1v3q221c291u393v211d3q0z101o27213o193x2e1k193v111k1c2z173u3y113z1411153x392o1922361s3s2v223p1z3u262e153v392q1932341z311o253c1g3e2b381w2v3u11121m260y111229213x213b361w2x3u11101m3e182v2z2n11223a231q27353e142z2x253e162s29111138231s27353c1421281y1a2s291y3u27163u291u3s271q2e113u2611113w261z3w263u3m3o011131393w141o272c2o111z23121z121o273c2o2o37323o1z31213b213v3228163o0z1e1e2v2c292q142u1z101f211q1z2z3a25373u253w273t133623111138371121161h1z1e1o3e162t312r3e29213x212q1g27332e3b3w121o142s1c1c2f1g1e1h1c142g1k1c1c2g1r1e1a3e1a1g151e1k1e1m1f1f2c1u1f1r2c1t3g1v2e1s2c1y2e1s3e1e2e1w1e1z2c1u3e1r2c1u2e162e1s2e1r2e1u1c1k2e1w3e1h2c1w2f1z2c1s3e112e1t1d1w2e1s1d1u2e1u2e1u2c1v3g1v2c1u2e1x2e1u2e1b2e1u1d1y2e1v2g1q2c1u2f1y2c1t2g1q2e1t1c1w2e1t2c1s2e1u3e1y2c1u3e192c1u2g122e1s3c192e1t3e1t2e1u2f172c1u3f1x2c1s3f192e1s3d1d2e1s3d192e1u3f1a2c1u1f192c1t3g182e1s3d1a2e1s3d1v2e1u2f172c1v3g1c2c1s3f1a2e1s3d162e1s3d192e1w3f1a2c1u3f182c1s3f1j2e1s3d1b2e1s3d1d2e1u3f172c1u3f1t2c1s3f1b2e1s3d182e1s3d172e1v3e1i2c1u2f172c1s3f1b2e1s3d192e1u2c1u2e1u2e1e1c1h1e1m1e1c1e1m2f1d3c1d2e141c121f163f1s3d1e1g1u1d1w2f1l2f183e141d1f1e1e3f1r1e1b3c1e3f1j3d131f1q1e1i1e1j1f1g2c181e1e2f161e1u1g1j3c1c1e1i3g141d1j3g191d1c3f1u1g1p3c1e1e1f3d1c3f1e3f1c3d1e3f1f2d1b2f1g3f1e3d1d2g1s1c1f1e161f1s1e1h3g1r3b1c3f1e1e1c3c1a1e1f2e1b2e1e1f1b3d1i2e1f2c1c1g1m1e1d3c1i1f1g2c1j1f1v2e1s1e1l3e1d1d181e1f3g1i3e1h1e1g3c1t2g1l2e1u2d1m2e1s1e152e1v3g1p2c1w2g1f2c1s3g1r2e1s2e1t2e1u2e1k2e1u3g1f1d1m2e1t3d102e1v2g1f2c1w2g1r2c1s2g1x2e1r1c1t2e1t1c1z2e1v3f1y2c1u3e1v2c1s1e102e1u2d1x2e1u2c1y2e1u1g152c1u2f1e2c1u3e1u2e1u2e1b2e1u1c1o2e1w3g1w2c1w1e1w2d153f123e1w1c141u123c141e1k3g1g2e1e3f142c1g3f1a1g1g1d1s1g1j1c103g1c1e1r3e162e1u2e1p2e1s2e1z2c1w2e1g2c1s3e1t2e1u2e1y2e1t2c1r2e1u2g1g2c1v2e1x2c1s2f1y2e1u2c1a2e1s2e1v2e1u2g1b2c1u1f162c1q3e1z2e1s1e1i2e1u1c1s2e1t3e1k2c1w2e162c1q2g1m2e1s1d1b2e1u2e1k2e1u2g1x2c1u2g1y2c1q3f102e1s2c1y2e1s1d1i2e1r2g1v2c1v3g1g2c1q1f192e1u3d1a2e1s3d172e1t3f162c1u3f172c1s3f1c2e1s2d192e1u3e1e2e1s3f192c1w3f1d2c1q3f182e1u3e1d2e1s3d152e1s3f172c1u2f172c1s3e1a2e1s3d1a2e1s3d182e1s3f182c1u3f1a2c1q1f172e1t3d1d2e1s3d172e1s3f152c1u2f172c1s3g1w2e1s1d192e1s3d1c2e1s1f172c1u3e1z2c1q3e1w2e1k1c143f1l1e1i1f141f121d161g1s2e1d1f141f103d1k1f1d3c1b2f161g1c1d1d1f1q3d1d1g1g3f1g3c1f1e1f1c1d1g1m3e1c1c1a3g133e1f2e1b2f1k3d1e1e1g2c1q2g1j3g1d3c1l3e1f1d191g1j1f181c142e191d192f1b2f1b1d1d3e181c1b3f183f153c1k1g1s3d1d2g1f1f1f1c1e3e1b3c171f1r1f1s3e143e1u1d123f1f3f171d1j1g1s2d1h2g1m1e1a3e1a1g1m3e1b1e1h1e1c1c1i2e1f3e1f2e1i2g1c3d1h2e1v2c1f2e1s1e152c1u2g1f2c1q2g1i2e1s2e1j2e1u1e1i2e1s3f1k2c1u2g1d2c1s1g1g2e192c1t1e152c1r2e1k2e1u2c1h2e1u1e1d2e1u1g102c1t1f1u2c1q3e172e1s1d102e1t2d1s3e1u3g1a2c1w1g1s2c1q3f1h2e1s2e1b2e1u2e1v2e1u3g1o2c1u2g1w2c1q3g1l2e1u2e1h2e193d143e1u3f12122d2f1g1e1g3g1u1g1h1d1d1e1j1d191f1f1f1b1c1l1e1u1e1o3e1s3f1c2c1u2e1i2c1s3e1z2e1s1c1x2e1u1d1r2e1t1e1e2c1u1f1x2c1t2e1m2e1s1e1x2e1t2c152e1u3e1w2c1u3e1e2c1u2e1r2e1q1d182e1s2c1u2e1s2g1i2c1v3e1z2c1u2g1y2e1r2c102e1s3d1k2e1s3e162c1u3e1r2c1u2e1q2e1r1c1i2e1u2c142e1u2e1x2c1u2e1b2c1u2g1e2e1r3e1l2e1s2d182e1s3e1d2c1u1f192c1s3g1e2e1q3d1a2e1t3c192e1s3f152c1u3e1h2c1s2f182e1s3c1f2e1s1d192e1s3e1f2c1u3f182c1u3f192e1q3d1b2e1s3c1z2e1s2f172c1u3f1e2c1s1f192e1q3e1e2e1s3d172e1t3g192c1u2f182c1s3f182e1q2d192e1t3c1j2e1s3f162c1u3f192c1s3f172e1q3d1v2e1s2c1u2e1f1e1d3b163g1f2d181g1f2g1d1c1k1g1m3d1y1g1f3e1d1e1e1g1h3c1b1f1k1g163d1f3e1a1d1g3g141g1f3e141g1w2d1j3f181e101b1e1f1e3d1p1e1b3e1b3e1l3f133d1o1e1i1g1f3d1i2e181c1c1f161g1q1d1l3e181c181e181e161c1u1g1j3c1a1e1a1g103b1e1g1c1c1i2f1f3f1d3c141g143e1d3e1f1g1c3e1l1g1f2c192f141f1d1c1e3e1f1d1i3f1a1g1e1d1e1g1k3d1h2e1s3g1h3e172f1e3d142f1e2g1a1c1h2e1y2c1u1g1y2e1r2e1g2e1u3c1h2e1u3e1f2c1v2f1d2c1t2f162e1s1e1q2e1s3e1k2e1f3e1s2e1t2e1u2c1s2e1t2g1y2c1v2g1j2c1s1f1r2e1q1d162e1s2d1y2e1t2e132c1w1e1a1d1u2g1s2e1r1e1q2e1u2d152e1t1e1k2c1u2e1r2c1t3g1l2e1q3e1q2e1s2d1h2e1s3g1d1c1t2e162d1z3f16141h1g2f2d2r1t2t2m1k1q2g141|ca1fd1s2z2829333716243q013z1m25212q193v3c1d3q0z1z2k3q01302k3v2u37242t302p113038231s27332z14212x232z1a2u291z1z38251s25332z1622361w1z12161z133v2b2q173z241u3u2t3z2n113w243c133x2b2o173z2611101m232e1i3c2936182x3s101z1o280w101z3b233v3z3938182v3s10111o3c162t3b233v29213x3b213v29233x1z1z3s2911303s271u2u271p2o1i27303o3c1z2312193v111130223316212o193v111k1t332z1d223n3c1z3w2o2z1o1e27211o1m23111s253r172126143c1c2e2b361a3w2b341v3u2s3q3u3730393r373037171621141z101o253c1o1z113w243c1b373a3v1z1x23141g1p2j1a1f1i1e1j1f1l3c181c1v3e1a2e1b3f163e1p3e1m1e1u1e121f192c1t2c122e1s2c1z2e1v2d1u2c1u1e132c1t2g102c1u2c172e1r3e1u2e1w2c1k2c1w1e1x2c1u1e1z2c1s2d1y2e1r3c1t2e1u2d172c1v2e1s2c1s2e1g2c1u2e1v2e1s2d1r2e1u3e1x2c1u2g122c1u2g102c1t2e112e1q2c1s2e1u2e1v2c1v2e1t2c1t2e1x2c1s3d1y2e1s3c1q2e1u3e1h2c1u2f172c1s3f122c1s2d1a2e1q3d1h2e1u1d172c1u3g1y2c1s3f192c1u3d1w2e1q3d192e1u3d1t2c1u2f152c1u3f1x2c1s3d1b2e1r3c1c2e1u3d182c1w3f1w2c1s3f1b2c1u3d1a2e1q1d192e1w3d1b2c1u3f152c1s3g1t2c1s2d1b2e1q3d1c2e1u3d192c1u3g1u2c1s1f192c1s3e1b2e1q3d172e1u3d1b2c1u2e1s2c1s1e1h1c1b1e1g3g1a1c1i1f1r3d1r3b1e3f1d3d1i2f143d1o2d1e2g1k1c1b3e1e3d1c3e1r1g1d2e1q3g1e1c1c1d1e3e1b2d161g1u1d1b1e1e3f1d1e1g3f1i2c1c1c1f1e1d1e1p3e1e1c183d151g1f2c1b2f1m1d1d3c1i1g1h1e1j1g1l1e143e1g3g1k1e1p1g1k1e1b2c1e1g1f3b1d2f1e1c1s2e1e1f1d1d121e1e3d1c3c1r3g1j3c1d3g1a1d1d3c141e191d191f1h1d1d1d1l1g1d2c1o2e1e1c1c1c1f3f1d1c181d1e1e1h1d112e1r1c1j2e1w1e1p2c1u3e1r2c1t2g1x2c1t1c192e1q2c192e1u2e1q2c1v1g1h2c1u1e1u1e1i2c1u3e1u2c1u1e1j2c1s2e1l2e1s2c142e1v2c152c1u2e132c1u2e1z2c1t2c102e163c1r2e1u2c1o2c1u2g152c1s3g1v2c1u1e1x2e1r2c1r2e1u3d1f2c1v2g182c1t2e1m2c1x2d1t3e173c142e141s2j3e1b3f1o1c171e131e123c161g1g3d151g1e2e1k1c1z3g1g3e132e1t3e1v2c1w2e1t2c1s2g192c1u1d102e1r2e1o2e1s2d1y2c1v2g1j2c1r1e1u2c1t2c1u2e1q2c1w2e1s3c192c1w2g1y2c1q3e172c1t3e112e1q2c1u2e1u1c1o2c1v2e132c1q1e1l2c1s3e1h2e1s1c1c2e1s3e1g2c1w1f1v2c1r2g1j2c1u2e1v2e1s3e1x2e1s2c1c2c1w1e1v2c1s2e1h2c1s1d1a2e1s3d182e1s3d192c1u3f182c1q3f192c1u3d1q2e1q3d172e1t3c1d2c1u1f162c1s3g152c1s3d192e1r3d1b2e1s1d182c1w3g1y2c1q3f182c1s3d1b2e1q3d162e1s3c172c1u3f152c1q3e1d2c1s3d192e1q3d1j2e1s3d192c1w3g1d2c1q3f172c1s3d1l2e1q2d162e1u3d1b2c1u3f152c1q3f1b2c1s2c112e1q2c1i1e1h3c1c1d1g1e1f3b1d3f1f3c1b2c163e1y3b1b3g181d191d1e1g1e3d1e1e1f3d1c2d1m3e1j1c1g1f1h1d1c3c1j3e191d1i1f183d1c3c1c1g1e3d121g1h1c121d1y2f1h1d161e121b1d3e1g3g1k1c193e1f3d1j3e1g3f1c3e1c3f1e3c1c3d1e1g1i3d1i3f1w1d142c1g1e193c1b1g1h1d1p3c103g1d2d112e1a3d142d1e3e1e3c1g3e1f1c1s2d1r1e1a1e193f143e1d1e1k1g1i1d1f1e121d143c1c1g1p1e191e1e1c172c1w1e1t2c1r3e1q2c1s1c122e1s1c1j2e1r1d1w2c1v1e1w2c1q1e1j2c1s1c1s2e1q1d1i3f1j2c1s3d1u2e1q1c1t2e1t1c1q2c1w1e1y2c1s3e1x2c1s2d112e1r3c1w2e1u3c102c1h2e1s2c1r3g1v2c1t2c1q2e1s1c1i2e1t3c1f2c1v2g1u2c1p2f192c1s2c1j2e1r1e1t2e1s1c143d1x3f1r2d1d341t1k1k1e1e1e1i2e141g1e3e1f1d1g3g121d1i1g1j1e1r2c1k2g1u2c1r1g1g2c1s1c1w2e1r2c1k2e1u2c142c1u2g1k2c1s1f192c1s2e1r2e1s1e1x2e1s2e1w2c1u3f1y2c1s2e1w2c1q1d1m2e1p2e1v2e1t3e1e2c1u2e1s2c1s1f1r2c1r2e1v2e1q2c1w2e1s3e1c2c1w1e1x2c1s3e1r2c1s2c162e1q2e1p2e1u1c1i2c1w3e1f2c1u2f1z2c1q3c112e1r1d1u2e1s1d152c1v3e142c1s3f182c1s3d1a2e1q3d172e1s3c192c1u3f152c1u3g1t2c1q1d1b2e1q3d1b2e1s3d152c1u3g142c1s1f192c1q3d1i2e1q3d172e1u3d122c1u2f172c1s3f1z2c1q3d1b2e1q3d1w2e1s3d172c1v3f1c2c1s3f172c1q3c1d2e1q3d182e1t3d172c1u1f152c1t3e192c1q3d192e1q3d192e1s2c1s2c1u2e1u1c1f1e123c141c1m3g193c143e121d121e1u2e193c1q3e183c1d1c1i3g121d1h3g191e1d3d1u1g1k3c1d1e1f3d1q2e1r1e193c1d3g1c1c1k1e1e2g1a3e1c1e1s1d1d3c1f2f141e1s1f1b1e1h3d1e1g1e3d1g2e1f1c1o3d1e3f1h3d183f142c181c1e3f1d3d183g1f1e1k3c141f123c1e1e1d3d1q3d1k1g1d3d1p1g1d1c123c1u3f1k3c183e1t1c1d3e1i1g1g3d171g1e1c1j1c1e1e1d2c1s1f1f3e1k1e1e3e1i1d1p3e121c1r2c122e1q2c1w2e1t1e1s2c1w1f1y2c1s1e142c1s1c1w2e1q3c1z2e1u2c1y2c1u1f121c162e1u2d142c1v2g1y2c1s2e1u2c1r1c1w2e1s2e1y2e1u3e142c1w2e1y2c1u3e1t2c1s3c1y2e1r2c1h2e1s2e1t2c1u3g1s2c1t1e102c1q2c1q2e1r1e192e1t2e1y2c1u1e1q2c1s1e1y2c153d1b2e173c171k1d1g1r2q2g2v1j1o2t1s16|tracking|0px|vast_unmutebutbgcolor|writePl|hash|pjs_thumbnail_|reloadjustevent|reloadplus|000|pjsiframed|fileend|redirectparent|134|nooverlay|skipimprsd|vast_init|135|u10|pointcolor|handlemarginbottom|crtm|skipimpessed|pointa|handlemargintop|bgload2|bgload|VastImpression|stripsspace|VpaidStarted|yandex|225|chngwd|handlemarginleft|crossdomain|issue|redirectblank|1006|1005|handlemarginright|unescape|pointw|vlscrl|scrollY|onmousedown|onmouseup|slidespeed|3600000|0e1f72925333w351w391g25322o1b3x3c1d3o02111m272z2q2o253e2o2o2y233a1e25211g3e29381c2v3u1z211o360y1z213b213x2z2b381a2x3s11211m21162v212n11203a251q27332e162z2x232e1y3s291z113a231s25352e1431261y121z161z153x392q1721261s3u2t212p1z3w242e153v3b2o192134121z1o251z3w26113w26113u28113u2q2z2b233v3e29233x29233v2720393x2c11112235143q02303e293y141m3e1b3q013z2m2211211m211z112u27112z1f3b3v3e181y12302x3u2u353c121z1e1o1z153v29231t322o14252522332e1826352z1f1g183e1421281w111011223s291z121o3s370z21243316332r1e3d1q1e1m1f1d1e1q3f1l2e1s3d1h3g163g1k2g1k1c1j2d1g3e1q3f1k2e1v3c112c1w2g1w2e1t2e102c1u3d1m2e1q3e182e1u3c1t2c1w2e1o2e1t1e1i2c1w2c162e1s2e1z2e1u2c1d2c1w2g1c2e1t3g1l2c1u2c1w2e1q1g142e1w2e1t2c1u2e1x2e1u2e1i2c1w3c1v2e1s3g1w2e1v3c1v2c1w2g1e2e1t2e1z2c1w2d102e1s2e182e1u2e1z2c1w2g192e1s1f182c1w3e1x2e1q3f192e1u3d1b2c1u1f162e1s3f112c1u2d1b2e1q3e1i2e1u2d192c1w3f122e1s2f192c1v3d1q2e1q2f192e1w3d162c1u3f172e1u3e1e2c1u2d192e1s3f1d2e1u3d192c1v3f1d2e1s1f192c1u3e1d2e1q2f172e1v3d112c1u3f142e1u3g1c2c1u2d1a2e1s3g1v2e1u3d192c1u3g172e1s3f1w2c1u2c1w2e1d1e1h3f1i1e1i3e1w1g122g1s2g1f1c1k3e141g123f1g2e1i1c1u1e1s3g1d1e1j3e1e2d1d3e1l2f161f121e1b1d1e1e1i3f1e2e1c3f1u3d1m3c1q1e1g1f1h1f1e1c1j3c1d2f1i1f183f1e3c1c1e1i3g121f1h1e141c1c1c1c1e181e1a3f1r1e1u1d1d2f191f1p3f1e1d1i1e1f1g1k3e122e161d121c1e3f1d1f1k1f1v2e1u1c1f1f183g1s1e1u3c1i3d1g3g121f1i1g1u1d1i3c1w2g1f1f1c1e1e1d1m3c143g1d1f1g1g103c1w2c1w1g1q2e1t2e1f2c1u2e172e1r2e1u2e1u3e102c1u3f1t2e1u2g1z2c1w1e192e1d2e1t1g192c1v2c1r2e1q1e1x2e1u1e1y2c1w3g1h2e1u3g1j2c1u3c102e1q2g102e1w3c1m3c1w2e1u2e1u2g1s2c1u3d1j2e1r2g1v2e1v2c122c1u2e1p2e1s1e1j2c1v3d122e1r1e1f2e1v2d1b3d103f1f192k1g143e1h2d1a3g1p3e183e1u3e1c1e1k3e1h1e1j1e1h2c1a1b1i3f122e1s2g1t2c1w2d1t2e1q3g1v2e1s3e162c1w2g1w2e1r2g1z2c1u1c1u2e1q2g1t2e1t2c1x2c1v2e1t2e1q3f1w2c1w2c1s2e1q3g1f2e1s3c112c1u2e1c2e1q2e1i2c1u3c112e1s1e1t2e1u1d1t2c1v1e1e2e1q1f1x2c1v2c1r2e1s1g1t2e1t2c172c1w2e1w2e1q3e1e2c1w2c1t2e1q1f142e1u3c1i2c1u3f172e1s3g162c1u3d192e1q3f1c2e1s2d1b2c1u3f1t2e1q3f192c1u3c1a2e1q3f172e1u3e1d2c1u3f162e1q3f182c1u2d1b2e1s3f1t2e1s3d1a2c1u3e1a2e1q3f192c1v3e1f2e1q3f172e1s3d1m2c1u1f152e1s3g1c2c1u3d1b2e1s3e1o2e1s1d192c1v3e1g2e1q1f172c1u3d1d2e1q3f152e1s3c112c1u1e1i1e161f1k1e1l1e1e3e1g3f1k3g1r3b1e2e1e1f193g1f3g131d1q1c1k1f1f3f1e1e181c1e1d181g1d1f1h3e1d1c1i3d161g1f3g171f1f3d1u1e1r3e1d1e1b3f1s2d1r1c1d3e1d3f1a1e1m1e1e1e1l3g1b3e1q1f1m1e1r1e1r1g1k1g1d1g1k1d1a1c1a1e122f1b3g1d1c1r3c1e1f1e1f122g1f3c1i3c1f3g1d3f1d3e1i1c141c181g1i3f1f2e1s2e1s3d1h3g163g1i1g151d1m1c1e1e1b3f1q3e1f3d1u2e1q3e1b1e1u3e1z2c1w2e1l2e1s2e1r2e1s3d1q2c1v1e1r2e1q2g1j2c1w2c192e1s1g1p2e1u2d1h2c1w1f1w1e1h2e1u2e1w2c1w2e1q2e1q2e1h2c1u2e1l2e1r2g1d2e1s3c122c1v2e1g2e1q3g1v1c122e122e1q2g1f2e1t2c1b2c1w1g1q2e1q1e1u2c1v2d122e1q3f1y2e1t1c192c1v2e1s2e1w3e142c1a2d171e172t1o1g1e3e1c1c1k3e1k1g1j1f1k1c1d3c1i1f1e1f1g2e1h1e1b2c172e1s1e1o2e1t2c152c1u1e1j2e1s3g1f2c1u1c1g2e1q3g1g2e1u2d1x2c1v2g1h2e1u2g1t2c1u2e112e1q2e1c2e1u1c1x2c1w2e1f2e1s1e1u2c1s2c1y2e1r2e102e1u2c1z2c1v2f1s2e1s1e152c1t2e102e1s2e152e1t3e1u2c1w2e1i2e1u1e1z2c1u1c1z2e1q2f1w2e1t3c1t2c1u2f152e1t3e1z2c1s3d1a2e1q3e1b2e1s3d192c1w3g1b2e1s3f182c1s3d1f2e1q2f172e1t3d1z2c1u1f152e1s3e1k2c1s3d192e1q3f162e1s1d192c1u3f132e1s3f182c1s3d1x2e1q2f192e1s3e1g2c1u2f172e1s3f1e2c1s3d192e1q3e1q2e1s1d192c1w3f1r2e1s3f182c1u3e102e1q3f172e1s3d192c1u3f152e1s2e1u2c1s2e1h1e103g193f1q1c1m3d1t3d1b3f1c3e1b2c1m3c102f1i3g1c3e1f1e1m3c1f1e163f133g1h2c1b1d1m1g1d3e1g2e1s2e1c3e1e1e1h3e1d1f1b1e1j3d1a1e102e193g1f1e1g3d1i2e1d3f1s1g1k1c1l1c1k1g1f3f1c2g1k3e1k1e1m3g1i3f1c3f1f1e1j3e1j3g123e1c1g1f3d1s3c1f1e1d1e1i2g121e143e1e2f191f1h3d1s2d1s1d1h3e1b2f143g1l1e1a1e1k3e1h1e1c1g1f1c1x3c142e173f1s1f1b1d1w1e1u2g1d3e1v2e1t3e1h2c1w2g1s2e1s2f162c1t2e112e1s3g1q2e1u2e1v2c1w2g1g2e1s2g152c1u3e193g1r2e1u3e1s2c1u2e1v2e1q2e1t2e1t2c1m2c1u2e1d2e1t3e1v2c1s2c1x2e1r2e1f2e1f2c1s2c1u1e1f2e1t2e1v2c1u2d1l2e1r3g1y2e1s2e152c1w3f1c2e1t2g1w2c1t2c122e1i2e1w3f1u3c143c1j141i1q1t2q2h1q2u1d2g2r221o|67750a25f0dabc4f3cffe9827a3afb5c|scrollarrowbgovercolor|unatpl|YT|999999|historybgcolor|heartbeats|Hide|isOpen|historybga|nativeontv|nativenotandroid|historybgaover|historytitlestrike|DOMContentLoaded|sess|fast|pljscom|water|scrollarrowbg|showfrom1file|scrollarrowbgover|Destroyed|scrollarrowgradient|scrollarrowbgcolor|url3|888888|reverse|emptyremove|pstrcnfg|url2|headbordercolor|intvsbl|viewinit|historycolor|wid|customimage|Open|floatheight|444444|scrnstp|offset|dontseekforward|mrgnp|downself|01|_self|borderbottom|shape|200000|answer|reloadstart|Progress|iVBORw0KGgoAAAANSUhEUgAAAAEAAADGCAYAAAAT|PluginWater|Resume|pjsstat|pjsstatid|PluginStat|historytitlea|AdBlock|postertitleonhover|bFjuF1EOL7VbrIrBuusmrt4ZZORfb6ehbWdnRHEIiITaEUKa5EJqUakRSaEYBJSCY2dEstQY7AuxahwXFrvZmWl2rh4JZ07z9dLtesfNj5q0FU3A5ObbwAAAABJRU5ErkJggg|OqFAAAAdklEQVQoz42QQQ7AIAgEF|177|posterwidth|RWAlnQyyazA4aoAB4FsBSA|kbq|posterheight|posters|VastShow|stripsw|floatmarginright||suggestions|EXTINF|playlists|denied|access|thumbs_img|onerror|flipx|reloaderTimer|offsetTop|flipy|logos|dvtp|touch_|_bg|clickmarginleft|moved|iconmarginright|const|files_sleep|files_scale|rotateonclick|norootplstart|globalfont|iconmarginleft|redirectafter|iconmarginbottom||finishnormal|ShuffleEnd|iconmargintop|clickmarginright|finish|contrast|ontouchend|tipa|counter|isflash|marginbgpadding|marginbgcolor||pjsga|srvsga|bufferInterval|Seeking|getDate|marginbg|170|bufferDeg|372|tags|countdown|Break|loaderror|_text|pageXOffset|_icon|tryotherquality||SVG|Cross|Alternative|plhistory|PluginCountdown|PlgnCntrlTmln|ontop2|floatwidth|link2|reloadtimes|iconspress|floatlimitwidth|current_sleep|clr_options|Next|VastError|vast_error|valuepaddingbottom|VastRemoveUrl|valuepaddingtop|and2limit|preloading|tippmargin|disablePreload|colorover|VastInsertAnd|normalonclick|aload|VastInsertOr|valuepaddingleft|valuepaddingright|clr_contrast|renew|VastReady|vast_ready|VastOverlay|l3v_left|vastbgpreload|tagLive|valuemarginright|alarm|valuemarginleft|PluginVastTimeMsg|valuemarginbottom|startdelay|vast_startdelay|valuemargintop|lines1|abg|alphas|vast_stop|pjs_parent|tippointeralign|180|clr_brightness|clr_saturate|tipmargintop|tipmarginbottom|tipmarginleft|tipmarginright|posterfull|RemovePassword|Pass|scale0|control_time|clr_sepia|EmptyVastUrl|triangle|nxtttl|running|7px|vast_finish|vast_ima|slider|Verdana|action_back|volume_element|vldcntrInterval|control_mute|vast_remove|10px|vast_dontplay|outside".split(
      "|"
    ),
    0,
    {}
  )
);
!(function t(e) {
  var r, i;
  (r = this),
    (i = function () {
      "use strict";
      function r(t, e) {
        var r = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
          var i = Object.getOwnPropertySymbols(t);
          e &&
            (i = i.filter(function (e) {
              return Object.getOwnPropertyDescriptor(t, e).enumerable;
            })),
            r.push.apply(r, i);
        }
        return r;
      }
      function i(t) {
        for (var e = 1; e < arguments.length; e++) {
          var i = null != arguments[e] ? arguments[e] : {};
          e % 2
            ? r(Object(i), !0).forEach(function (e) {
                s(t, e, i[e]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i))
            : r(Object(i)).forEach(function (e) {
                Object.defineProperty(
                  t,
                  e,
                  Object.getOwnPropertyDescriptor(i, e)
                );
              });
        }
        return t;
      }
      function n(t, e) {
        for (var r = 0; r < e.length; r++) {
          var i = e[r];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(t, m(i.key), i);
        }
      }
      function a(t, e, r) {
        return (
          e && n(t.prototype, e),
          r && n(t, r),
          Object.defineProperty(t, "prototype", { writable: !1 }),
          t
        );
      }
      function s(t, e, r) {
        return (
          (e = m(e)) in t
            ? Object.defineProperty(t, e, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (t[e] = r),
          t
        );
      }
      function o() {
        return (
          (o = Object.assign
            ? Object.assign.bind()
            : function (t) {
                for (var e = 1; e < arguments.length; e++) {
                  var r = arguments[e];
                  for (var i in r)
                    Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                }
                return t;
              }),
          o.apply(this, arguments)
        );
      }
      function l(t, e) {
        (t.prototype = Object.create(e.prototype)),
          (t.prototype.constructor = t),
          h(t, e);
      }
      function u(t) {
        return (
          (u = Object.setPrototypeOf
            ? Object.getPrototypeOf.bind()
            : function (t) {
                return t.__proto__ || Object.getPrototypeOf(t);
              }),
          u(t)
        );
      }
      function h(t, e) {
        return (
          (h = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (t, e) {
                return (t.__proto__ = e), t;
              }),
          h(t, e)
        );
      }
      function d() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return (
            Boolean.prototype.valueOf.call(
              Reflect.construct(Boolean, [], function () {})
            ),
            !0
          );
        } catch (t) {
          return !1;
        }
      }
      function c(t, e, r) {
        return (
          (c = d()
            ? Reflect.construct.bind()
            : function (t, e, r) {
                var i = [null];
                i.push.apply(i, e);
                var n = new (Function.bind.apply(t, i))();
                return r && h(n, r.prototype), n;
              }),
          c.apply(null, arguments)
        );
      }
      function f(t) {
        var e = "function" == typeof Map ? new Map() : void 0;
        return (
          (f = function (t) {
            if (
              null === t ||
              ((r = t),
              -1 === Function.toString.call(r).indexOf("[native code]"))
            )
              return t;
            var r;
            if ("function" != typeof t)
              throw new TypeError(
                "Super expression must either be null or a function"
              );
            if (void 0 !== e) {
              if (e.has(t)) return e.get(t);
              e.set(t, i);
            }
            function i() {
              return c(t, arguments, u(this).constructor);
            }
            return (
              (i.prototype = Object.create(t.prototype, {
                constructor: {
                  value: i,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              h(i, t)
            );
          }),
          f(t)
        );
      }
      function g(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var r = 0, i = new Array(e); r < e; r++) i[r] = t[r];
        return i;
      }
      function v(t, e) {
        var r =
          ("undefined" != typeof Symbol && t[Symbol.iterator]) ||
          t["@@iterator"];
        if (r) return (r = r.call(t)).next.bind(r);
        if (
          Array.isArray(t) ||
          (r = (function (t, e) {
            if (t) {
              if ("string" == typeof t) return g(t, e);
              var r = Object.prototype.toString.call(t).slice(8, -1);
              return (
                "Object" === r && t.constructor && (r = t.constructor.name),
                "Map" === r || "Set" === r
                  ? Array.from(t)
                  : "Arguments" === r ||
                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
                  ? g(t, e)
                  : void 0
              );
            }
          })(t)) ||
          (e && t && "number" == typeof t.length)
        ) {
          r && (t = r);
          var i = 0;
          return function () {
            return i >= t.length ? { done: !0 } : { done: !1, value: t[i++] };
          };
        }
        throw new TypeError(
          "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
        );
      }
      function m(t) {
        var e = (function (t, e) {
          if ("object" != typeof t || null === t) return t;
          var r = t[Symbol.toPrimitive];
          if (void 0 !== r) {
            var i = r.call(t, e || "default");
            if ("object" != typeof i) return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === e ? String : Number)(t);
        })(t, "string");
        return "symbol" == typeof e ? e : String(e);
      }
      function p(t) {
        return t &&
          t.__esModule &&
          Object.prototype.hasOwnProperty.call(t, "default")
          ? t.default
          : t;
      }
      var y = { exports: {} };
      !(function (t, e) {
        var r, i, n, a, s;
        (r =
          /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/),
          (i = /^(?=([^\/?#]*))\1([^]*)$/),
          (n = /(?:\/|^)\.(?=\/)/g),
          (a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g),
          (s = {
            buildAbsoluteURL: function (t, e, r) {
              if (((r = r || {}), (t = t.trim()), !(e = e.trim()))) {
                if (!r.alwaysNormalize) return t;
                var n = s.parseURL(t);
                if (!n) throw new Error("Error trying to parse base URL.");
                return (
                  (n.path = s.normalizePath(n.path)), s.buildURLFromParts(n)
                );
              }
              var a = s.parseURL(e);
              if (!a) throw new Error("Error trying to parse relative URL.");
              if (a.scheme)
                return r.alwaysNormalize
                  ? ((a.path = s.normalizePath(a.path)), s.buildURLFromParts(a))
                  : e;
              var o = s.parseURL(t);
              if (!o) throw new Error("Error trying to parse base URL.");
              if (!o.netLoc && o.path && "/" !== o.path[0]) {
                var l = i.exec(o.path);
                (o.netLoc = l[1]), (o.path = l[2]);
              }
              o.netLoc && !o.path && (o.path = "/");
              var u = {
                scheme: o.scheme,
                netLoc: a.netLoc,
                path: null,
                params: a.params,
                query: a.query,
                fragment: a.fragment,
              };
              if (!a.netLoc && ((u.netLoc = o.netLoc), "/" !== a.path[0]))
                if (a.path) {
                  var h = o.path,
                    d = h.substring(0, h.lastIndexOf("/") + 1) + a.path;
                  u.path = s.normalizePath(d);
                } else
                  (u.path = o.path),
                    a.params ||
                      ((u.params = o.params), a.query || (u.query = o.query));
              return (
                null === u.path &&
                  (u.path = r.alwaysNormalize
                    ? s.normalizePath(a.path)
                    : a.path),
                s.buildURLFromParts(u)
              );
            },
            parseURL: function (t) {
              var e = r.exec(t);
              return e
                ? {
                    scheme: e[1] || "",
                    netLoc: e[2] || "",
                    path: e[3] || "",
                    params: e[4] || "",
                    query: e[5] || "",
                    fragment: e[6] || "",
                  }
                : null;
            },
            normalizePath: function (t) {
              for (
                t = t.split("").reverse().join("").replace(n, "");
                t.length !== (t = t.replace(a, "")).length;

              );
              return t.split("").reverse().join("");
            },
            buildURLFromParts: function (t) {
              return (
                t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
              );
            },
          }),
          (t.exports = s);
      })(y);
      var T = y.exports,
        E =
          Number.isFinite ||
          function (t) {
            return "number" == typeof t && isFinite(t);
          },
        S = (function (t) {
          return (
            (t.MEDIA_ATTACHING = "hlsMediaAttaching"),
            (t.MEDIA_ATTACHED = "hlsMediaAttached"),
            (t.MEDIA_DETACHING = "hlsMediaDetaching"),
            (t.MEDIA_DETACHED = "hlsMediaDetached"),
            (t.BUFFER_RESET = "hlsBufferReset"),
            (t.BUFFER_CODECS = "hlsBufferCodecs"),
            (t.BUFFER_CREATED = "hlsBufferCreated"),
            (t.BUFFER_APPENDING = "hlsBufferAppending"),
            (t.BUFFER_APPENDED = "hlsBufferAppended"),
            (t.BUFFER_EOS = "hlsBufferEos"),
            (t.BUFFER_FLUSHING = "hlsBufferFlushing"),
            (t.BUFFER_FLUSHED = "hlsBufferFlushed"),
            (t.MANIFEST_LOADING = "hlsManifestLoading"),
            (t.MANIFEST_LOADED = "hlsManifestLoaded"),
            (t.MANIFEST_PARSED = "hlsManifestParsed"),
            (t.LEVEL_SWITCHING = "hlsLevelSwitching"),
            (t.LEVEL_SWITCHED = "hlsLevelSwitched"),
            (t.LEVEL_LOADING = "hlsLevelLoading"),
            (t.LEVEL_LOADED = "hlsLevelLoaded"),
            (t.LEVEL_UPDATED = "hlsLevelUpdated"),
            (t.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated"),
            (t.LEVELS_UPDATED = "hlsLevelsUpdated"),
            (t.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated"),
            (t.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching"),
            (t.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched"),
            (t.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading"),
            (t.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded"),
            (t.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated"),
            (t.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared"),
            (t.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch"),
            (t.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading"),
            (t.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded"),
            (t.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed"),
            (t.CUES_PARSED = "hlsCuesParsed"),
            (t.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound"),
            (t.INIT_PTS_FOUND = "hlsInitPtsFound"),
            (t.FRAG_LOADING = "hlsFragLoading"),
            (t.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted"),
            (t.FRAG_LOADED = "hlsFragLoaded"),
            (t.FRAG_DECRYPTED = "hlsFragDecrypted"),
            (t.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment"),
            (t.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata"),
            (t.FRAG_PARSING_METADATA = "hlsFragParsingMetadata"),
            (t.FRAG_PARSED = "hlsFragParsed"),
            (t.FRAG_BUFFERED = "hlsFragBuffered"),
            (t.FRAG_CHANGED = "hlsFragChanged"),
            (t.FPS_DROP = "hlsFpsDrop"),
            (t.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping"),
            (t.ERROR = "hlsError"),
            (t.DESTROYING = "hlsDestroying"),
            (t.KEY_LOADING = "hlsKeyLoading"),
            (t.KEY_LOADED = "hlsKeyLoaded"),
            (t.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached"),
            (t.BACK_BUFFER_REACHED = "hlsBackBufferReached"),
            t
          );
        })({}),
        L = (function (t) {
          return (
            (t.NETWORK_ERROR = "networkError"),
            (t.MEDIA_ERROR = "mediaError"),
            (t.KEY_SYSTEM_ERROR = "keySystemError"),
            (t.MUX_ERROR = "muxError"),
            (t.OTHER_ERROR = "otherError"),
            t
          );
        })({}),
        R = (function (t) {
          return (
            (t.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys"),
            (t.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess"),
            (t.KEY_SYSTEM_NO_SESSION = "keySystemNoSession"),
            (t.KEY_SYSTEM_NO_CONFIGURED_LICENSE =
              "keySystemNoConfiguredLicense"),
            (t.KEY_SYSTEM_LICENSE_REQUEST_FAILED =
              "keySystemLicenseRequestFailed"),
            (t.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED =
              "keySystemServerCertificateRequestFailed"),
            (t.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED =
              "keySystemServerCertificateUpdateFailed"),
            (t.KEY_SYSTEM_SESSION_UPDATE_FAILED =
              "keySystemSessionUpdateFailed"),
            (t.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED =
              "keySystemStatusOutputRestricted"),
            (t.KEY_SYSTEM_STATUS_INTERNAL_ERROR =
              "keySystemStatusInternalError"),
            (t.MANIFEST_LOAD_ERROR = "manifestLoadError"),
            (t.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut"),
            (t.MANIFEST_PARSING_ERROR = "manifestParsingError"),
            (t.MANIFEST_INCOMPATIBLE_CODECS_ERROR =
              "manifestIncompatibleCodecsError"),
            (t.LEVEL_EMPTY_ERROR = "levelEmptyError"),
            (t.LEVEL_LOAD_ERROR = "levelLoadError"),
            (t.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut"),
            (t.LEVEL_PARSING_ERROR = "levelParsingError"),
            (t.LEVEL_SWITCH_ERROR = "levelSwitchError"),
            (t.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError"),
            (t.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut"),
            (t.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError"),
            (t.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut"),
            (t.FRAG_LOAD_ERROR = "fragLoadError"),
            (t.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut"),
            (t.FRAG_DECRYPT_ERROR = "fragDecryptError"),
            (t.FRAG_PARSING_ERROR = "fragParsingError"),
            (t.FRAG_GAP = "fragGap"),
            (t.REMUX_ALLOC_ERROR = "remuxAllocError"),
            (t.KEY_LOAD_ERROR = "keyLoadError"),
            (t.KEY_LOAD_TIMEOUT = "keyLoadTimeOut"),
            (t.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError"),
            (t.BUFFER_INCOMPATIBLE_CODECS_ERROR =
              "bufferIncompatibleCodecsError"),
            (t.BUFFER_APPEND_ERROR = "bufferAppendError"),
            (t.BUFFER_APPENDING_ERROR = "bufferAppendingError"),
            (t.BUFFER_STALLED_ERROR = "bufferStalledError"),
            (t.BUFFER_FULL_ERROR = "bufferFullError"),
            (t.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole"),
            (t.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall"),
            (t.INTERNAL_EXCEPTION = "internalException"),
            (t.INTERNAL_ABORTED = "aborted"),
            (t.UNKNOWN = "unknown"),
            t
          );
        })({}),
        A = function () {},
        k = { trace: A, debug: A, log: A, warn: A, info: A, error: A },
        b = k;
      function D(t) {
        var e = self.console[t];
        return e ? e.bind(self.console, "[" + t + "] >") : A;
      }
      function I(t, e) {
        if ((self.console && !0 === t) || "object" == typeof t) {
          !(function (t) {
            for (
              var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1;
              i < e;
              i++
            )
              r[i - 1] = arguments[i];
            r.forEach(function (e) {
              b[e] = t[e] ? t[e].bind(t) : D(e);
            });
          })(t, "debug", "log", "info", "warn", "error");
          try {
            b.log(
              'Debug logs enabled for "' + e + '" in hls.js version 1.4.10'
            );
          } catch (t) {
            b = k;
          }
        } else b = k;
      }
      var w = b,
        C = /^(\d+)x(\d+)$/,
        _ = /(.+?)=(".*?"|.*?)(?:,|$)/g,
        P = (function () {
          function t(e) {
            for (var r in ("string" == typeof e && (e = t.parseAttrList(e)), e))
              e.hasOwnProperty(r) &&
                ("X-" === r.substring(0, 2) &&
                  ((this.clientAttrs = this.clientAttrs || []),
                  this.clientAttrs.push(r)),
                (this[r] = e[r]));
          }
          var e = t.prototype;
          return (
            (e.decimalInteger = function (t) {
              var e = parseInt(this[t], 10);
              return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e;
            }),
            (e.hexadecimalInteger = function (t) {
              if (this[t]) {
                var e = (this[t] || "0x").slice(2);
                e = (1 & e.length ? "0" : "") + e;
                for (
                  var r = new Uint8Array(e.length / 2), i = 0;
                  i < e.length / 2;
                  i++
                )
                  r[i] = parseInt(e.slice(2 * i, 2 * i + 2), 16);
                return r;
              }
              return null;
            }),
            (e.hexadecimalIntegerAsNumber = function (t) {
              var e = parseInt(this[t], 16);
              return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e;
            }),
            (e.decimalFloatingPoint = function (t) {
              return parseFloat(this[t]);
            }),
            (e.optionalFloat = function (t, e) {
              var r = this[t];
              return r ? parseFloat(r) : e;
            }),
            (e.enumeratedString = function (t) {
              return this[t];
            }),
            (e.bool = function (t) {
              return "YES" === this[t];
            }),
            (e.decimalResolution = function (t) {
              var e = C.exec(this[t]);
              if (null !== e)
                return {
                  width: parseInt(e[1], 10),
                  height: parseInt(e[2], 10),
                };
            }),
            (t.parseAttrList = function (t) {
              var e,
                r = {};
              for (_.lastIndex = 0; null !== (e = _.exec(t)); ) {
                var i = e[2];
                0 === i.indexOf('"') &&
                  i.lastIndexOf('"') === i.length - 1 &&
                  (i = i.slice(1, -1)),
                  (r[e[1].trim()] = i);
              }
              return r;
            }),
            t
          );
        })();
      function x(t) {
        return "SCTE35-OUT" === t || "SCTE35-IN" === t;
      }
      var F = (function () {
          function t(t, e) {
            if (
              ((this.attr = void 0),
              (this._startDate = void 0),
              (this._endDate = void 0),
              (this._badValueForSameId = void 0),
              e)
            ) {
              var r = e.attr;
              for (var i in r)
                if (
                  Object.prototype.hasOwnProperty.call(t, i) &&
                  t[i] !== r[i]
                ) {
                  w.warn(
                    'DATERANGE tag attribute: "' +
                      i +
                      '" does not match for tags with ID: "' +
                      t.ID +
                      '"'
                  ),
                    (this._badValueForSameId = i);
                  break;
                }
              t = o(new P({}), r, t);
            }
            if (
              ((this.attr = t),
              (this._startDate = new Date(t["START-DATE"])),
              "END-DATE" in this.attr)
            ) {
              var n = new Date(this.attr["END-DATE"]);
              E(n.getTime()) && (this._endDate = n);
            }
          }
          return (
            a(t, [
              {
                key: "id",
                get: function () {
                  return this.attr.ID;
                },
              },
              {
                key: "class",
                get: function () {
                  return this.attr.CLASS;
                },
              },
              {
                key: "startDate",
                get: function () {
                  return this._startDate;
                },
              },
              {
                key: "endDate",
                get: function () {
                  if (this._endDate) return this._endDate;
                  var t = this.duration;
                  return null !== t
                    ? new Date(this._startDate.getTime() + 1e3 * t)
                    : null;
                },
              },
              {
                key: "duration",
                get: function () {
                  if ("DURATION" in this.attr) {
                    var t = this.attr.decimalFloatingPoint("DURATION");
                    if (E(t)) return t;
                  } else if (this._endDate)
                    return (
                      (this._endDate.getTime() - this._startDate.getTime()) /
                      1e3
                    );
                  return null;
                },
              },
              {
                key: "plannedDuration",
                get: function () {
                  return "PLANNED-DURATION" in this.attr
                    ? this.attr.decimalFloatingPoint("PLANNED-DURATION")
                    : null;
                },
              },
              {
                key: "endOnNext",
                get: function () {
                  return this.attr.bool("END-ON-NEXT");
                },
              },
              {
                key: "isValid",
                get: function () {
                  return (
                    !!this.id &&
                    !this._badValueForSameId &&
                    E(this.startDate.getTime()) &&
                    (null === this.duration || this.duration >= 0) &&
                    (!this.endOnNext || !!this.class)
                  );
                },
              },
            ]),
            t
          );
        })(),
        M = function () {
          (this.aborted = !1),
            (this.loaded = 0),
            (this.retry = 0),
            (this.total = 0),
            (this.chunkCount = 0),
            (this.bwEstimate = 0),
            (this.loading = { start: 0, first: 0, end: 0 }),
            (this.parsing = { start: 0, end: 0 }),
            (this.buffering = { start: 0, first: 0, end: 0 });
        },
        O = "audio",
        N = "video",
        U = "audiovideo",
        B = (function () {
          function t(t) {
            var e;
            (this._byteRange = null),
              (this._url = null),
              (this.baseurl = void 0),
              (this.relurl = void 0),
              (this.elementaryStreams =
                (((e = {})[O] = null), (e[N] = null), (e[U] = null), e)),
              (this.baseurl = t);
          }
          return (
            (t.prototype.setByteRange = function (t, e) {
              var r = t.split("@", 2),
                i = [];
              1 === r.length
                ? (i[0] = e ? e.byteRangeEndOffset : 0)
                : (i[0] = parseInt(r[1])),
                (i[1] = parseInt(r[0]) + i[0]),
                (this._byteRange = i);
            }),
            a(t, [
              {
                key: "byteRange",
                get: function () {
                  return this._byteRange ? this._byteRange : [];
                },
              },
              {
                key: "byteRangeStartOffset",
                get: function () {
                  return this.byteRange[0];
                },
              },
              {
                key: "byteRangeEndOffset",
                get: function () {
                  return this.byteRange[1];
                },
              },
              {
                key: "url",
                get: function () {
                  return (
                    !this._url &&
                      this.baseurl &&
                      this.relurl &&
                      (this._url = T.buildAbsoluteURL(
                        this.baseurl,
                        this.relurl,
                        { alwaysNormalize: !0 }
                      )),
                    this._url || ""
                  );
                },
                set: function (t) {
                  this._url = t;
                },
              },
            ]),
            t
          );
        })(),
        G = (function (t) {
          function e(e, r) {
            var i;
            return (
              ((i = t.call(this, r) || this)._decryptdata = null),
              (i.rawProgramDateTime = null),
              (i.programDateTime = null),
              (i.tagList = []),
              (i.duration = 0),
              (i.sn = 0),
              (i.levelkeys = void 0),
              (i.type = void 0),
              (i.loader = null),
              (i.keyLoader = null),
              (i.level = -1),
              (i.cc = 0),
              (i.startPTS = void 0),
              (i.endPTS = void 0),
              (i.startDTS = void 0),
              (i.endDTS = void 0),
              (i.start = 0),
              (i.deltaPTS = void 0),
              (i.maxStartPTS = void 0),
              (i.minEndPTS = void 0),
              (i.stats = new M()),
              (i.urlId = 0),
              (i.data = void 0),
              (i.bitrateTest = !1),
              (i.title = null),
              (i.initSegment = null),
              (i.endList = void 0),
              (i.gap = void 0),
              (i.type = e),
              i
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.setKeyFormat = function (t) {
              if (this.levelkeys) {
                var e = this.levelkeys[t];
                e &&
                  !this._decryptdata &&
                  (this._decryptdata = e.getDecryptData(this.sn));
              }
            }),
            (r.abortRequests = function () {
              var t, e;
              null == (t = this.loader) || t.abort(),
                null == (e = this.keyLoader) || e.abort();
            }),
            (r.setElementaryStreamInfo = function (t, e, r, i, n, a) {
              void 0 === a && (a = !1);
              var s = this.elementaryStreams,
                o = s[t];
              o
                ? ((o.startPTS = Math.min(o.startPTS, e)),
                  (o.endPTS = Math.max(o.endPTS, r)),
                  (o.startDTS = Math.min(o.startDTS, i)),
                  (o.endDTS = Math.max(o.endDTS, n)))
                : (s[t] = {
                    startPTS: e,
                    endPTS: r,
                    startDTS: i,
                    endDTS: n,
                    partial: a,
                  });
            }),
            (r.clearElementaryStreamInfo = function () {
              var t = this.elementaryStreams;
              (t[O] = null), (t[N] = null), (t[U] = null);
            }),
            a(e, [
              {
                key: "decryptdata",
                get: function () {
                  if (!this.levelkeys && !this._decryptdata) return null;
                  if (
                    !this._decryptdata &&
                    this.levelkeys &&
                    !this.levelkeys.NONE
                  ) {
                    var t = this.levelkeys.identity;
                    if (t) this._decryptdata = t.getDecryptData(this.sn);
                    else {
                      var e = Object.keys(this.levelkeys);
                      if (1 === e.length)
                        return (this._decryptdata = this.levelkeys[
                          e[0]
                        ].getDecryptData(this.sn));
                    }
                  }
                  return this._decryptdata;
                },
              },
              {
                key: "end",
                get: function () {
                  return this.start + this.duration;
                },
              },
              {
                key: "endProgramDateTime",
                get: function () {
                  if (null === this.programDateTime) return null;
                  if (!E(this.programDateTime)) return null;
                  var t = E(this.duration) ? this.duration : 0;
                  return this.programDateTime + 1e3 * t;
                },
              },
              {
                key: "encrypted",
                get: function () {
                  var t;
                  if (null != (t = this._decryptdata) && t.encrypted) return !0;
                  if (this.levelkeys) {
                    var e = Object.keys(this.levelkeys),
                      r = e.length;
                    if (r > 1 || (1 === r && this.levelkeys[e[0]].encrypted))
                      return !0;
                  }
                  return !1;
                },
              },
            ]),
            e
          );
        })(B),
        K = (function (t) {
          function e(e, r, i, n, a) {
            var s;
            ((s = t.call(this, i) || this).fragOffset = 0),
              (s.duration = 0),
              (s.gap = !1),
              (s.independent = !1),
              (s.relurl = void 0),
              (s.fragment = void 0),
              (s.index = void 0),
              (s.stats = new M()),
              (s.duration = e.decimalFloatingPoint("DURATION")),
              (s.gap = e.bool("GAP")),
              (s.independent = e.bool("INDEPENDENT")),
              (s.relurl = e.enumeratedString("URI")),
              (s.fragment = r),
              (s.index = n);
            var o = e.enumeratedString("BYTERANGE");
            return (
              o && s.setByteRange(o, a),
              a && (s.fragOffset = a.fragOffset + a.duration),
              s
            );
          }
          return (
            l(e, t),
            a(e, [
              {
                key: "start",
                get: function () {
                  return this.fragment.start + this.fragOffset;
                },
              },
              {
                key: "end",
                get: function () {
                  return this.start + this.duration;
                },
              },
              {
                key: "loaded",
                get: function () {
                  var t = this.elementaryStreams;
                  return !!(t.audio || t.video || t.audiovideo);
                },
              },
            ]),
            e
          );
        })(B),
        H = (function () {
          function t(t) {
            (this.PTSKnown = !1),
              (this.alignedSliding = !1),
              (this.averagetargetduration = void 0),
              (this.endCC = 0),
              (this.endSN = 0),
              (this.fragments = void 0),
              (this.fragmentHint = void 0),
              (this.partList = null),
              (this.dateRanges = void 0),
              (this.live = !0),
              (this.ageHeader = 0),
              (this.advancedDateTime = void 0),
              (this.updated = !0),
              (this.advanced = !0),
              (this.availabilityDelay = void 0),
              (this.misses = 0),
              (this.startCC = 0),
              (this.startSN = 0),
              (this.startTimeOffset = null),
              (this.targetduration = 0),
              (this.totalduration = 0),
              (this.type = null),
              (this.url = void 0),
              (this.m3u8 = ""),
              (this.version = null),
              (this.canBlockReload = !1),
              (this.canSkipUntil = 0),
              (this.canSkipDateRanges = !1),
              (this.skippedSegments = 0),
              (this.recentlyRemovedDateranges = void 0),
              (this.partHoldBack = 0),
              (this.holdBack = 0),
              (this.partTarget = 0),
              (this.preloadHint = void 0),
              (this.renditionReports = void 0),
              (this.tuneInGoal = 0),
              (this.deltaUpdateFailed = void 0),
              (this.driftStartTime = 0),
              (this.driftEndTime = 0),
              (this.driftStart = 0),
              (this.driftEnd = 0),
              (this.encryptedFragments = void 0),
              (this.playlistParsingError = null),
              (this.variableList = null),
              (this.hasVariableRefs = !1),
              (this.fragments = []),
              (this.encryptedFragments = []),
              (this.dateRanges = {}),
              (this.url = t);
          }
          return (
            (t.prototype.reloaded = function (t) {
              if (!t) return (this.advanced = !0), void (this.updated = !0);
              var e = this.lastPartSn - t.lastPartSn,
                r = this.lastPartIndex - t.lastPartIndex;
              (this.updated = this.endSN !== t.endSN || !!r || !!e),
                (this.advanced =
                  this.endSN > t.endSN || e > 0 || (0 === e && r > 0)),
                this.updated || this.advanced
                  ? (this.misses = Math.floor(0.6 * t.misses))
                  : (this.misses = t.misses + 1),
                (this.availabilityDelay = t.availabilityDelay);
            }),
            a(t, [
              {
                key: "hasProgramDateTime",
                get: function () {
                  return (
                    !!this.fragments.length &&
                    E(this.fragments[this.fragments.length - 1].programDateTime)
                  );
                },
              },
              {
                key: "levelTargetDuration",
                get: function () {
                  return (
                    this.averagetargetduration || this.targetduration || 10
                  );
                },
              },
              {
                key: "drift",
                get: function () {
                  var t = this.driftEndTime - this.driftStartTime;
                  return t > 0
                    ? (1e3 * (this.driftEnd - this.driftStart)) / t
                    : 1;
                },
              },
              {
                key: "edge",
                get: function () {
                  return this.partEnd || this.fragmentEnd;
                },
              },
              {
                key: "partEnd",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].end
                    : this.fragmentEnd;
                },
              },
              {
                key: "fragmentEnd",
                get: function () {
                  var t;
                  return null != (t = this.fragments) && t.length
                    ? this.fragments[this.fragments.length - 1].end
                    : 0;
                },
              },
              {
                key: "age",
                get: function () {
                  return this.advancedDateTime
                    ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3
                    : 0;
                },
              },
              {
                key: "lastPartIndex",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].index
                    : -1;
                },
              },
              {
                key: "lastPartSn",
                get: function () {
                  var t;
                  return null != (t = this.partList) && t.length
                    ? this.partList[this.partList.length - 1].fragment.sn
                    : this.endSN;
                },
              },
            ]),
            t
          );
        })();
      function V(t) {
        return Uint8Array.from(atob(t), function (t) {
          return t.charCodeAt(0);
        });
      }
      function Y(t) {
        var e,
          r,
          i = t.split(":"),
          n = null;
        if ("data" === i[0] && 2 === i.length) {
          var a = i[1].split(";"),
            s = a[a.length - 1].split(",");
          if (2 === s.length) {
            var o = "base64" === s[0],
              l = s[1];
            o
              ? (a.splice(-1, 1), (n = V(l)))
              : ((e = W(l).subarray(0, 16)),
                (r = new Uint8Array(16)).set(e, 16 - e.length),
                (n = r));
          }
        }
        return n;
      }
      function W(t) {
        return Uint8Array.from(unescape(encodeURIComponent(t)), function (t) {
          return t.charCodeAt(0);
        });
      }
      var j = {
          CLEARKEY: "org.w3.clearkey",
          FAIRPLAY: "com.apple.fps",
          PLAYREADY: "com.microsoft.playready",
          WIDEVINE: "com.widevine.alpha",
        },
        q = "org.w3.clearkey",
        X = "com.apple.streamingkeydelivery",
        z = "com.microsoft.playready",
        Q = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
      function $(t) {
        switch (t) {
          case X:
            return j.FAIRPLAY;
          case z:
            return j.PLAYREADY;
          case Q:
            return j.WIDEVINE;
          case q:
            return j.CLEARKEY;
        }
      }
      var J = "edef8ba979d64acea3c827dcd51d21ed";
      function Z(t) {
        switch (t) {
          case j.FAIRPLAY:
            return X;
          case j.PLAYREADY:
            return z;
          case j.WIDEVINE:
            return Q;
          case j.CLEARKEY:
            return q;
        }
      }
      function tt(t) {
        var e = t.drmSystems,
          r = t.widevineLicenseUrl,
          i = e
            ? [j.FAIRPLAY, j.WIDEVINE, j.PLAYREADY, j.CLEARKEY].filter(
                function (t) {
                  return !!e[t];
                }
              )
            : [];
        return !i[j.WIDEVINE] && r && i.push(j.WIDEVINE), i;
      }
      var et =
        "undefined" != typeof self &&
        self.navigator &&
        self.navigator.requestMediaKeySystemAccess
          ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator)
          : null;
      function rt(t, e, r) {
        return Uint8Array.prototype.slice
          ? t.slice(e, r)
          : new Uint8Array(Array.prototype.slice.call(t, e, r));
      }
      var it,
        nt = function (t, e) {
          return (
            e + 10 <= t.length &&
            73 === t[e] &&
            68 === t[e + 1] &&
            51 === t[e + 2] &&
            t[e + 3] < 255 &&
            t[e + 4] < 255 &&
            t[e + 6] < 128 &&
            t[e + 7] < 128 &&
            t[e + 8] < 128 &&
            t[e + 9] < 128
          );
        },
        at = function (t, e) {
          return (
            e + 10 <= t.length &&
            51 === t[e] &&
            68 === t[e + 1] &&
            73 === t[e + 2] &&
            t[e + 3] < 255 &&
            t[e + 4] < 255 &&
            t[e + 6] < 128 &&
            t[e + 7] < 128 &&
            t[e + 8] < 128 &&
            t[e + 9] < 128
          );
        },
        st = function (t, e) {
          for (var r = e, i = 0; nt(t, e); )
            (i += 10),
              (i += ot(t, e + 6)),
              at(t, e + 10) && (i += 10),
              (e += i);
          if (i > 0) return t.subarray(r, r + i);
        },
        ot = function (t, e) {
          var r = 0;
          return (
            (r = (127 & t[e]) << 21),
            (r |= (127 & t[e + 1]) << 14),
            (r |= (127 & t[e + 2]) << 7),
            (r |= 127 & t[e + 3])
          );
        },
        lt = function (t, e) {
          return nt(t, e) && ot(t, e + 6) + 10 <= t.length - e;
        },
        ut = function (t) {
          return (
            t &&
            "PRIV" === t.key &&
            "com.apple.streaming.transportStreamTimestamp" === t.info
          );
        },
        ht = function (t) {
          var e = String.fromCharCode(t[0], t[1], t[2], t[3]),
            r = ot(t, 4);
          return { type: e, size: r, data: t.subarray(10, 10 + r) };
        },
        dt = function (t) {
          for (var e = 0, r = []; nt(t, e); ) {
            for (var i = ot(t, e + 6), n = (e += 10) + i; e + 8 < n; ) {
              var a = ht(t.subarray(e)),
                s = ct(a);
              s && r.push(s), (e += a.size + 10);
            }
            at(t, e) && (e += 10);
          }
          return r;
        },
        ct = function (t) {
          return "PRIV" === t.type ? ft(t) : "W" === t.type[0] ? vt(t) : gt(t);
        },
        ft = function (t) {
          if (!(t.size < 2)) {
            var e = pt(t.data, !0),
              r = new Uint8Array(t.data.subarray(e.length + 1));
            return { key: t.type, info: e, data: r.buffer };
          }
        },
        gt = function (t) {
          if (!(t.size < 2)) {
            if ("TXXX" === t.type) {
              var e = 1,
                r = pt(t.data.subarray(e), !0);
              e += r.length + 1;
              var i = pt(t.data.subarray(e));
              return { key: t.type, info: r, data: i };
            }
            var n = pt(t.data.subarray(1));
            return { key: t.type, data: n };
          }
        },
        vt = function (t) {
          if ("WXXX" === t.type) {
            if (t.size < 2) return;
            var e = 1,
              r = pt(t.data.subarray(e), !0);
            e += r.length + 1;
            var i = pt(t.data.subarray(e));
            return { key: t.type, info: r, data: i };
          }
          var n = pt(t.data);
          return { key: t.type, data: n };
        },
        mt = function (t) {
          if (8 === t.data.byteLength) {
            var e = new Uint8Array(t.data),
              r = 1 & e[3],
              i = (e[4] << 23) + (e[5] << 15) + (e[6] << 7) + e[7];
            return (i /= 45), r && (i += 47721858.84), Math.round(i);
          }
        },
        pt = function (t, e) {
          void 0 === e && (e = !1);
          var r = yt();
          if (r) {
            var i = r.decode(t);
            if (e) {
              var n = i.indexOf("\0");
              return -1 !== n ? i.substring(0, n) : i;
            }
            return i.replace(/\0/g, "");
          }
          for (var a, s, o, l = t.length, u = "", h = 0; h < l; ) {
            if (0 === (a = t[h++]) && e) return u;
            if (0 !== a && 3 !== a)
              switch (a >> 4) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                  u += String.fromCharCode(a);
                  break;
                case 12:
                case 13:
                  (s = t[h++]),
                    (u += String.fromCharCode(((31 & a) << 6) | (63 & s)));
                  break;
                case 14:
                  (s = t[h++]),
                    (o = t[h++]),
                    (u += String.fromCharCode(
                      ((15 & a) << 12) | ((63 & s) << 6) | ((63 & o) << 0)
                    ));
              }
          }
          return u;
        };
      function yt() {
        return (
          it ||
            void 0 === self.TextDecoder ||
            (it = new self.TextDecoder("utf-8")),
          it
        );
      }
      var Tt = function (t) {
          for (var e = "", r = 0; r < t.length; r++) {
            var i = t[r].toString(16);
            i.length < 2 && (i = "0" + i), (e += i);
          }
          return e;
        },
        Et = Math.pow(2, 32) - 1,
        St = [].push,
        Lt = { video: 1, audio: 2, id3: 3, text: 4 };
      function Rt(t) {
        return String.fromCharCode.apply(null, t);
      }
      function At(t, e) {
        var r = (t[e] << 8) | t[e + 1];
        return r < 0 ? 65536 + r : r;
      }
      function kt(t, e) {
        var r = bt(t, e);
        return r < 0 ? 4294967296 + r : r;
      }
      function bt(t, e) {
        return (t[e] << 24) | (t[e + 1] << 16) | (t[e + 2] << 8) | t[e + 3];
      }
      function Dt(t, e, r) {
        (t[e] = r >> 24),
          (t[e + 1] = (r >> 16) & 255),
          (t[e + 2] = (r >> 8) & 255),
          (t[e + 3] = 255 & r);
      }
      function It(t, e) {
        var r = [];
        if (!e.length) return r;
        for (var i = t.byteLength, n = 0; n < i; ) {
          var a = kt(t, n),
            s = a > 1 ? n + a : i;
          if (Rt(t.subarray(n + 4, n + 8)) === e[0])
            if (1 === e.length) r.push(t.subarray(n + 8, s));
            else {
              var o = It(t.subarray(n + 8, s), e.slice(1));
              o.length && St.apply(r, o);
            }
          n = s;
        }
        return r;
      }
      function wt(t) {
        var e = [],
          r = t[0],
          i = 8,
          n = kt(t, i);
        (i += 4), (i += 0 === r ? 8 : 16), (i += 2);
        var a = t.length + 0,
          s = At(t, i);
        i += 2;
        for (var o = 0; o < s; o++) {
          var l = i,
            u = kt(t, l);
          l += 4;
          var h = 2147483647 & u;
          if (1 == (2147483648 & u) >>> 31)
            return (
              w.warn("SIDX has hierarchical references (not supported)"), null
            );
          var d = kt(t, l);
          (l += 4),
            e.push({
              referenceSize: h,
              subsegmentDuration: d,
              info: { duration: d / n, start: a, end: a + h - 1 },
            }),
            (a += h),
            (i = l += 4);
        }
        return {
          earliestPresentationTime: 0,
          timescale: n,
          version: r,
          referencesCount: s,
          references: e,
        };
      }
      function Ct(t) {
        for (
          var e = [], r = It(t, ["moov", "trak"]), i = 0;
          i < r.length;
          i++
        ) {
          var n = r[i],
            a = It(n, ["tkhd"])[0];
          if (a) {
            var s = a[0],
              o = 0 === s ? 12 : 20,
              l = kt(a, o),
              u = It(n, ["mdia", "mdhd"])[0];
            if (u) {
              var h = kt(u, (o = 0 === (s = u[0]) ? 12 : 20)),
                d = It(n, ["mdia", "hdlr"])[0];
              if (d) {
                var c = Rt(d.subarray(8, 12)),
                  f = { soun: O, vide: N }[c];
                if (f) {
                  var g = It(n, ["mdia", "minf", "stbl", "stsd"])[0],
                    v = void 0;
                  g && (v = Rt(g.subarray(12, 16))),
                    (e[l] = { timescale: h, type: f }),
                    (e[f] = { timescale: h, id: l, codec: v });
                }
              }
            }
          }
        }
        return (
          It(t, ["moov", "mvex", "trex"]).forEach(function (t) {
            var r = kt(t, 4),
              i = e[r];
            i && (i.default = { duration: kt(t, 12), flags: kt(t, 20) });
          }),
          e
        );
      }
      function _t(t) {
        var e = It(t, ["schm"])[0];
        if (e) {
          var r = Rt(e.subarray(4, 8));
          if ("cbcs" === r || "cenc" === r) return It(t, ["schi", "tenc"])[0];
        }
        return w.error("[eme] missing 'schm' box"), null;
      }
      function Pt(t) {
        var e = kt(t, 0),
          r = 8;
        1 & e && (r += 4), 4 & e && (r += 4);
        for (var i = 0, n = kt(t, 4), a = 0; a < n; a++)
          256 & e && ((i += kt(t, r)), (r += 4)),
            512 & e && (r += 4),
            1024 & e && (r += 4),
            2048 & e && (r += 4);
        return i;
      }
      function xt(t, e) {
        var r = new Uint8Array(t.length + e.length);
        return r.set(t), r.set(e, t.length), r;
      }
      function Ft(t, e) {
        var r = [],
          i = e.samples,
          n = e.timescale,
          a = e.id,
          s = !1;
        return (
          It(i, ["moof"]).map(function (o) {
            var l = o.byteOffset - 8;
            It(o, ["traf"]).map(function (o) {
              var u = It(o, ["tfdt"]).map(function (t) {
                var e = t[0],
                  r = kt(t, 4);
                return (
                  1 === e && ((r *= Math.pow(2, 32)), (r += kt(t, 8))), r / n
                );
              })[0];
              return (
                void 0 !== u && (t = u),
                It(o, ["tfhd"]).map(function (u) {
                  var h = kt(u, 4),
                    d = 16777215 & kt(u, 0),
                    c = 0,
                    f = 0 != (16 & d),
                    g = 0,
                    v = 0 != (32 & d),
                    m = 8;
                  h === a &&
                    (0 != (1 & d) && (m += 8),
                    0 != (2 & d) && (m += 4),
                    0 != (8 & d) && ((c = kt(u, m)), (m += 4)),
                    f && ((g = kt(u, m)), (m += 4)),
                    v && (m += 4),
                    "video" === e.type &&
                      (s = (function (t) {
                        if (!t) return !1;
                        var e = t.indexOf("."),
                          r = e < 0 ? t : t.substring(0, e);
                        return (
                          "hvc1" === r ||
                          "hev1" === r ||
                          "dvh1" === r ||
                          "dvhe" === r
                        );
                      })(e.codec)),
                    It(o, ["trun"]).map(function (a) {
                      var o = a[0],
                        u = 16777215 & kt(a, 0),
                        h = 0 != (1 & u),
                        d = 0,
                        f = 0 != (4 & u),
                        v = 0 != (256 & u),
                        m = 0,
                        p = 0 != (512 & u),
                        y = 0,
                        T = 0 != (1024 & u),
                        E = 0 != (2048 & u),
                        S = 0,
                        L = kt(a, 4),
                        R = 8;
                      h && ((d = kt(a, R)), (R += 4)), f && (R += 4);
                      for (var A = d + l, k = 0; k < L; k++) {
                        if (
                          (v ? ((m = kt(a, R)), (R += 4)) : (m = c),
                          p ? ((y = kt(a, R)), (R += 4)) : (y = g),
                          T && (R += 4),
                          E && ((S = 0 === o ? kt(a, R) : bt(a, R)), (R += 4)),
                          e.type === N)
                        )
                          for (var b = 0; b < y; ) {
                            var D = kt(i, A);
                            Mt(s, i[(A += 4)]) &&
                              Ot(i.subarray(A, A + D), s ? 2 : 1, t + S / n, r),
                              (A += D),
                              (b += D + 4);
                          }
                        t += m / n;
                      }
                    }));
                })
              );
            });
          }),
          r
        );
      }
      function Mt(t, e) {
        if (t) {
          var r = (e >> 1) & 63;
          return 39 === r || 40 === r;
        }
        return 6 == (31 & e);
      }
      function Ot(t, e, r, i) {
        var n = Nt(t),
          a = 0;
        a += e;
        for (var s = 0, o = 0, l = !1, u = 0; a < n.length; ) {
          s = 0;
          do {
            if (a >= n.length) break;
            s += u = n[a++];
          } while (255 === u);
          o = 0;
          do {
            if (a >= n.length) break;
            o += u = n[a++];
          } while (255 === u);
          var h = n.length - a;
          if (!l && 4 === s && a < n.length) {
            if (((l = !0), 181 === n[a++])) {
              var d = At(n, a);
              if (((a += 2), 49 === d)) {
                var c = kt(n, a);
                if (((a += 4), 1195456820 === c)) {
                  var f = n[a++];
                  if (3 === f) {
                    var g = n[a++],
                      v = 64 & g,
                      m = v ? 2 + 3 * (31 & g) : 0,
                      p = new Uint8Array(m);
                    if (v) {
                      p[0] = g;
                      for (var y = 1; y < m; y++) p[y] = n[a++];
                    }
                    i.push({ type: f, payloadType: s, pts: r, bytes: p });
                  }
                }
              }
            }
          } else if (5 === s && o < h) {
            if (((l = !0), o > 16)) {
              for (var T = [], E = 0; E < 16; E++) {
                var S = n[a++].toString(16);
                T.push(1 == S.length ? "0" + S : S),
                  (3 !== E && 5 !== E && 7 !== E && 9 !== E) || T.push("-");
              }
              for (var L = o - 16, R = new Uint8Array(L), A = 0; A < L; A++)
                R[A] = n[a++];
              i.push({
                payloadType: s,
                pts: r,
                uuid: T.join(""),
                userData: pt(R),
                userDataBytes: R,
              });
            }
          } else if (o < h) a += o;
          else if (o > h) break;
        }
      }
      function Nt(t) {
        for (var e = t.byteLength, r = [], i = 1; i < e - 2; )
          0 === t[i] && 0 === t[i + 1] && 3 === t[i + 2]
            ? (r.push(i + 2), (i += 2))
            : i++;
        if (0 === r.length) return t;
        var n = e - r.length,
          a = new Uint8Array(n),
          s = 0;
        for (i = 0; i < n; s++, i++)
          s === r[0] && (s++, r.shift()), (a[i] = t[s]);
        return a;
      }
      function Ut(t, e, r) {
        if (16 !== t.byteLength) throw new RangeError("Invalid system id");
        var i, n, a;
        if (e) {
          (i = 1), (n = new Uint8Array(16 * e.length));
          for (var s = 0; s < e.length; s++) {
            var o = e[s];
            if (16 !== o.byteLength) throw new RangeError("Invalid key");
            n.set(o, 16 * s);
          }
        } else (i = 0), (n = new Uint8Array());
        i > 0
          ? ((a = new Uint8Array(4)),
            e.length > 0 && new DataView(a.buffer).setUint32(0, e.length, !1))
          : (a = new Uint8Array());
        var l = new Uint8Array(4);
        return (
          r &&
            r.byteLength > 0 &&
            new DataView(l.buffer).setUint32(0, r.byteLength, !1),
          (function (t) {
            for (
              var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1;
              i < e;
              i++
            )
              r[i - 1] = arguments[i];
            for (var n = r.length, a = 8, s = n; s--; ) a += r[s].byteLength;
            var o = new Uint8Array(a);
            for (
              o[0] = (a >> 24) & 255,
                o[1] = (a >> 16) & 255,
                o[2] = (a >> 8) & 255,
                o[3] = 255 & a,
                o.set(t, 4),
                s = 0,
                a = 8;
              s < n;
              s++
            )
              o.set(r[s], a), (a += r[s].byteLength);
            return o;
          })(
            [112, 115, 115, 104],
            new Uint8Array([i, 0, 0, 0]),
            t,
            a,
            n,
            l,
            r || new Uint8Array()
          )
        );
      }
      var Bt = {},
        Gt = (function () {
          function t(t, e, r, i, n) {
            void 0 === i && (i = [1]),
              void 0 === n && (n = null),
              (this.uri = void 0),
              (this.method = void 0),
              (this.keyFormat = void 0),
              (this.keyFormatVersions = void 0),
              (this.encrypted = void 0),
              (this.isCommonEncryption = void 0),
              (this.iv = null),
              (this.key = null),
              (this.keyId = null),
              (this.pssh = null),
              (this.method = t),
              (this.uri = e),
              (this.keyFormat = r),
              (this.keyFormatVersions = i),
              (this.iv = n),
              (this.encrypted = !!t && "NONE" !== t),
              (this.isCommonEncryption = this.encrypted && "AES-128" !== t);
          }
          t.clearKeyUriToKeyIdMap = function () {
            Bt = {};
          };
          var e = t.prototype;
          return (
            (e.isSupported = function () {
              if (this.method) {
                if ("AES-128" === this.method || "NONE" === this.method)
                  return !0;
                if ("identity" === this.keyFormat)
                  return "SAMPLE-AES" === this.method;
                switch (this.keyFormat) {
                  case X:
                  case Q:
                  case z:
                  case q:
                    return (
                      -1 !==
                      [
                        "ISO-23001-7",
                        "SAMPLE-AES",
                        "SAMPLE-AES-CENC",
                        "SAMPLE-AES-CTR",
                      ].indexOf(this.method)
                    );
                }
              }
              return !1;
            }),
            (e.getDecryptData = function (e) {
              if (!this.encrypted || !this.uri) return null;
              if ("AES-128" === this.method && this.uri && !this.iv) {
                "number" != typeof e &&
                  ("AES-128" !== this.method ||
                    this.iv ||
                    w.warn(
                      'missing IV for initialization segment with method="' +
                        this.method +
                        '" - compliance issue'
                    ),
                  (e = 0));
                var r = (function (t) {
                  for (var e = new Uint8Array(16), r = 12; r < 16; r++)
                    e[r] = (t >> (8 * (15 - r))) & 255;
                  return e;
                })(e);
                return new t(
                  this.method,
                  this.uri,
                  "identity",
                  this.keyFormatVersions,
                  r
                );
              }
              var i = Y(this.uri);
              if (i)
                switch (this.keyFormat) {
                  case Q:
                    (this.pssh = i),
                      i.length >= 22 &&
                        (this.keyId = i.subarray(i.length - 22, i.length - 6));
                    break;
                  case z:
                    var n = new Uint8Array([
                      154, 4, 240, 121, 152, 64, 66, 134, 171, 146, 230, 91,
                      224, 136, 95, 149,
                    ]);
                    this.pssh = Ut(n, null, i);
                    var a = new Uint16Array(
                        i.buffer,
                        i.byteOffset,
                        i.byteLength / 2
                      ),
                      s = String.fromCharCode.apply(null, Array.from(a)),
                      o = s.substring(s.indexOf("<"), s.length),
                      l = new DOMParser()
                        .parseFromString(o, "text/xml")
                        .getElementsByTagName("KID")[0];
                    if (l) {
                      var u = l.childNodes[0]
                        ? l.childNodes[0].nodeValue
                        : l.getAttribute("VALUE");
                      if (u) {
                        var h = V(u).subarray(0, 16);
                        !(function (t) {
                          var e = function (t, e, r) {
                            var i = t[e];
                            (t[e] = t[r]), (t[r] = i);
                          };
                          e(t, 0, 3), e(t, 1, 2), e(t, 4, 5), e(t, 6, 7);
                        })(h),
                          (this.keyId = h);
                      }
                    }
                    break;
                  default:
                    var d = i.subarray(0, 16);
                    if (16 !== d.length) {
                      var c = new Uint8Array(16);
                      c.set(d, 16 - d.length), (d = c);
                    }
                    this.keyId = d;
                }
              if (!this.keyId || 16 !== this.keyId.byteLength) {
                var f = Bt[this.uri];
                if (!f) {
                  var g = Object.keys(Bt).length % Number.MAX_SAFE_INTEGER;
                  (f = new Uint8Array(16)),
                    new DataView(f.buffer, 12, 4).setUint32(0, g),
                    (Bt[this.uri] = f);
                }
                this.keyId = f;
              }
              return this;
            }),
            t
          );
        })(),
        Kt = /\{\$([a-zA-Z0-9-_]+)\}/g;
      function Ht(t) {
        return Kt.test(t);
      }
      function Vt(t, e, r) {
        if (null !== t.variableList || t.hasVariableRefs)
          for (var i = r.length; i--; ) {
            var n = r[i],
              a = e[n];
            a && (e[n] = Yt(t, a));
          }
      }
      function Yt(t, e) {
        if (null !== t.variableList || t.hasVariableRefs) {
          var r = t.variableList;
          return e.replace(Kt, function (e) {
            var i = e.substring(2, e.length - 1),
              n = null == r ? void 0 : r[i];
            return void 0 === n
              ? (t.playlistParsingError ||
                  (t.playlistParsingError = new Error(
                    'Missing preceding EXT-X-DEFINE tag for Variable Reference: "' +
                      i +
                      '"'
                  )),
                e)
              : n;
          });
        }
        return e;
      }
      function Wt(t, e, r) {
        var i,
          n,
          a = t.variableList;
        if ((a || (t.variableList = a = {}), "QUERYPARAM" in e)) {
          i = e.QUERYPARAM;
          try {
            var s = new self.URL(r).searchParams;
            if (!s.has(i))
              throw new Error(
                '"' +
                  i +
                  '" does not match any query parameter in URI: "' +
                  r +
                  '"'
              );
            n = s.get(i);
          } catch (e) {
            t.playlistParsingError ||
              (t.playlistParsingError = new Error(
                "EXT-X-DEFINE QUERYPARAM: " + e.message
              ));
          }
        } else (i = e.NAME), (n = e.VALUE);
        i in a
          ? t.playlistParsingError ||
            (t.playlistParsingError = new Error(
              'EXT-X-DEFINE duplicate Variable Name declarations: "' + i + '"'
            ))
          : (a[i] = n || "");
      }
      function jt(t, e, r) {
        var i = e.IMPORT;
        if (r && i in r) {
          var n = t.variableList;
          n || (t.variableList = n = {}), (n[i] = r[i]);
        } else
          t.playlistParsingError ||
            (t.playlistParsingError = new Error(
              'EXT-X-DEFINE IMPORT attribute not found in Multivariant Playlist: "' +
                i +
                '"'
            ));
      }
      function qt() {
        if ("undefined" != typeof self)
          return self.MediaSource || self.WebKitMediaSource;
      }
      var Xt = {
          audio: {
            a3ds: !0,
            "ac-3": !0,
            "ac-4": !0,
            alac: !0,
            alaw: !0,
            dra1: !0,
            "dts+": !0,
            "dts-": !0,
            dtsc: !0,
            dtse: !0,
            dtsh: !0,
            "ec-3": !0,
            enca: !0,
            g719: !0,
            g726: !0,
            m4ae: !0,
            mha1: !0,
            mha2: !0,
            mhm1: !0,
            mhm2: !0,
            mlpa: !0,
            mp4a: !0,
            "raw ": !0,
            Opus: !0,
            opus: !0,
            samr: !0,
            sawb: !0,
            sawp: !0,
            sevc: !0,
            sqcp: !0,
            ssmv: !0,
            twos: !0,
            ulaw: !0,
          },
          video: {
            avc1: !0,
            avc2: !0,
            avc3: !0,
            avc4: !0,
            avcp: !0,
            av01: !0,
            drac: !0,
            dva1: !0,
            dvav: !0,
            dvh1: !0,
            dvhe: !0,
            encv: !0,
            hev1: !0,
            hvc1: !0,
            mjp2: !0,
            mp4v: !0,
            mvc1: !0,
            mvc2: !0,
            mvc3: !0,
            mvc4: !0,
            resv: !0,
            rv60: !0,
            s263: !0,
            svc1: !0,
            svc2: !0,
            "vc-1": !0,
            vp08: !0,
            vp09: !0,
          },
          text: { stpp: !0, wvtt: !0 },
        },
        zt = qt();
      function Qt(t, e) {
        var r;
        return (
          null !=
            (r =
              null == zt
                ? void 0
                : zt.isTypeSupported(
                    (e || "video") + '/mp4;codecs="' + t + '"'
                  )) && r
        );
      }
      var $t =
          /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g,
        Jt = /#EXT-X-MEDIA:(.*)/g,
        Zt = /^#EXT(?:INF|-X-TARGETDURATION):/m,
        te = new RegExp(
          [
            /#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source,
            /(?!#) *(\S[\S ]*)/.source,
            /#EXT-X-BYTERANGE:*(.+)/.source,
            /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source,
            /#.*/.source,
          ].join("|"),
          "g"
        ),
        ee = new RegExp(
          [
            /#(EXTM3U)/.source,
            /#EXT-X-(DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/
              .source,
            /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/
              .source,
            /#EXT-X-(DISCONTINUITY|ENDLIST|GAP)/.source,
            /(#)([^:]*):(.*)/.source,
            /(#)(.*)(?:.*)\r?\n?/.source,
          ].join("|")
        ),
        re = (function () {
          function t() {}
          return (
            (t.findGroup = function (t, e) {
              for (var r = 0; r < t.length; r++) {
                var i = t[r];
                if (i.id === e) return i;
              }
            }),
            (t.convertAVC1ToAVCOTI = function (t) {
              var e = t.split(".");
              if (e.length > 2) {
                var r = e.shift() + ".";
                return (
                  (r += parseInt(e.shift()).toString(16)),
                  (r += ("000" + parseInt(e.shift()).toString(16)).slice(-4))
                );
              }
              return t;
            }),
            (t.resolve = function (t, e) {
              return T.buildAbsoluteURL(e, t, { alwaysNormalize: !0 });
            }),
            (t.isMediaPlaylist = function (t) {
              return Zt.test(t);
            }),
            (t.parseMasterPlaylist = function (e, r) {
              var i,
                n = {
                  contentSteering: null,
                  levels: [],
                  playlistParsingError: null,
                  sessionData: null,
                  sessionKeys: null,
                  startTimeOffset: null,
                  variableList: null,
                  hasVariableRefs: Ht(e),
                },
                a = [];
              for ($t.lastIndex = 0; null != (i = $t.exec(e)); )
                if (i[1]) {
                  var s,
                    o = new P(i[1]);
                  Vt(n, o, [
                    "CODECS",
                    "SUPPLEMENTAL-CODECS",
                    "ALLOWED-CPC",
                    "PATHWAY-ID",
                    "STABLE-VARIANT-ID",
                    "AUDIO",
                    "VIDEO",
                    "SUBTITLES",
                    "CLOSED-CAPTIONS",
                    "NAME",
                  ]);
                  var l = Yt(n, i[2]),
                    u = {
                      attrs: o,
                      bitrate:
                        o.decimalInteger("AVERAGE-BANDWIDTH") ||
                        o.decimalInteger("BANDWIDTH"),
                      name: o.NAME,
                      url: t.resolve(l, r),
                    },
                    h = o.decimalResolution("RESOLUTION");
                  h && ((u.width = h.width), (u.height = h.height)),
                    ae(
                      (o.CODECS || "").split(/[ ,]+/).filter(function (t) {
                        return t;
                      }),
                      u
                    ),
                    u.videoCodec &&
                      -1 !== u.videoCodec.indexOf("avc1") &&
                      (u.videoCodec = t.convertAVC1ToAVCOTI(u.videoCodec)),
                    (null != (s = u.unknownCodecs) && s.length) || a.push(u),
                    n.levels.push(u);
                } else if (i[3]) {
                  var d = i[3],
                    c = i[4];
                  switch (d) {
                    case "SESSION-DATA":
                      var f = new P(c);
                      Vt(n, f, ["DATA-ID", "LANGUAGE", "VALUE", "URI"]);
                      var g = f["DATA-ID"];
                      g &&
                        (null === n.sessionData && (n.sessionData = {}),
                        (n.sessionData[g] = f));
                      break;
                    case "SESSION-KEY":
                      var v = ie(c, r, n);
                      v.encrypted && v.isSupported()
                        ? (null === n.sessionKeys && (n.sessionKeys = []),
                          n.sessionKeys.push(v))
                        : w.warn(
                            '[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "' +
                              c +
                              '"'
                          );
                      break;
                    case "DEFINE":
                      var m = new P(c);
                      Vt(n, m, ["NAME", "VALUE", "QUERYPARAM"]), Wt(n, m, r);
                      break;
                    case "CONTENT-STEERING":
                      var p = new P(c);
                      Vt(n, p, ["SERVER-URI", "PATHWAY-ID"]),
                        (n.contentSteering = {
                          uri: t.resolve(p["SERVER-URI"], r),
                          pathwayId: p["PATHWAY-ID"] || ".",
                        });
                      break;
                    case "START":
                      n.startTimeOffset = ne(c);
                  }
                }
              var y = a.length > 0 && a.length < n.levels.length;
              return (
                (n.levels = y ? a : n.levels),
                0 === n.levels.length &&
                  (n.playlistParsingError = new Error(
                    "no levels found in manifest"
                  )),
                n
              );
            }),
            (t.parseMasterPlaylistMedia = function (e, r, i) {
              var n,
                a = {},
                s = i.levels,
                o = {
                  AUDIO: s.map(function (t) {
                    return { id: t.attrs.AUDIO, audioCodec: t.audioCodec };
                  }),
                  SUBTITLES: s.map(function (t) {
                    return { id: t.attrs.SUBTITLES, textCodec: t.textCodec };
                  }),
                  "CLOSED-CAPTIONS": [],
                },
                l = 0;
              for (Jt.lastIndex = 0; null !== (n = Jt.exec(e)); ) {
                var u = new P(n[1]),
                  h = u.TYPE;
                if (h) {
                  var d = o[h],
                    c = a[h] || [];
                  (a[h] = c),
                    Vt(i, u, [
                      "URI",
                      "GROUP-ID",
                      "LANGUAGE",
                      "ASSOC-LANGUAGE",
                      "STABLE-RENDITION-ID",
                      "NAME",
                      "INSTREAM-ID",
                      "CHARACTERISTICS",
                      "CHANNELS",
                    ]);
                  var f = {
                    attrs: u,
                    bitrate: 0,
                    id: l++,
                    groupId: u["GROUP-ID"] || "",
                    instreamId: u["INSTREAM-ID"],
                    name: u.NAME || u.LANGUAGE || "",
                    type: h,
                    default: u.bool("DEFAULT"),
                    autoselect: u.bool("AUTOSELECT"),
                    forced: u.bool("FORCED"),
                    lang: u.LANGUAGE,
                    url: u.URI ? t.resolve(u.URI, r) : "",
                  };
                  if (null != d && d.length) {
                    var g = t.findGroup(d, f.groupId) || d[0];
                    se(f, g, "audioCodec"), se(f, g, "textCodec");
                  }
                  c.push(f);
                }
              }
              return a;
            }),
            (t.parseLevelPlaylist = function (t, e, r, i, n, a) {
              var s,
                l,
                u,
                h = new H(e),
                d = h.fragments,
                c = null,
                f = 0,
                g = 0,
                v = 0,
                m = 0,
                p = null,
                y = new G(i, e),
                T = -1,
                S = !1;
              for (
                te.lastIndex = 0, h.m3u8 = t, h.hasVariableRefs = Ht(t);
                null !== (s = te.exec(t));

              ) {
                S &&
                  ((S = !1),
                  ((y = new G(i, e)).start = v),
                  (y.sn = f),
                  (y.cc = m),
                  (y.level = r),
                  c &&
                    ((y.initSegment = c),
                    (y.rawProgramDateTime = c.rawProgramDateTime),
                    (c.rawProgramDateTime = null)));
                var L = s[1];
                if (L) {
                  y.duration = parseFloat(L);
                  var R = (" " + s[2]).slice(1);
                  (y.title = R || null),
                    y.tagList.push(R ? ["INF", L, R] : ["INF", L]);
                } else if (s[3]) {
                  if (E(y.duration)) {
                    (y.start = v),
                      u && ue(y, u, h),
                      (y.sn = f),
                      (y.level = r),
                      (y.cc = m),
                      (y.urlId = n),
                      d.push(y);
                    var A = (" " + s[3]).slice(1);
                    (y.relurl = Yt(h, A)),
                      oe(y, p),
                      (p = y),
                      (v += y.duration),
                      f++,
                      (g = 0),
                      (S = !0);
                  }
                } else if (s[4]) {
                  var k = (" " + s[4]).slice(1);
                  p ? y.setByteRange(k, p) : y.setByteRange(k);
                } else if (s[5])
                  (y.rawProgramDateTime = (" " + s[5]).slice(1)),
                    y.tagList.push(["PROGRAM-DATE-TIME", y.rawProgramDateTime]),
                    -1 === T && (T = d.length);
                else {
                  if (!(s = s[0].match(ee))) {
                    w.warn(
                      "No matches on slow regex match for level playlist!"
                    );
                    continue;
                  }
                  for (l = 1; l < s.length && void 0 === s[l]; l++);
                  var b = (" " + s[l]).slice(1),
                    D = (" " + s[l + 1]).slice(1),
                    I = s[l + 2] ? (" " + s[l + 2]).slice(1) : "";
                  switch (b) {
                    case "PLAYLIST-TYPE":
                      h.type = D.toUpperCase();
                      break;
                    case "MEDIA-SEQUENCE":
                      f = h.startSN = parseInt(D);
                      break;
                    case "SKIP":
                      var C = new P(D);
                      Vt(h, C, ["RECENTLY-REMOVED-DATERANGES"]);
                      var _ = C.decimalInteger("SKIPPED-SEGMENTS");
                      if (E(_)) {
                        h.skippedSegments = _;
                        for (var x = _; x--; ) d.unshift(null);
                        f += _;
                      }
                      var M = C.enumeratedString("RECENTLY-REMOVED-DATERANGES");
                      M && (h.recentlyRemovedDateranges = M.split("\t"));
                      break;
                    case "TARGETDURATION":
                      h.targetduration = Math.max(parseInt(D), 1);
                      break;
                    case "VERSION":
                      h.version = parseInt(D);
                      break;
                    case "EXTM3U":
                      break;
                    case "ENDLIST":
                      h.live = !1;
                      break;
                    case "#":
                      (D || I) && y.tagList.push(I ? [D, I] : [D]);
                      break;
                    case "DISCONTINUITY":
                      m++, y.tagList.push(["DIS"]);
                      break;
                    case "GAP":
                      (y.gap = !0), y.tagList.push([b]);
                      break;
                    case "BITRATE":
                      y.tagList.push([b, D]);
                      break;
                    case "DATERANGE":
                      var O = new P(D);
                      Vt(h, O, [
                        "ID",
                        "CLASS",
                        "START-DATE",
                        "END-DATE",
                        "SCTE35-CMD",
                        "SCTE35-OUT",
                        "SCTE35-IN",
                      ]),
                        Vt(h, O, O.clientAttrs);
                      var N = new F(O, h.dateRanges[O.ID]);
                      N.isValid || h.skippedSegments
                        ? (h.dateRanges[N.id] = N)
                        : w.warn('Ignoring invalid DATERANGE tag: "' + D + '"'),
                        y.tagList.push(["EXT-X-DATERANGE", D]);
                      break;
                    case "DEFINE":
                      var U = new P(D);
                      Vt(h, U, ["NAME", "VALUE", "IMPORT", "QUERYPARAM"]),
                        "IMPORT" in U ? jt(h, U, a) : Wt(h, U, e);
                      break;
                    case "DISCONTINUITY-SEQUENCE":
                      m = parseInt(D);
                      break;
                    case "KEY":
                      var B = ie(D, e, h);
                      if (B.isSupported()) {
                        if ("NONE" === B.method) {
                          u = void 0;
                          break;
                        }
                        u || (u = {}),
                          u[B.keyFormat] && (u = o({}, u)),
                          (u[B.keyFormat] = B);
                      } else
                        w.warn(
                          '[Keys] Ignoring invalid EXT-X-KEY tag: "' + D + '"'
                        );
                      break;
                    case "START":
                      h.startTimeOffset = ne(D);
                      break;
                    case "MAP":
                      var V = new P(D);
                      if ((Vt(h, V, ["BYTERANGE", "URI"]), y.duration)) {
                        var Y = new G(i, e);
                        le(Y, V, r, u),
                          (c = Y),
                          (y.initSegment = c),
                          c.rawProgramDateTime &&
                            !y.rawProgramDateTime &&
                            (y.rawProgramDateTime = c.rawProgramDateTime);
                      } else le(y, V, r, u), (c = y), (S = !0);
                      break;
                    case "SERVER-CONTROL":
                      var W = new P(D);
                      (h.canBlockReload = W.bool("CAN-BLOCK-RELOAD")),
                        (h.canSkipUntil = W.optionalFloat("CAN-SKIP-UNTIL", 0)),
                        (h.canSkipDateRanges =
                          h.canSkipUntil > 0 && W.bool("CAN-SKIP-DATERANGES")),
                        (h.partHoldBack = W.optionalFloat("PART-HOLD-BACK", 0)),
                        (h.holdBack = W.optionalFloat("HOLD-BACK", 0));
                      break;
                    case "PART-INF":
                      var j = new P(D);
                      h.partTarget = j.decimalFloatingPoint("PART-TARGET");
                      break;
                    case "PART":
                      var q = h.partList;
                      q || (q = h.partList = []);
                      var X = g > 0 ? q[q.length - 1] : void 0,
                        z = g++,
                        Q = new P(D);
                      Vt(h, Q, ["BYTERANGE", "URI"]);
                      var $ = new K(Q, y, e, z, X);
                      q.push($), (y.duration += $.duration);
                      break;
                    case "PRELOAD-HINT":
                      var J = new P(D);
                      Vt(h, J, ["URI"]), (h.preloadHint = J);
                      break;
                    case "RENDITION-REPORT":
                      var Z = new P(D);
                      Vt(h, Z, ["URI"]),
                        (h.renditionReports = h.renditionReports || []),
                        h.renditionReports.push(Z);
                      break;
                    default:
                      w.warn("line parsed but not handled: " + s);
                  }
                }
              }
              p && !p.relurl
                ? (d.pop(),
                  (v -= p.duration),
                  h.partList && (h.fragmentHint = p))
                : h.partList &&
                  (oe(y, p),
                  (y.cc = m),
                  (h.fragmentHint = y),
                  u && ue(y, u, h));
              var tt = d.length,
                et = d[0],
                rt = d[tt - 1];
              if ((v += h.skippedSegments * h.targetduration) > 0 && tt && rt) {
                h.averagetargetduration = v / tt;
                var it = rt.sn;
                (h.endSN = "initSegment" !== it ? it : 0),
                  h.live || (rt.endList = !0),
                  et && (h.startCC = et.cc);
              } else (h.endSN = 0), (h.startCC = 0);
              return (
                h.fragmentHint && (v += h.fragmentHint.duration),
                (h.totalduration = v),
                (h.endCC = m),
                T > 0 &&
                  (function (t, e) {
                    for (var r = t[e], i = e; i--; ) {
                      var n = t[i];
                      if (!n) return;
                      (n.programDateTime =
                        r.programDateTime - 1e3 * n.duration),
                        (r = n);
                    }
                  })(d, T),
                h
              );
            }),
            t
          );
        })();
      function ie(t, e, r) {
        var i,
          n,
          a = new P(t);
        Vt(r, a, ["KEYFORMAT", "KEYFORMATVERSIONS", "URI", "IV", "URI"]);
        var s = null != (i = a.METHOD) ? i : "",
          o = a.URI,
          l = a.hexadecimalInteger("IV"),
          u = a.KEYFORMATVERSIONS,
          h = null != (n = a.KEYFORMAT) ? n : "identity";
        o && a.IV && !l && w.error("Invalid IV: " + a.IV);
        var d = o ? re.resolve(o, e) : "",
          c = (u || "1").split("/").map(Number).filter(Number.isFinite);
        return new Gt(s, d, h, c, l);
      }
      function ne(t) {
        var e = new P(t).decimalFloatingPoint("TIME-OFFSET");
        return E(e) ? e : null;
      }
      function ae(t, e) {
        ["video", "audio", "text"].forEach(function (r) {
          var i = t.filter(function (t) {
            return (function (t, e) {
              var r = Xt[e];
              return !!r && !0 === r[t.slice(0, 4)];
            })(t, r);
          });
          if (i.length) {
            var n = i.filter(function (t) {
              return (
                0 === t.lastIndexOf("avc1", 0) || 0 === t.lastIndexOf("mp4a", 0)
              );
            });
            (e[r + "Codec"] = n.length > 0 ? n[0] : i[0]),
              (t = t.filter(function (t) {
                return -1 === i.indexOf(t);
              }));
          }
        }),
          (e.unknownCodecs = t);
      }
      function se(t, e, r) {
        var i = e[r];
        i && (t[r] = i);
      }
      function oe(t, e) {
        t.rawProgramDateTime
          ? (t.programDateTime = Date.parse(t.rawProgramDateTime))
          : null != e &&
            e.programDateTime &&
            (t.programDateTime = e.endProgramDateTime),
          E(t.programDateTime) ||
            ((t.programDateTime = null), (t.rawProgramDateTime = null));
      }
      function le(t, e, r, i) {
        (t.relurl = e.URI),
          e.BYTERANGE && t.setByteRange(e.BYTERANGE),
          (t.level = r),
          (t.sn = "initSegment"),
          i && (t.levelkeys = i),
          (t.initSegment = null);
      }
      function ue(t, e, r) {
        t.levelkeys = e;
        var i = r.encryptedFragments;
        (i.length && i[i.length - 1].levelkeys === e) ||
          !Object.keys(e).some(function (t) {
            return e[t].isCommonEncryption;
          }) ||
          i.push(t);
      }
      var he = "manifest",
        de = "level",
        ce = "audioTrack",
        fe = "subtitleTrack",
        ge = "main",
        ve = "audio",
        me = "subtitle";
      function pe(t) {
        switch (t.type) {
          case ce:
            return ve;
          case fe:
            return me;
          default:
            return ge;
        }
      }
      function ye(t, e) {
        var r = t.url;
        return (void 0 !== r && 0 !== r.indexOf("data:")) || (r = e.url), r;
      }
      var Te = (function () {
        function t(t) {
          (this.hls = void 0),
            (this.loaders = Object.create(null)),
            (this.variableList = null),
            (this.hls = t),
            this.registerListeners();
        }
        var e = t.prototype;
        return (
          (e.startLoad = function (t) {}),
          (e.stopLoad = function () {
            this.destroyInternalLoaders();
          }),
          (e.registerListeners = function () {
            var t = this.hls;
            t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
              t.on(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
              t.on(S.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);
          }),
          (e.unregisterListeners = function () {
            var t = this.hls;
            t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
              t.off(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
              t.off(
                S.SUBTITLE_TRACK_LOADING,
                this.onSubtitleTrackLoading,
                this
              );
          }),
          (e.createInternalLoader = function (t) {
            var e = this.hls.config,
              r = e.pLoader,
              i = e.loader,
              n = new (r || i)(e);
            return (this.loaders[t.type] = n), n;
          }),
          (e.getInternalLoader = function (t) {
            return this.loaders[t.type];
          }),
          (e.resetInternalLoader = function (t) {
            this.loaders[t] && delete this.loaders[t];
          }),
          (e.destroyInternalLoaders = function () {
            for (var t in this.loaders) {
              var e = this.loaders[t];
              e && e.destroy(), this.resetInternalLoader(t);
            }
          }),
          (e.destroy = function () {
            (this.variableList = null),
              this.unregisterListeners(),
              this.destroyInternalLoaders();
          }),
          (e.onManifestLoading = function (t, e) {
            var r = e.url;
            (this.variableList = null),
              this.load({
                id: null,
                level: 0,
                responseType: "text",
                type: he,
                url: r,
                deliveryDirectives: null,
              });
          }),
          (e.onLevelLoading = function (t, e) {
            var r = e.id,
              i = e.level,
              n = e.url,
              a = e.deliveryDirectives;
            this.load({
              id: r,
              level: i,
              responseType: "text",
              type: de,
              url: n,
              deliveryDirectives: a,
            });
          }),
          (e.onAudioTrackLoading = function (t, e) {
            var r = e.id,
              i = e.groupId,
              n = e.url,
              a = e.deliveryDirectives;
            this.load({
              id: r,
              groupId: i,
              level: null,
              responseType: "text",
              type: ce,
              url: n,
              deliveryDirectives: a,
            });
          }),
          (e.onSubtitleTrackLoading = function (t, e) {
            var r = e.id,
              i = e.groupId,
              n = e.url,
              a = e.deliveryDirectives;
            this.load({
              id: r,
              groupId: i,
              level: null,
              responseType: "text",
              type: fe,
              url: n,
              deliveryDirectives: a,
            });
          }),
          (e.load = function (t) {
            var e,
              r,
              i,
              n = this,
              a = this.hls.config,
              s = this.getInternalLoader(t);
            if (s) {
              var l = s.context;
              if (l && l.url === t.url)
                return void w.trace(
                  "[playlist-loader]: playlist request ongoing"
                );
              w.log(
                "[playlist-loader]: aborting previous loader for type: " +
                  t.type
              ),
                s.abort();
            }
            if (
              ((r =
                t.type === he
                  ? a.manifestLoadPolicy.default
                  : o({}, a.playlistLoadPolicy.default, {
                      timeoutRetry: null,
                      errorRetry: null,
                    })),
              (s = this.createInternalLoader(t)),
              null != (e = t.deliveryDirectives) &&
                e.part &&
                (t.type === de && null !== t.level
                  ? (i = this.hls.levels[t.level].details)
                  : t.type === ce && null !== t.id
                  ? (i = this.hls.audioTracks[t.id].details)
                  : t.type === fe &&
                    null !== t.id &&
                    (i = this.hls.subtitleTracks[t.id].details),
                i))
            ) {
              var u = i.partTarget,
                h = i.targetduration;
              if (u && h) {
                var d = 1e3 * Math.max(3 * u, 0.8 * h);
                r = o({}, r, {
                  maxTimeToFirstByteMs: Math.min(d, r.maxTimeToFirstByteMs),
                  maxLoadTimeMs: Math.min(d, r.maxTimeToFirstByteMs),
                });
              }
            }
            var c = r.errorRetry || r.timeoutRetry || {},
              f = {
                loadPolicy: r,
                timeout: r.maxLoadTimeMs,
                maxRetry: c.maxNumRetry || 0,
                retryDelay: c.retryDelayMs || 0,
                maxRetryDelay: c.maxRetryDelayMs || 0,
              },
              g = {
                onSuccess: function (t, e, r, i) {
                  var a = n.getInternalLoader(r);
                  n.resetInternalLoader(r.type);
                  var s = t.data;
                  0 === s.indexOf("#EXTM3U")
                    ? ((e.parsing.start = performance.now()),
                      re.isMediaPlaylist(s)
                        ? n.handleTrackOrLevelPlaylist(t, e, r, i || null, a)
                        : n.handleMasterPlaylist(t, e, r, i))
                    : n.handleManifestParsingError(
                        t,
                        r,
                        new Error("no EXTM3U delimiter"),
                        i || null,
                        e
                      );
                },
                onError: function (t, e, r, i) {
                  n.handleNetworkError(e, r, !1, t, i);
                },
                onTimeout: function (t, e, r) {
                  n.handleNetworkError(e, r, !0, void 0, t);
                },
              };
            s.load(t, f, g);
          }),
          (e.handleMasterPlaylist = function (t, e, r, i) {
            var n = this.hls,
              a = t.data,
              s = ye(t, r),
              o = re.parseMasterPlaylist(a, s);
            if (o.playlistParsingError)
              this.handleManifestParsingError(
                t,
                r,
                o.playlistParsingError,
                i,
                e
              );
            else {
              var l = o.contentSteering,
                u = o.levels,
                h = o.sessionData,
                d = o.sessionKeys,
                c = o.startTimeOffset,
                f = o.variableList;
              this.variableList = f;
              var g = re.parseMasterPlaylistMedia(a, s, o),
                v = g.AUDIO,
                m = void 0 === v ? [] : v,
                p = g.SUBTITLES,
                y = g["CLOSED-CAPTIONS"];
              m.length &&
                (m.some(function (t) {
                  return !t.url;
                }) ||
                  !u[0].audioCodec ||
                  u[0].attrs.AUDIO ||
                  (w.log(
                    "[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"
                  ),
                  m.unshift({
                    type: "main",
                    name: "main",
                    groupId: "main",
                    default: !1,
                    autoselect: !1,
                    forced: !1,
                    id: -1,
                    attrs: new P({}),
                    bitrate: 0,
                    url: "",
                  }))),
                n.trigger(S.MANIFEST_LOADED, {
                  levels: u,
                  audioTracks: m,
                  subtitles: p,
                  captions: y,
                  contentSteering: l,
                  url: s,
                  stats: e,
                  networkDetails: i,
                  sessionData: h,
                  sessionKeys: d,
                  startTimeOffset: c,
                  variableList: f,
                });
            }
          }),
          (e.handleTrackOrLevelPlaylist = function (t, e, r, i, n) {
            var a = this.hls,
              s = r.id,
              o = r.level,
              l = r.type,
              u = ye(t, r),
              h = E(s) ? s : 0,
              d = E(o) ? o : h,
              c = pe(r),
              f = re.parseLevelPlaylist(t.data, u, d, c, h, this.variableList);
            if (l === he) {
              var g = {
                attrs: new P({}),
                bitrate: 0,
                details: f,
                name: "",
                url: u,
              };
              a.trigger(S.MANIFEST_LOADED, {
                levels: [g],
                audioTracks: [],
                url: u,
                stats: e,
                networkDetails: i,
                sessionData: null,
                sessionKeys: null,
                contentSteering: null,
                startTimeOffset: null,
                variableList: null,
              });
            }
            (e.parsing.end = performance.now()),
              (r.levelDetails = f),
              this.handlePlaylistLoaded(f, t, e, r, i, n);
          }),
          (e.handleManifestParsingError = function (t, e, r, i, n) {
            this.hls.trigger(S.ERROR, {
              type: L.NETWORK_ERROR,
              details: R.MANIFEST_PARSING_ERROR,
              fatal: e.type === he,
              url: t.url,
              err: r,
              error: r,
              reason: r.message,
              response: t,
              context: e,
              networkDetails: i,
              stats: n,
            });
          }),
          (e.handleNetworkError = function (t, e, r, n, a) {
            void 0 === r && (r = !1);
            var s =
              "A network " +
              (r
                ? "timeout"
                : "error" + (n ? " (status " + n.code + ")" : "")) +
              " occurred while loading " +
              t.type;
            t.type === de
              ? (s += ": " + t.level + " id: " + t.id)
              : (t.type !== ce && t.type !== fe) ||
                (s += " id: " + t.id + ' group-id: "' + t.groupId + '"');
            var o = new Error(s);
            w.warn("[playlist-loader]: " + s);
            var l = R.UNKNOWN,
              u = !1,
              h = this.getInternalLoader(t);
            switch (t.type) {
              case he:
                (l = r ? R.MANIFEST_LOAD_TIMEOUT : R.MANIFEST_LOAD_ERROR),
                  (u = !0);
                break;
              case de:
                (l = r ? R.LEVEL_LOAD_TIMEOUT : R.LEVEL_LOAD_ERROR), (u = !1);
                break;
              case ce:
                (l = r ? R.AUDIO_TRACK_LOAD_TIMEOUT : R.AUDIO_TRACK_LOAD_ERROR),
                  (u = !1);
                break;
              case fe:
                (l = r ? R.SUBTITLE_TRACK_LOAD_TIMEOUT : R.SUBTITLE_LOAD_ERROR),
                  (u = !1);
            }
            h && this.resetInternalLoader(t.type);
            var d = {
              type: L.NETWORK_ERROR,
              details: l,
              fatal: u,
              url: t.url,
              loader: h,
              context: t,
              error: o,
              networkDetails: e,
              stats: a,
            };
            if (n) {
              var c = (null == e ? void 0 : e.url) || t.url;
              d.response = i({ url: c, data: void 0 }, n);
            }
            this.hls.trigger(S.ERROR, d);
          }),
          (e.handlePlaylistLoaded = function (t, e, r, i, n, a) {
            var s = this.hls,
              o = i.type,
              l = i.level,
              u = i.id,
              h = i.groupId,
              d = i.deliveryDirectives,
              c = ye(e, i),
              f = pe(i),
              g = "number" == typeof i.level && f === ge ? l : void 0;
            if (t.fragments.length) {
              t.targetduration ||
                (t.playlistParsingError = new Error("Missing Target Duration"));
              var v = t.playlistParsingError;
              if (v)
                s.trigger(S.ERROR, {
                  type: L.NETWORK_ERROR,
                  details: R.LEVEL_PARSING_ERROR,
                  fatal: !1,
                  url: c,
                  error: v,
                  reason: v.message,
                  response: e,
                  context: i,
                  level: g,
                  parent: f,
                  networkDetails: n,
                  stats: r,
                });
              else
                switch (
                  (t.live &&
                    a &&
                    (a.getCacheAge && (t.ageHeader = a.getCacheAge() || 0),
                    (a.getCacheAge && !isNaN(t.ageHeader)) ||
                      (t.ageHeader = 0)),
                  o)
                ) {
                  case he:
                  case de:
                    s.trigger(S.LEVEL_LOADED, {
                      details: t,
                      level: g || 0,
                      id: u || 0,
                      stats: r,
                      networkDetails: n,
                      deliveryDirectives: d,
                    });
                    break;
                  case ce:
                    s.trigger(S.AUDIO_TRACK_LOADED, {
                      details: t,
                      id: u || 0,
                      groupId: h || "",
                      stats: r,
                      networkDetails: n,
                      deliveryDirectives: d,
                    });
                    break;
                  case fe:
                    s.trigger(S.SUBTITLE_TRACK_LOADED, {
                      details: t,
                      id: u || 0,
                      groupId: h || "",
                      stats: r,
                      networkDetails: n,
                      deliveryDirectives: d,
                    });
                }
            } else {
              var m = new Error("No Segments found in Playlist");
              s.trigger(S.ERROR, {
                type: L.NETWORK_ERROR,
                details: R.LEVEL_EMPTY_ERROR,
                fatal: !1,
                url: c,
                error: m,
                reason: m.message,
                response: e,
                context: i,
                level: g,
                parent: f,
                networkDetails: n,
                stats: r,
              });
            }
          }),
          t
        );
      })();
      function Ee(t, e) {
        var r;
        try {
          r = new Event("addtrack");
        } catch (t) {
          (r = document.createEvent("Event")).initEvent("addtrack", !1, !1);
        }
        (r.track = t), e.dispatchEvent(r);
      }
      function Se(t, e) {
        var r = t.mode;
        if (
          ("disabled" === r && (t.mode = "hidden"),
          t.cues && !t.cues.getCueById(e.id))
        )
          try {
            if ((t.addCue(e), !t.cues.getCueById(e.id)))
              throw new Error("addCue is failed for: " + e);
          } catch (r) {
            w.debug("[texttrack-utils]: " + r);
            try {
              var i = new self.TextTrackCue(e.startTime, e.endTime, e.text);
              (i.id = e.id), t.addCue(i);
            } catch (t) {
              w.debug(
                "[texttrack-utils]: Legacy TextTrackCue fallback failed: " + t
              );
            }
          }
        "disabled" === r && (t.mode = r);
      }
      function Le(t) {
        var e = t.mode;
        if (("disabled" === e && (t.mode = "hidden"), t.cues))
          for (var r = t.cues.length; r--; ) t.removeCue(t.cues[r]);
        "disabled" === e && (t.mode = e);
      }
      function Re(t, e, r, i) {
        var n = t.mode;
        if (
          ("disabled" === n && (t.mode = "hidden"), t.cues && t.cues.length > 0)
        )
          for (
            var a = (function (t, e, r) {
                var i = [],
                  n = (function (t, e) {
                    if (e < t[0].startTime) return 0;
                    var r = t.length - 1;
                    if (e > t[r].endTime) return -1;
                    for (var i = 0, n = r; i <= n; ) {
                      var a = Math.floor((n + i) / 2);
                      if (e < t[a].startTime) n = a - 1;
                      else {
                        if (!(e > t[a].startTime && i < r)) return a;
                        i = a + 1;
                      }
                    }
                    return t[i].startTime - e < e - t[n].startTime ? i : n;
                  })(t, e);
                if (n > -1)
                  for (var a = n, s = t.length; a < s; a++) {
                    var o = t[a];
                    if (o.startTime >= e && o.endTime <= r) i.push(o);
                    else if (o.startTime > r) return i;
                  }
                return i;
              })(t.cues, e, r),
              s = 0;
            s < a.length;
            s++
          )
            (i && !i(a[s])) || t.removeCue(a[s]);
        "disabled" === n && (t.mode = n);
      }
      var Ae = "org.id3",
        ke = "com.apple.quicktime.HLS",
        be = "https://aomedia.org/emsg/ID3";
      function De() {
        if ("undefined" != typeof self)
          return self.WebKitDataCue || self.VTTCue || self.TextTrackCue;
      }
      var Ie = (function () {
        var t = De();
        try {
          new t(0, Number.POSITIVE_INFINITY, "");
        } catch (t) {
          return Number.MAX_VALUE;
        }
        return Number.POSITIVE_INFINITY;
      })();
      function we(t, e) {
        return t.getTime() / 1e3 - e;
      }
      var Ce = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.id3Track = null),
              (this.media = null),
              (this.dateRangeCuesAppended = {}),
              (this.hls = t),
              this._registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this._unregisterListeners(),
                (this.id3Track = null),
                (this.media = null),
                (this.dateRangeCuesAppended = {}),
                (this.hls = null);
            }),
            (e._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(
                  S.FRAG_PARSING_METADATA,
                  this.onFragParsingMetadata,
                  this
                ),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e.onMediaAttached = function (t, e) {
              this.media = e.media;
            }),
            (e.onMediaDetaching = function () {
              this.id3Track &&
                (Le(this.id3Track),
                (this.id3Track = null),
                (this.media = null),
                (this.dateRangeCuesAppended = {}));
            }),
            (e.onManifestLoading = function () {
              this.dateRangeCuesAppended = {};
            }),
            (e.createTrack = function (t) {
              var e = this.getID3Track(t.textTracks);
              return (e.mode = "hidden"), e;
            }),
            (e.getID3Track = function (t) {
              if (this.media) {
                for (var e = 0; e < t.length; e++) {
                  var r = t[e];
                  if ("metadata" === r.kind && "id3" === r.label)
                    return Ee(r, this.media), r;
                }
                return this.media.addTextTrack("metadata", "id3");
              }
            }),
            (e.onFragParsingMetadata = function (t, e) {
              if (this.media) {
                var r = this.hls.config,
                  i = r.enableEmsgMetadataCues,
                  n = r.enableID3MetadataCues;
                if (i || n) {
                  var a = e.samples;
                  this.id3Track ||
                    (this.id3Track = this.createTrack(this.media));
                  for (var s = De(), o = 0; o < a.length; o++) {
                    var l = a[o].type;
                    if ((l !== be || i) && n) {
                      var u = dt(a[o].data);
                      if (u) {
                        var h = a[o].pts,
                          d = h + a[o].duration;
                        d > Ie && (d = Ie), d - h <= 0 && (d = h + 0.25);
                        for (var c = 0; c < u.length; c++) {
                          var f = u[c];
                          if (!ut(f)) {
                            this.updateId3CueEnds(h, l);
                            var g = new s(h, d, "");
                            (g.value = f),
                              l && (g.type = l),
                              this.id3Track.addCue(g);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }),
            (e.updateId3CueEnds = function (t, e) {
              var r,
                i = null == (r = this.id3Track) ? void 0 : r.cues;
              if (i)
                for (var n = i.length; n--; ) {
                  var a = i[n];
                  a.type === e &&
                    a.startTime < t &&
                    a.endTime === Ie &&
                    (a.endTime = t);
                }
            }),
            (e.onBufferFlushing = function (t, e) {
              var r = e.startOffset,
                i = e.endOffset,
                n = e.type,
                a = this.id3Track,
                s = this.hls;
              if (s) {
                var o = s.config,
                  l = o.enableEmsgMetadataCues,
                  u = o.enableID3MetadataCues;
                a &&
                  (l || u) &&
                  Re(
                    a,
                    r,
                    i,
                    "audio" === n
                      ? function (t) {
                          return t.type === Ae && u;
                        }
                      : "video" === n
                      ? function (t) {
                          return t.type === be && l;
                        }
                      : function (t) {
                          return (t.type === Ae && u) || (t.type === be && l);
                        }
                  );
              }
            }),
            (e.onLevelUpdated = function (t, e) {
              var r = this,
                i = e.details;
              if (
                this.media &&
                i.hasProgramDateTime &&
                this.hls.config.enableDateRangeMetadataCues
              ) {
                var n = this.dateRangeCuesAppended,
                  a = this.id3Track,
                  s = i.dateRanges,
                  o = Object.keys(s);
                if (a)
                  for (
                    var l = Object.keys(n).filter(function (t) {
                        return !o.includes(t);
                      }),
                      u = function () {
                        var t = l[h];
                        Object.keys(n[t].cues).forEach(function (e) {
                          a.removeCue(n[t].cues[e]);
                        }),
                          delete n[t];
                      },
                      h = l.length;
                    h--;

                  )
                    u();
                var d = i.fragments[i.fragments.length - 1];
                if (
                  0 !== o.length &&
                  E(null == d ? void 0 : d.programDateTime)
                ) {
                  this.id3Track ||
                    (this.id3Track = this.createTrack(this.media));
                  for (
                    var c = d.programDateTime / 1e3 - d.start,
                      f = De(),
                      g = function () {
                        var t = o[v],
                          e = s[t],
                          i = n[t],
                          a = (null == i ? void 0 : i.cues) || {},
                          l = (null == i ? void 0 : i.durationKnown) || !1,
                          u = we(e.startDate, c),
                          h = Ie,
                          d = e.endDate;
                        if (d) (h = we(d, c)), (l = !0);
                        else if (e.endOnNext && !l) {
                          var g = o
                            .reduce(function (t, r) {
                              var i = s[r];
                              return (
                                i.class === e.class &&
                                  i.id !== r &&
                                  i.startDate > e.startDate &&
                                  t.push(i),
                                t
                              );
                            }, [])
                            .sort(function (t, e) {
                              return (
                                t.startDate.getTime() - e.startDate.getTime()
                              );
                            })[0];
                          g && ((h = we(g.startDate, c)), (l = !0));
                        }
                        for (
                          var m, p, y = Object.keys(e.attr), T = 0;
                          T < y.length;
                          T++
                        ) {
                          var E = y[T];
                          if (
                            "ID" !== (p = E) &&
                            "CLASS" !== p &&
                            "START-DATE" !== p &&
                            "DURATION" !== p &&
                            "END-DATE" !== p &&
                            "END-ON-NEXT" !== p
                          ) {
                            var S = a[E];
                            if (S) l && !i.durationKnown && (S.endTime = h);
                            else {
                              var L = e.attr[E];
                              (S = new f(u, h, "")),
                                x(E) &&
                                  ((m = L),
                                  (L = Uint8Array.from(
                                    m
                                      .replace(/^0x/, "")
                                      .replace(/([\da-fA-F]{2}) ?/g, "0x$1 ")
                                      .replace(/ +$/, "")
                                      .split(" ")
                                  ).buffer)),
                                (S.value = { key: E, data: L }),
                                (S.type = ke),
                                (S.id = t),
                                r.id3Track.addCue(S),
                                (a[E] = S);
                            }
                          }
                        }
                        n[t] = { cues: a, dateRange: e, durationKnown: l };
                      },
                      v = 0;
                    v < o.length;
                    v++
                  )
                    g();
                }
              }
            }),
            t
          );
        })(),
        _e = (function () {
          function t(t) {
            var e = this;
            (this.hls = void 0),
              (this.config = void 0),
              (this.media = null),
              (this.levelDetails = null),
              (this.currentTime = 0),
              (this.stallCount = 0),
              (this._latency = null),
              (this.timeupdateHandler = function () {
                return e.timeupdate();
              }),
              (this.hls = t),
              (this.config = t.config),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.unregisterListeners(),
                this.onMediaDetaching(),
                (this.levelDetails = null),
                (this.hls = this.timeupdateHandler = null);
            }),
            (e.registerListeners = function () {
              this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.on(S.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.off(S.ERROR, this.onError, this);
            }),
            (e.onMediaAttached = function (t, e) {
              (this.media = e.media),
                this.media.addEventListener(
                  "timeupdate",
                  this.timeupdateHandler
                );
            }),
            (e.onMediaDetaching = function () {
              this.media &&
                (this.media.removeEventListener(
                  "timeupdate",
                  this.timeupdateHandler
                ),
                (this.media = null));
            }),
            (e.onManifestLoading = function () {
              (this.levelDetails = null),
                (this._latency = null),
                (this.stallCount = 0);
            }),
            (e.onLevelUpdated = function (t, e) {
              var r = e.details;
              (this.levelDetails = r),
                r.advanced && this.timeupdate(),
                !r.live &&
                  this.media &&
                  this.media.removeEventListener(
                    "timeupdate",
                    this.timeupdateHandler
                  );
            }),
            (e.onError = function (t, e) {
              var r;
              e.details === R.BUFFER_STALLED_ERROR &&
                (this.stallCount++,
                null != (r = this.levelDetails) &&
                  r.live &&
                  w.warn(
                    "[playback-rate-controller]: Stall detected, adjusting target latency"
                  ));
            }),
            (e.timeupdate = function () {
              var t = this.media,
                e = this.levelDetails;
              if (t && e) {
                this.currentTime = t.currentTime;
                var r = this.computeLatency();
                if (null !== r) {
                  this._latency = r;
                  var i = this.config,
                    n = i.lowLatencyMode,
                    a = i.maxLiveSyncPlaybackRate;
                  if (n && 1 !== a) {
                    var s = this.targetLatency;
                    if (null !== s) {
                      var o = r - s,
                        l = o < Math.min(this.maxLatency, s + e.targetduration);
                      if (
                        e.live &&
                        l &&
                        o > 0.05 &&
                        this.forwardBufferLength > 1
                      ) {
                        var u = Math.min(2, Math.max(1, a)),
                          h =
                            Math.round(
                              (2 /
                                (1 + Math.exp(-0.75 * o - this.edgeStalled))) *
                                20
                            ) / 20;
                        t.playbackRate = Math.min(u, Math.max(1, h));
                      } else
                        1 !== t.playbackRate &&
                          0 !== t.playbackRate &&
                          (t.playbackRate = 1);
                    }
                  }
                }
              }
            }),
            (e.estimateLiveEdge = function () {
              var t = this.levelDetails;
              return null === t ? null : t.edge + t.age;
            }),
            (e.computeLatency = function () {
              var t = this.estimateLiveEdge();
              return null === t ? null : t - this.currentTime;
            }),
            a(t, [
              {
                key: "latency",
                get: function () {
                  return this._latency || 0;
                },
              },
              {
                key: "maxLatency",
                get: function () {
                  var t = this.config,
                    e = this.levelDetails;
                  return void 0 !== t.liveMaxLatencyDuration
                    ? t.liveMaxLatencyDuration
                    : e
                    ? t.liveMaxLatencyDurationCount * e.targetduration
                    : 0;
                },
              },
              {
                key: "targetLatency",
                get: function () {
                  var t = this.levelDetails;
                  if (null === t) return null;
                  var e = t.holdBack,
                    r = t.partHoldBack,
                    i = t.targetduration,
                    n = this.config,
                    a = n.liveSyncDuration,
                    s = n.liveSyncDurationCount,
                    o = n.lowLatencyMode,
                    l = this.hls.userConfig,
                    u = (o && r) || e;
                  (l.liveSyncDuration || l.liveSyncDurationCount || 0 === u) &&
                    (u = void 0 !== a ? a : s * i);
                  var h = i;
                  return u + Math.min(1 * this.stallCount, h);
                },
              },
              {
                key: "liveSyncPosition",
                get: function () {
                  var t = this.estimateLiveEdge(),
                    e = this.targetLatency,
                    r = this.levelDetails;
                  if (null === t || null === e || null === r) return null;
                  var i = r.edge,
                    n = t - e - this.edgeStalled,
                    a = i - r.totalduration,
                    s =
                      i -
                      ((this.config.lowLatencyMode && r.partTarget) ||
                        r.targetduration);
                  return Math.min(Math.max(a, n), s);
                },
              },
              {
                key: "drift",
                get: function () {
                  var t = this.levelDetails;
                  return null === t ? 1 : t.drift;
                },
              },
              {
                key: "edgeStalled",
                get: function () {
                  var t = this.levelDetails;
                  if (null === t) return 0;
                  var e =
                    3 *
                    ((this.config.lowLatencyMode && t.partTarget) ||
                      t.targetduration);
                  return Math.max(t.age - e, 0);
                },
              },
              {
                key: "forwardBufferLength",
                get: function () {
                  var t = this.media,
                    e = this.levelDetails;
                  if (!t || !e) return 0;
                  var r = t.buffered.length;
                  return (
                    (r ? t.buffered.end(r - 1) : e.edge) - this.currentTime
                  );
                },
              },
            ]),
            t
          );
        })(),
        Pe = ["NONE", "TYPE-0", "TYPE-1", null],
        xe = "",
        Fe = "YES",
        Me = "v2",
        Oe = (function () {
          function t(t, e, r) {
            (this.msn = void 0),
              (this.part = void 0),
              (this.skip = void 0),
              (this.msn = t),
              (this.part = e),
              (this.skip = r);
          }
          return (
            (t.prototype.addDirectives = function (t) {
              var e = new self.URL(t);
              return (
                void 0 !== this.msn &&
                  e.searchParams.set("_HLS_msn", this.msn.toString()),
                void 0 !== this.part &&
                  e.searchParams.set("_HLS_part", this.part.toString()),
                this.skip && e.searchParams.set("_HLS_skip", this.skip),
                e.href
              );
            }),
            t
          );
        })(),
        Ne = (function () {
          function t(t) {
            (this._attrs = void 0),
              (this.audioCodec = void 0),
              (this.bitrate = void 0),
              (this.codecSet = void 0),
              (this.height = void 0),
              (this.id = void 0),
              (this.name = void 0),
              (this.videoCodec = void 0),
              (this.width = void 0),
              (this.unknownCodecs = void 0),
              (this.audioGroupIds = void 0),
              (this.details = void 0),
              (this.fragmentError = 0),
              (this.loadError = 0),
              (this.loaded = void 0),
              (this.realBitrate = 0),
              (this.textGroupIds = void 0),
              (this.url = void 0),
              (this._urlId = 0),
              (this.url = [t.url]),
              (this._attrs = [t.attrs]),
              (this.bitrate = t.bitrate),
              t.details && (this.details = t.details),
              (this.id = t.id || 0),
              (this.name = t.name),
              (this.width = t.width || 0),
              (this.height = t.height || 0),
              (this.audioCodec = t.audioCodec),
              (this.videoCodec = t.videoCodec),
              (this.unknownCodecs = t.unknownCodecs),
              (this.codecSet = [t.videoCodec, t.audioCodec]
                .filter(function (t) {
                  return t;
                })
                .join(",")
                .replace(/\.[^.,]+/g, ""));
          }
          return (
            (t.prototype.addFallback = function (t) {
              this.url.push(t.url), this._attrs.push(t.attrs);
            }),
            a(t, [
              {
                key: "maxBitrate",
                get: function () {
                  return Math.max(this.realBitrate, this.bitrate);
                },
              },
              {
                key: "attrs",
                get: function () {
                  return this._attrs[this._urlId];
                },
              },
              {
                key: "pathwayId",
                get: function () {
                  return this.attrs["PATHWAY-ID"] || ".";
                },
              },
              {
                key: "uri",
                get: function () {
                  return this.url[this._urlId] || "";
                },
              },
              {
                key: "urlId",
                get: function () {
                  return this._urlId;
                },
                set: function (t) {
                  var e = t % this.url.length;
                  this._urlId !== e &&
                    ((this.fragmentError = 0),
                    (this.loadError = 0),
                    (this.details = void 0),
                    (this._urlId = e));
                },
              },
              {
                key: "audioGroupId",
                get: function () {
                  var t;
                  return null == (t = this.audioGroupIds)
                    ? void 0
                    : t[this.urlId];
                },
              },
              {
                key: "textGroupId",
                get: function () {
                  var t;
                  return null == (t = this.textGroupIds)
                    ? void 0
                    : t[this.urlId];
                },
              },
            ]),
            t
          );
        })();
      function Ue(t, e) {
        var r = e.startPTS;
        if (E(r)) {
          var i,
            n = 0;
          e.sn > t.sn
            ? ((n = r - t.start), (i = t))
            : ((n = t.start - r), (i = e)),
            i.duration !== n && (i.duration = n);
        } else
          e.sn > t.sn
            ? t.cc === e.cc && t.minEndPTS
              ? (e.start = t.start + (t.minEndPTS - t.start))
              : (e.start = t.start + t.duration)
            : (e.start = Math.max(t.start - e.duration, 0));
      }
      function Be(t, e, r, i, n, a) {
        i - r <= 0 &&
          (w.warn("Fragment should have a positive duration", e),
          (i = r + e.duration),
          (a = n + e.duration));
        var s = r,
          o = i,
          l = e.startPTS,
          u = e.endPTS;
        if (E(l)) {
          var h = Math.abs(l - r);
          E(e.deltaPTS)
            ? (e.deltaPTS = Math.max(h, e.deltaPTS))
            : (e.deltaPTS = h),
            (s = Math.max(r, l)),
            (r = Math.min(r, l)),
            (n = Math.min(n, e.startDTS)),
            (o = Math.min(i, u)),
            (i = Math.max(i, u)),
            (a = Math.max(a, e.endDTS));
        }
        var d = r - e.start;
        0 !== e.start && (e.start = r),
          (e.duration = i - e.start),
          (e.startPTS = r),
          (e.maxStartPTS = s),
          (e.startDTS = n),
          (e.endPTS = i),
          (e.minEndPTS = o),
          (e.endDTS = a);
        var c,
          f = e.sn;
        if (!t || f < t.startSN || f > t.endSN) return 0;
        var g = f - t.startSN,
          v = t.fragments;
        for (v[g] = e, c = g; c > 0; c--) Ue(v[c], v[c - 1]);
        for (c = g; c < v.length - 1; c++) Ue(v[c], v[c + 1]);
        return (
          t.fragmentHint && Ue(v[v.length - 1], t.fragmentHint),
          (t.PTSKnown = t.alignedSliding = !0),
          d
        );
      }
      function Ge(t, e) {
        for (var r = null, i = t.fragments, n = i.length - 1; n >= 0; n--) {
          var a = i[n].initSegment;
          if (a) {
            r = a;
            break;
          }
        }
        t.fragmentHint && delete t.fragmentHint.endPTS;
        var s,
          l,
          u,
          h,
          d,
          c = 0;
        if (
          ((function (t, e, r) {
            for (
              var i = e.skippedSegments,
                n = Math.max(t.startSN, e.startSN) - e.startSN,
                a =
                  (t.fragmentHint ? 1 : 0) +
                  (i ? e.endSN : Math.min(t.endSN, e.endSN)) -
                  e.startSN,
                s = e.startSN - t.startSN,
                o = e.fragmentHint
                  ? e.fragments.concat(e.fragmentHint)
                  : e.fragments,
                l = t.fragmentHint
                  ? t.fragments.concat(t.fragmentHint)
                  : t.fragments,
                u = n;
              u <= a;
              u++
            ) {
              var h = l[s + u],
                d = o[u];
              i && !d && u < i && (d = e.fragments[u] = h), h && d && r(h, d);
            }
          })(t, e, function (t, i) {
            t.relurl && (c = t.cc - i.cc),
              E(t.startPTS) &&
                E(t.endPTS) &&
                ((i.start = i.startPTS = t.startPTS),
                (i.startDTS = t.startDTS),
                (i.maxStartPTS = t.maxStartPTS),
                (i.endPTS = t.endPTS),
                (i.endDTS = t.endDTS),
                (i.minEndPTS = t.minEndPTS),
                (i.duration = t.endPTS - t.startPTS),
                i.duration && (s = i),
                (e.PTSKnown = e.alignedSliding = !0)),
              (i.elementaryStreams = t.elementaryStreams),
              (i.loader = t.loader),
              (i.stats = t.stats),
              (i.urlId = t.urlId),
              t.initSegment &&
                ((i.initSegment = t.initSegment), (r = t.initSegment));
          }),
          r &&
            (e.fragmentHint
              ? e.fragments.concat(e.fragmentHint)
              : e.fragments
            ).forEach(function (t) {
              var e;
              (t.initSegment &&
                t.initSegment.relurl !==
                  (null == (e = r) ? void 0 : e.relurl)) ||
                (t.initSegment = r);
            }),
          e.skippedSegments)
        )
          if (
            ((e.deltaUpdateFailed = e.fragments.some(function (t) {
              return !t;
            })),
            e.deltaUpdateFailed)
          ) {
            w.warn(
              "[level-helper] Previous playlist missing segments skipped in delta playlist"
            );
            for (var f = e.skippedSegments; f--; ) e.fragments.shift();
            (e.startSN = e.fragments[0].sn), (e.startCC = e.fragments[0].cc);
          } else
            e.canSkipDateRanges &&
              (e.dateRanges =
                ((l = t.dateRanges),
                (u = e.dateRanges),
                (h = e.recentlyRemovedDateranges),
                (d = o({}, l)),
                h &&
                  h.forEach(function (t) {
                    delete d[t];
                  }),
                Object.keys(u).forEach(function (t) {
                  var e = new F(u[t].attr, d[t]);
                  e.isValid
                    ? (d[t] = e)
                    : w.warn(
                        'Ignoring invalid Playlist Delta Update DATERANGE tag: "' +
                          JSON.stringify(u[t].attr) +
                          '"'
                      );
                }),
                d));
        var g = e.fragments;
        if (c) {
          w.warn(
            "discontinuity sliding from playlist, take drift into account"
          );
          for (var v = 0; v < g.length; v++) g[v].cc += c;
        }
        e.skippedSegments && (e.startCC = e.fragments[0].cc),
          (function (t, e, r) {
            if (t && e)
              for (var i = 0, n = 0, a = t.length; n <= a; n++) {
                var s = t[n],
                  o = e[n + i];
                s && o && s.index === o.index && s.fragment.sn === o.fragment.sn
                  ? r(s, o)
                  : i--;
              }
          })(t.partList, e.partList, function (t, e) {
            (e.elementaryStreams = t.elementaryStreams), (e.stats = t.stats);
          }),
          s ? Be(e, s, s.startPTS, s.endPTS, s.startDTS, s.endDTS) : Ke(t, e),
          g.length && (e.totalduration = e.edge - g[0].start),
          (e.driftStartTime = t.driftStartTime),
          (e.driftStart = t.driftStart);
        var m = e.advancedDateTime;
        if (e.advanced && m) {
          var p = e.edge;
          e.driftStart || ((e.driftStartTime = m), (e.driftStart = p)),
            (e.driftEndTime = m),
            (e.driftEnd = p);
        } else
          (e.driftEndTime = t.driftEndTime),
            (e.driftEnd = t.driftEnd),
            (e.advancedDateTime = t.advancedDateTime);
      }
      function Ke(t, e) {
        var r = e.startSN + e.skippedSegments - t.startSN,
          i = t.fragments;
        r < 0 || r >= i.length || He(e, i[r].start);
      }
      function He(t, e) {
        if (e) {
          for (var r = t.fragments, i = t.skippedSegments; i < r.length; i++)
            r[i].start += e;
          t.fragmentHint && (t.fragmentHint.start += e);
        }
      }
      function Ve(t, e, r) {
        var i;
        return null != t && t.details
          ? Ye(null == (i = t.details) ? void 0 : i.partList, e, r)
          : null;
      }
      function Ye(t, e, r) {
        if (t)
          for (var i = t.length; i--; ) {
            var n = t[i];
            if (n.index === r && n.fragment.sn === e) return n;
          }
        return null;
      }
      function We(t) {
        switch (t.details) {
          case R.FRAG_LOAD_TIMEOUT:
          case R.KEY_LOAD_TIMEOUT:
          case R.LEVEL_LOAD_TIMEOUT:
          case R.MANIFEST_LOAD_TIMEOUT:
            return !0;
        }
        return !1;
      }
      function je(t, e) {
        var r = We(e);
        return t.default[(r ? "timeout" : "error") + "Retry"];
      }
      function qe(t, e) {
        var r = "linear" === t.backoff ? 1 : Math.pow(2, e);
        return Math.min(r * t.retryDelayMs, t.maxRetryDelayMs);
      }
      function Xe(t) {
        return i(i({}, t), { errorRetry: null, timeoutRetry: null });
      }
      function ze(t, e, r, i) {
        return (
          !!t &&
          e < t.maxNumRetry &&
          ((function (t) {
            return (
              (0 === t && !1 === navigator.onLine) ||
              (!!t && (t < 400 || t > 499))
            );
          })(i) ||
            !!r)
        );
      }
      var Qe = function (t, e) {
        for (var r = 0, i = t.length - 1, n = null, a = null; r <= i; ) {
          var s = e((a = t[(n = ((r + i) / 2) | 0)]));
          if (s > 0) r = n + 1;
          else {
            if (!(s < 0)) return a;
            i = n - 1;
          }
        }
        return null;
      };
      function $e(t, e, r, i) {
        void 0 === r && (r = 0), void 0 === i && (i = 0);
        var n = null;
        if (
          (t
            ? (n = e[t.sn - e[0].sn + 1] || null)
            : 0 === r && 0 === e[0].start && (n = e[0]),
          n && 0 === Je(r, i, n))
        )
          return n;
        var a = Qe(e, Je.bind(null, r, i));
        return !a || (a === t && n) ? n : a;
      }
      function Je(t, e, r) {
        if (
          (void 0 === t && (t = 0),
          void 0 === e && (e = 0),
          r.start <= t && r.start + r.duration > t)
        )
          return 0;
        var i = Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
        return r.start + r.duration - i <= t
          ? 1
          : r.start - i > t && r.start
          ? -1
          : 0;
      }
      function Ze(t, e, r) {
        var i = 1e3 * Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
        return (r.endProgramDateTime || 0) - i > t;
      }
      var tr,
        er = 3e5,
        rr = 0,
        ir = 2,
        nr = 5,
        ar = 0,
        sr = 1,
        or = 2,
        lr = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.playlistError = 0),
              (this.penalizedRenditions = {}),
              (this.log = void 0),
              (this.warn = void 0),
              (this.error = void 0),
              (this.hls = t),
              (this.log = w.log.bind(w, "[info]:")),
              (this.warn = w.warn.bind(w, "[warning]:")),
              (this.error = w.error.bind(w, "[error]:")),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.ERROR, this.onError, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(S.ERROR, this.onError, this),
                t.off(S.ERROR, this.onErrorOut, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this));
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                (this.hls = null),
                (this.penalizedRenditions = {});
            }),
            (e.startLoad = function (t) {
              this.playlistError = 0;
            }),
            (e.stopLoad = function () {}),
            (e.getVariantLevelIndex = function (t) {
              return (null == t ? void 0 : t.type) === ge
                ? t.level
                : this.hls.loadLevel;
            }),
            (e.onManifestLoading = function () {
              (this.playlistError = 0), (this.penalizedRenditions = {});
            }),
            (e.onLevelUpdated = function () {
              this.playlistError = 0;
            }),
            (e.onError = function (t, e) {
              var r, i;
              if (!e.fatal) {
                var n = this.hls,
                  a = e.context;
                switch (e.details) {
                  case R.FRAG_LOAD_ERROR:
                  case R.FRAG_LOAD_TIMEOUT:
                  case R.KEY_LOAD_ERROR:
                  case R.KEY_LOAD_TIMEOUT:
                    return void (e.errorAction =
                      this.getFragRetryOrSwitchAction(e));
                  case R.FRAG_PARSING_ERROR:
                    if (null != (r = e.frag) && r.gap)
                      return void (e.errorAction = { action: rr, flags: ar });
                  case R.FRAG_GAP:
                  case R.FRAG_DECRYPT_ERROR:
                    return (
                      (e.errorAction = this.getFragRetryOrSwitchAction(e)),
                      void (e.errorAction.action = ir)
                    );
                  case R.LEVEL_EMPTY_ERROR:
                  case R.LEVEL_PARSING_ERROR:
                    var s,
                      o,
                      l = e.parent === ge ? e.level : n.loadLevel;
                    return void (e.details === R.LEVEL_EMPTY_ERROR &&
                    null != (s = e.context) &&
                    null != (o = s.levelDetails) &&
                    o.live
                      ? (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                          e,
                          l
                        ))
                      : ((e.levelRetry = !1),
                        (e.errorAction = this.getLevelSwitchAction(e, l))));
                  case R.LEVEL_LOAD_ERROR:
                  case R.LEVEL_LOAD_TIMEOUT:
                    return void (
                      "number" == typeof (null == a ? void 0 : a.level) &&
                      (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                        e,
                        a.level
                      ))
                    );
                  case R.AUDIO_TRACK_LOAD_ERROR:
                  case R.AUDIO_TRACK_LOAD_TIMEOUT:
                  case R.SUBTITLE_LOAD_ERROR:
                  case R.SUBTITLE_TRACK_LOAD_TIMEOUT:
                    if (a) {
                      var u = n.levels[n.loadLevel];
                      if (
                        u &&
                        ((a.type === ce && a.groupId === u.audioGroupId) ||
                          (a.type === fe && a.groupId === u.textGroupId))
                      )
                        return (
                          (e.errorAction = this.getPlaylistRetryOrSwitchAction(
                            e,
                            n.loadLevel
                          )),
                          (e.errorAction.action = ir),
                          void (e.errorAction.flags = sr)
                        );
                    }
                    return;
                  case R.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                    var h = n.levels[n.loadLevel],
                      d = null == h ? void 0 : h.attrs["HDCP-LEVEL"];
                    return void (
                      d &&
                      (e.errorAction = { action: ir, flags: or, hdcpLevel: d })
                    );
                  case R.BUFFER_ADD_CODEC_ERROR:
                  case R.REMUX_ALLOC_ERROR:
                    return void (e.errorAction = this.getLevelSwitchAction(
                      e,
                      null != (i = e.level) ? i : n.loadLevel
                    ));
                  case R.INTERNAL_EXCEPTION:
                  case R.BUFFER_APPENDING_ERROR:
                  case R.BUFFER_APPEND_ERROR:
                  case R.BUFFER_FULL_ERROR:
                  case R.LEVEL_SWITCH_ERROR:
                  case R.BUFFER_STALLED_ERROR:
                  case R.BUFFER_SEEK_OVER_HOLE:
                  case R.BUFFER_NUDGE_ON_STALL:
                    return void (e.errorAction = { action: rr, flags: ar });
                }
                if (e.type === L.KEY_SYSTEM_ERROR) {
                  var c = this.getVariantLevelIndex(e.frag);
                  return (
                    (e.levelRetry = !1),
                    void (e.errorAction = this.getLevelSwitchAction(e, c))
                  );
                }
              }
            }),
            (e.getPlaylistRetryOrSwitchAction = function (t, e) {
              var r,
                i = je(this.hls.config.playlistLoadPolicy, t),
                n = this.playlistError++,
                a = null == (r = t.response) ? void 0 : r.code;
              if (ze(i, n, We(t), a))
                return { action: nr, flags: ar, retryConfig: i, retryCount: n };
              var s = this.getLevelSwitchAction(t, e);
              return i && ((s.retryConfig = i), (s.retryCount = n)), s;
            }),
            (e.getFragRetryOrSwitchAction = function (t) {
              var e = this.hls,
                r = this.getVariantLevelIndex(t.frag),
                i = e.levels[r],
                n = e.config,
                a = n.fragLoadPolicy,
                s = n.keyLoadPolicy,
                o = je(t.details.startsWith("key") ? s : a, t),
                l = e.levels.reduce(function (t, e) {
                  return t + e.fragmentError;
                }, 0);
              if (i) {
                var u;
                t.details !== R.FRAG_GAP && i.fragmentError++;
                var h = null == (u = t.response) ? void 0 : u.code;
                if (ze(o, l, We(t), h))
                  return {
                    action: nr,
                    flags: ar,
                    retryConfig: o,
                    retryCount: l,
                  };
              }
              var d = this.getLevelSwitchAction(t, r);
              return o && ((d.retryConfig = o), (d.retryCount = l)), d;
            }),
            (e.getLevelSwitchAction = function (t, e) {
              var r = this.hls;
              null == e && (e = r.loadLevel);
              var i = this.hls.levels[e];
              if (i && (i.loadError++, r.autoLevelEnabled)) {
                for (
                  var n,
                    a,
                    s = -1,
                    o = r.levels,
                    l = r.loadLevel,
                    u = r.minAutoLevel,
                    h = r.maxAutoLevel,
                    d = null == (n = t.frag) ? void 0 : n.type,
                    c = null != (a = t.context) ? a : {},
                    f = c.type,
                    g = c.groupId,
                    v = o.length;
                  v--;

                ) {
                  var m = (v + l) % o.length;
                  if (m !== l && m >= u && m <= h && 0 === o[m].loadError) {
                    var p = o[m];
                    if (t.details === R.FRAG_GAP && t.frag) {
                      var y = o[m].details;
                      if (y) {
                        var T = $e(t.frag, y.fragments, t.frag.start);
                        if (null != T && T.gap) continue;
                      }
                    } else {
                      if (
                        (f === ce && g === p.audioGroupId) ||
                        (f === fe && g === p.textGroupId)
                      )
                        continue;
                      if (
                        (d === ve && i.audioGroupId === p.audioGroupId) ||
                        (d === me && i.textGroupId === p.textGroupId)
                      )
                        continue;
                    }
                    s = m;
                    break;
                  }
                }
                if (s > -1 && r.loadLevel !== s)
                  return (
                    (t.levelRetry = !0),
                    (this.playlistError = 0),
                    { action: ir, flags: ar, nextAutoLevel: s }
                  );
              }
              return { action: ir, flags: sr };
            }),
            (e.onErrorOut = function (t, e) {
              var r;
              switch (null == (r = e.errorAction) ? void 0 : r.action) {
                case rr:
                  break;
                case ir:
                  this.sendAlternateToPenaltyBox(e),
                    e.errorAction.resolved ||
                      e.details === R.FRAG_GAP ||
                      (e.fatal = !0);
              }
              e.fatal && this.hls.stopLoad();
            }),
            (e.sendAlternateToPenaltyBox = function (t) {
              var e = this.hls,
                r = t.errorAction;
              if (r) {
                var i = r.flags,
                  n = r.hdcpLevel,
                  a = r.nextAutoLevel;
                switch (i) {
                  case ar:
                    this.switchLevel(t, a);
                    break;
                  case sr:
                    r.resolved || (r.resolved = this.redundantFailover(t));
                    break;
                  case or:
                    n &&
                      ((e.maxHdcpLevel = Pe[Pe.indexOf(n) - 1]),
                      (r.resolved = !0)),
                      this.warn(
                        'Restricting playback to HDCP-LEVEL of "' +
                          e.maxHdcpLevel +
                          '" or lower'
                      );
                }
                r.resolved || this.switchLevel(t, a);
              }
            }),
            (e.switchLevel = function (t, e) {
              void 0 !== e &&
                t.errorAction &&
                (this.warn("switching to level " + e + " after " + t.details),
                (this.hls.nextAutoLevel = e),
                (t.errorAction.resolved = !0),
                (this.hls.nextLoadLevel = this.hls.nextAutoLevel));
            }),
            (e.redundantFailover = function (t) {
              var e = this,
                r = this.hls,
                i = this.penalizedRenditions,
                n = t.parent === ge ? t.level : r.loadLevel,
                a = r.levels[n],
                s = a.url.length,
                o = t.frag ? t.frag.urlId : a.urlId;
              a.urlId !== o ||
                (t.frag && !a.details) ||
                this.penalizeRendition(a, t);
              for (
                var l = function () {
                    var l = (o + u) % s,
                      h = i[l];
                    if (
                      !h ||
                      (function (t, e, r) {
                        if (performance.now() - t.lastErrorPerfMs > er)
                          return !0;
                        var i = t.details;
                        if (e.details === R.FRAG_GAP && i && e.frag) {
                          var n = e.frag.start,
                            a = $e(null, i.fragments, n);
                          if (a && !a.gap) return !0;
                        }
                        if (r && t.errors.length < r.errors.length) {
                          var s = t.errors[t.errors.length - 1];
                          if (
                            i &&
                            s.frag &&
                            e.frag &&
                            Math.abs(s.frag.start - e.frag.start) >
                              3 * i.targetduration
                          )
                            return !0;
                        }
                        return !1;
                      })(h, t, i[o])
                    )
                      return (
                        e.warn(
                          "Switching to Redundant Stream " +
                            (l + 1) +
                            "/" +
                            s +
                            ': "' +
                            a.url[l] +
                            '" after ' +
                            t.details
                        ),
                        (e.playlistError = 0),
                        r.levels.forEach(function (t) {
                          t.urlId = l;
                        }),
                        (r.nextLoadLevel = n),
                        { v: !0 }
                      );
                  },
                  u = 1;
                u < s;
                u++
              ) {
                var h = l();
                if ("object" == typeof h) return h.v;
              }
              return !1;
            }),
            (e.penalizeRendition = function (t, e) {
              var r = this.penalizedRenditions,
                i = r[t.urlId] || {
                  lastErrorPerfMs: 0,
                  errors: [],
                  details: void 0,
                };
              (i.lastErrorPerfMs = performance.now()),
                i.errors.push(e),
                (i.details = t.details),
                (r[t.urlId] = i);
            }),
            t
          );
        })(),
        ur = (function () {
          function t(t, e) {
            (this.hls = void 0),
              (this.timer = -1),
              (this.requestScheduled = -1),
              (this.canLoad = !1),
              (this.log = void 0),
              (this.warn = void 0),
              (this.log = w.log.bind(w, e + ":")),
              (this.warn = w.warn.bind(w, e + ":")),
              (this.hls = t);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.clearTimer(), (this.hls = this.log = this.warn = null);
            }),
            (e.clearTimer = function () {
              clearTimeout(this.timer), (this.timer = -1);
            }),
            (e.startLoad = function () {
              (this.canLoad = !0),
                (this.requestScheduled = -1),
                this.loadPlaylist();
            }),
            (e.stopLoad = function () {
              (this.canLoad = !1), this.clearTimer();
            }),
            (e.switchParams = function (t, e) {
              var r = null == e ? void 0 : e.renditionReports;
              if (r) {
                for (var i = -1, n = 0; n < r.length; n++) {
                  var a = r[n],
                    s = void 0;
                  try {
                    s = new self.URL(a.URI, e.url).href;
                  } catch (t) {
                    w.warn(
                      "Could not construct new URL for Rendition Report: " + t
                    ),
                      (s = a.URI || "");
                  }
                  if (s === t) {
                    i = n;
                    break;
                  }
                  s === t.substring(0, s.length) && (i = n);
                }
                if (-1 !== i) {
                  var o = r[i],
                    l =
                      parseInt(o["LAST-MSN"]) ||
                      (null == e ? void 0 : e.lastPartSn),
                    u =
                      parseInt(o["LAST-PART"]) ||
                      (null == e ? void 0 : e.lastPartIndex);
                  if (this.hls.config.lowLatencyMode) {
                    var h = Math.min(e.age - e.partTarget, e.targetduration);
                    u >= 0 && h > e.partTarget && (u += 1);
                  }
                  return new Oe(l, u >= 0 ? u : void 0, xe);
                }
              }
            }),
            (e.loadPlaylist = function (t) {
              -1 === this.requestScheduled &&
                (this.requestScheduled = self.performance.now());
            }),
            (e.shouldLoadPlaylist = function (t) {
              return (
                this.canLoad && !!t && !!t.url && (!t.details || t.details.live)
              );
            }),
            (e.shouldReloadPlaylist = function (t) {
              return (
                -1 === this.timer &&
                -1 === this.requestScheduled &&
                this.shouldLoadPlaylist(t)
              );
            }),
            (e.playlistLoaded = function (t, e, r) {
              var i = this,
                n = e.details,
                a = e.stats,
                s = self.performance.now(),
                o = a.loading.first ? Math.max(0, s - a.loading.first) : 0;
              if (
                ((n.advancedDateTime = Date.now() - o),
                n.live || (null != r && r.live))
              ) {
                if (
                  (n.reloaded(r),
                  r &&
                    this.log(
                      "live playlist " +
                        t +
                        " " +
                        (n.advanced
                          ? "REFRESHED " + n.lastPartSn + "-" + n.lastPartIndex
                          : "MISSED")
                    ),
                  r && n.fragments.length > 0 && Ge(r, n),
                  !this.canLoad || !n.live)
                )
                  return;
                var l,
                  u = void 0,
                  h = void 0;
                if (n.canBlockReload && n.endSN && n.advanced) {
                  var d = this.hls.config.lowLatencyMode,
                    c = n.lastPartSn,
                    f = n.endSN,
                    g = n.lastPartIndex,
                    v = c === f;
                  -1 !== g
                    ? ((u = v ? f + 1 : c), (h = v ? (d ? 0 : g) : g + 1))
                    : (u = f + 1);
                  var m = n.age,
                    p = m + n.ageHeader,
                    y = Math.min(p - n.partTarget, 1.5 * n.targetduration);
                  if (y > 0) {
                    if (r && y > r.tuneInGoal)
                      this.warn(
                        "CDN Tune-in goal increased from: " +
                          r.tuneInGoal +
                          " to: " +
                          y +
                          " with playlist age: " +
                          n.age
                      ),
                        (y = 0);
                    else {
                      var T = Math.floor(y / n.targetduration);
                      (u += T),
                        void 0 !== h &&
                          (h += Math.round(
                            (y % n.targetduration) / n.partTarget
                          )),
                        this.log(
                          "CDN Tune-in age: " +
                            n.ageHeader +
                            "s last advanced " +
                            m.toFixed(2) +
                            "s goal: " +
                            y +
                            " skip sn " +
                            T +
                            " to part " +
                            h
                        );
                    }
                    n.tuneInGoal = y;
                  }
                  if (
                    ((l = this.getDeliveryDirectives(
                      n,
                      e.deliveryDirectives,
                      u,
                      h
                    )),
                    d || !v)
                  )
                    return void this.loadPlaylist(l);
                } else
                  n.canBlockReload &&
                    (l = this.getDeliveryDirectives(
                      n,
                      e.deliveryDirectives,
                      u,
                      h
                    ));
                var E = this.hls.mainForwardBufferInfo,
                  S = E ? E.end - E.len : 0,
                  L = (function (t, e) {
                    void 0 === e && (e = 1 / 0);
                    var r = 1e3 * t.targetduration;
                    if (t.updated) {
                      var i = t.fragments;
                      if (i.length && 4 * r > e) {
                        var n = 1e3 * i[i.length - 1].duration;
                        n < r && (r = n);
                      }
                    } else r /= 2;
                    return Math.round(r);
                  })(n, 1e3 * (n.edge - S));
                n.updated &&
                  s > this.requestScheduled + L &&
                  (this.requestScheduled = a.loading.start),
                  void 0 !== u && n.canBlockReload
                    ? (this.requestScheduled =
                        a.loading.first + L - (1e3 * n.partTarget || 1e3))
                    : -1 === this.requestScheduled ||
                      this.requestScheduled + L < s
                    ? (this.requestScheduled = s)
                    : this.requestScheduled - s <= 0 &&
                      (this.requestScheduled += L);
                var R = this.requestScheduled - s;
                (R = Math.max(0, R)),
                  this.log(
                    "reload live playlist " + t + " in " + Math.round(R) + " ms"
                  ),
                  (this.timer = self.setTimeout(function () {
                    return i.loadPlaylist(l);
                  }, R));
              } else this.clearTimer();
            }),
            (e.getDeliveryDirectives = function (t, e, r, i) {
              var n = (function (t, e) {
                var r = t.canSkipUntil,
                  i = t.canSkipDateRanges,
                  n = t.endSN;
                return r && (void 0 !== e ? e - n : 0) < r ? (i ? Me : Fe) : xe;
              })(t, r);
              return (
                null != e &&
                  e.skip &&
                  t.deltaUpdateFailed &&
                  ((r = e.msn), (i = e.part), (n = xe)),
                new Oe(r, i, n)
              );
            }),
            (e.checkRetry = function (t) {
              var e = this,
                r = t.details,
                i = We(t),
                n = t.errorAction,
                a = n || {},
                s = a.action,
                o = a.retryCount,
                l = void 0 === o ? 0 : o,
                u = a.retryConfig,
                h = !!n && !!u && (s === nr || (!n.resolved && s === ir));
              if (h) {
                var d;
                if (((this.requestScheduled = -1), l >= u.maxNumRetry))
                  return !1;
                if (i && null != (d = t.context) && d.deliveryDirectives)
                  this.warn(
                    "Retrying playlist loading " +
                      (l + 1) +
                      "/" +
                      u.maxNumRetry +
                      ' after "' +
                      r +
                      '" without delivery-directives'
                  ),
                    this.loadPlaylist();
                else {
                  var c = qe(u, l);
                  (this.timer = self.setTimeout(function () {
                    return e.loadPlaylist();
                  }, c)),
                    this.warn(
                      "Retrying playlist loading " +
                        (l + 1) +
                        "/" +
                        u.maxNumRetry +
                        ' after "' +
                        r +
                        '" in ' +
                        c +
                        "ms"
                    );
                }
                (t.levelRetry = !0), (n.resolved = !0);
              }
              return h;
            }),
            t
          );
        })(),
        hr = (function (t) {
          function e(e, r) {
            var i;
            return (
              ((i = t.call(this, e, "[level-controller]") || this)._levels =
                []),
              (i._firstLevel = -1),
              (i._startLevel = void 0),
              (i.currentLevel = null),
              (i.currentLevelIndex = -1),
              (i.manualLevelIndex = -1),
              (i.steering = void 0),
              (i.onParsedComplete = void 0),
              (i.steering = r),
              i._registerListeners(),
              i
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r._registerListeners = function () {
              var t = this.hls;
              t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this),
                t.on(S.ERROR, this.onError, this);
            }),
            (r._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this),
                t.off(S.ERROR, this.onError, this);
            }),
            (r.destroy = function () {
              this._unregisterListeners(),
                (this.steering = null),
                this.resetLevels(),
                t.prototype.destroy.call(this);
            }),
            (r.startLoad = function () {
              this._levels.forEach(function (t) {
                (t.loadError = 0), (t.fragmentError = 0);
              }),
                t.prototype.startLoad.call(this);
            }),
            (r.resetLevels = function () {
              (this._startLevel = void 0),
                (this.manualLevelIndex = -1),
                (this.currentLevelIndex = -1),
                (this.currentLevel = null),
                (this._levels = []);
            }),
            (r.onManifestLoading = function (t, e) {
              this.resetLevels();
            }),
            (r.onManifestLoaded = function (t, e) {
              var r,
                i = [],
                n = {};
              e.levels.forEach(function (t) {
                var e,
                  a = t.attrs;
                -1 !==
                  (null == (e = t.audioCodec)
                    ? void 0
                    : e.indexOf("mp4a.40.34")) &&
                  (tr || (tr = /chrome|firefox/i.test(navigator.userAgent)),
                  tr && (t.audioCodec = void 0));
                var s = a.AUDIO,
                  o = a.CODECS,
                  l = a["FRAME-RATE"],
                  u = a["PATHWAY-ID"],
                  h = a.RESOLUTION,
                  d = a.SUBTITLES,
                  c =
                    (u || ".") + "-" + t.bitrate + "-" + h + "-" + l + "-" + o;
                (r = n[c])
                  ? r.addFallback(t)
                  : ((r = new Ne(t)), (n[c] = r), i.push(r)),
                  dr(r, "audio", s),
                  dr(r, "text", d);
              }),
                this.filterAndSortMediaOptions(i, e);
            }),
            (r.filterAndSortMediaOptions = function (t, e) {
              var r = this,
                i = [],
                n = [],
                a = !1,
                s = !1,
                o = !1,
                l = t.filter(function (t) {
                  var e = t.audioCodec,
                    r = t.videoCodec,
                    i = t.width,
                    n = t.height,
                    l = t.unknownCodecs;
                  return (
                    a || (a = !(!i || !n)),
                    s || (s = !!r),
                    o || (o = !!e),
                    !(null != l && l.length) &&
                      (!e || Qt(e, "audio")) &&
                      (!r || Qt(r, "video"))
                  );
                });
              if (
                ((a || s) &&
                  o &&
                  (l = l.filter(function (t) {
                    var e = t.videoCodec,
                      r = t.width,
                      i = t.height;
                    return !!e || !(!r || !i);
                  })),
                0 !== l.length)
              ) {
                e.audioTracks &&
                  cr(
                    (i = e.audioTracks.filter(function (t) {
                      return !t.audioCodec || Qt(t.audioCodec, "audio");
                    }))
                  ),
                  e.subtitles && cr((n = e.subtitles));
                var u = l.slice(0);
                l.sort(function (t, e) {
                  return t.attrs["HDCP-LEVEL"] !== e.attrs["HDCP-LEVEL"]
                    ? (t.attrs["HDCP-LEVEL"] || "") >
                      (e.attrs["HDCP-LEVEL"] || "")
                      ? 1
                      : -1
                    : t.bitrate !== e.bitrate
                    ? t.bitrate - e.bitrate
                    : t.attrs["FRAME-RATE"] !== e.attrs["FRAME-RATE"]
                    ? t.attrs.decimalFloatingPoint("FRAME-RATE") -
                      e.attrs.decimalFloatingPoint("FRAME-RATE")
                    : t.attrs.SCORE !== e.attrs.SCORE
                    ? t.attrs.decimalFloatingPoint("SCORE") -
                      e.attrs.decimalFloatingPoint("SCORE")
                    : a && t.height !== e.height
                    ? t.height - e.height
                    : 0;
                });
                var h = u[0];
                if (
                  this.steering &&
                  (l = this.steering.filterParsedLevels(l)).length !== u.length
                )
                  for (var d = 0; d < u.length; d++)
                    if (u[d].pathwayId === l[0].pathwayId) {
                      h = u[d];
                      break;
                    }
                this._levels = l;
                for (var c = 0; c < l.length; c++)
                  if (l[c] === h) {
                    (this._firstLevel = c),
                      this.log(
                        "manifest loaded, " +
                          l.length +
                          " level(s) found, first bitrate: " +
                          h.bitrate
                      );
                    break;
                  }
                var f = o && !s,
                  g = {
                    levels: l,
                    audioTracks: i,
                    subtitleTracks: n,
                    sessionData: e.sessionData,
                    sessionKeys: e.sessionKeys,
                    firstLevel: this._firstLevel,
                    stats: e.stats,
                    audio: o,
                    video: s,
                    altAudio:
                      !f &&
                      i.some(function (t) {
                        return !!t.url;
                      }),
                  };
                this.hls.trigger(S.MANIFEST_PARSED, g),
                  (this.hls.config.autoStartLoad || this.hls.forceStartLoad) &&
                    this.hls.startLoad(this.hls.config.startPosition);
              } else
                Promise.resolve().then(function () {
                  if (r.hls) {
                    var t = new Error(
                      "no level with compatible codecs found in manifest"
                    );
                    r.hls.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: R.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                      fatal: !0,
                      url: e.url,
                      error: t,
                      reason: t.message,
                    });
                  }
                });
            }),
            (r.onError = function (t, e) {
              !e.fatal &&
                e.context &&
                e.context.type === de &&
                e.context.level === this.level &&
                this.checkRetry(e);
            }),
            (r.onFragLoaded = function (t, e) {
              var r = e.frag;
              if (void 0 !== r && r.type === ge) {
                var i = this._levels[r.level];
                void 0 !== i && (i.loadError = 0);
              }
            }),
            (r.onLevelLoaded = function (t, e) {
              var r,
                i,
                n = e.level,
                a = e.details,
                s = this._levels[n];
              if (!s)
                return (
                  this.warn("Invalid level index " + n),
                  void (
                    null != (i = e.deliveryDirectives) &&
                    i.skip &&
                    (a.deltaUpdateFailed = !0)
                  )
                );
              n === this.currentLevelIndex
                ? (0 === s.fragmentError && (s.loadError = 0),
                  this.playlistLoaded(n, e, s.details))
                : null != (r = e.deliveryDirectives) &&
                  r.skip &&
                  (a.deltaUpdateFailed = !0);
            }),
            (r.onAudioTrackSwitched = function (t, e) {
              var r = this.currentLevel;
              if (r) {
                var i = this.hls.audioTracks[e.id].groupId;
                if (r.audioGroupIds && r.audioGroupId !== i) {
                  for (var n = -1, a = 0; a < r.audioGroupIds.length; a++)
                    if (r.audioGroupIds[a] === i) {
                      n = a;
                      break;
                    }
                  -1 !== n &&
                    n !== r.urlId &&
                    ((r.urlId = n), this.canLoad && this.startLoad());
                }
              }
            }),
            (r.loadPlaylist = function (e) {
              t.prototype.loadPlaylist.call(this);
              var r = this.currentLevelIndex,
                i = this.currentLevel;
              if (i && this.shouldLoadPlaylist(i)) {
                var n = i.urlId,
                  a = i.uri;
                if (e)
                  try {
                    a = e.addDirectives(a);
                  } catch (t) {
                    this.warn(
                      "Could not construct new URL with HLS Delivery Directives: " +
                        t
                    );
                  }
                var s = i.attrs["PATHWAY-ID"];
                this.log(
                  "Loading level index " +
                    r +
                    (void 0 !== (null == e ? void 0 : e.msn)
                      ? " at sn " + e.msn + " part " + e.part
                      : "") +
                    " with" +
                    (s ? " Pathway " + s : "") +
                    " URI " +
                    (n + 1) +
                    "/" +
                    i.url.length +
                    " " +
                    a
                ),
                  this.clearTimer(),
                  this.hls.trigger(S.LEVEL_LOADING, {
                    url: a,
                    level: r,
                    id: n,
                    deliveryDirectives: e || null,
                  });
              }
            }),
            (r.removeLevel = function (t, e) {
              var r = this,
                i = function (t, r) {
                  return r !== e;
                },
                n = this._levels.filter(function (n, a) {
                  return (
                    a !== t ||
                    (n.url.length > 1 && void 0 !== e
                      ? ((n.url = n.url.filter(i)),
                        n.audioGroupIds &&
                          (n.audioGroupIds = n.audioGroupIds.filter(i)),
                        n.textGroupIds &&
                          (n.textGroupIds = n.textGroupIds.filter(i)),
                        (n.urlId = 0),
                        !0)
                      : (r.steering && r.steering.removeLevel(n), !1))
                  );
                });
              this.hls.trigger(S.LEVELS_UPDATED, { levels: n });
            }),
            (r.onLevelsUpdated = function (t, e) {
              var r = e.levels;
              r.forEach(function (t, e) {
                var r = t.details;
                null != r &&
                  r.fragments &&
                  r.fragments.forEach(function (t) {
                    t.level = e;
                  });
              }),
                (this._levels = r);
            }),
            a(e, [
              {
                key: "levels",
                get: function () {
                  return 0 === this._levels.length ? null : this._levels;
                },
              },
              {
                key: "level",
                get: function () {
                  return this.currentLevelIndex;
                },
                set: function (t) {
                  var e = this._levels;
                  if (0 !== e.length) {
                    if (t < 0 || t >= e.length) {
                      var r = new Error("invalid level idx"),
                        i = t < 0;
                      if (
                        (this.hls.trigger(S.ERROR, {
                          type: L.OTHER_ERROR,
                          details: R.LEVEL_SWITCH_ERROR,
                          level: t,
                          fatal: i,
                          error: r,
                          reason: r.message,
                        }),
                        i)
                      )
                        return;
                      t = Math.min(t, e.length - 1);
                    }
                    var n = this.currentLevelIndex,
                      a = this.currentLevel,
                      s = a ? a.attrs["PATHWAY-ID"] : void 0,
                      l = e[t],
                      u = l.attrs["PATHWAY-ID"];
                    if (
                      ((this.currentLevelIndex = t),
                      (this.currentLevel = l),
                      n !== t || !l.details || !a || s !== u)
                    ) {
                      this.log(
                        "Switching to level " +
                          t +
                          (u ? " with Pathway " + u : "") +
                          " from level " +
                          n +
                          (s ? " with Pathway " + s : "")
                      );
                      var h = o({}, l, {
                        level: t,
                        maxBitrate: l.maxBitrate,
                        attrs: l.attrs,
                        uri: l.uri,
                        urlId: l.urlId,
                      });
                      delete h._attrs,
                        delete h._urlId,
                        this.hls.trigger(S.LEVEL_SWITCHING, h);
                      var d = l.details;
                      if (!d || d.live) {
                        var c = this.switchParams(
                          l.uri,
                          null == a ? void 0 : a.details
                        );
                        this.loadPlaylist(c);
                      }
                    }
                  }
                },
              },
              {
                key: "manualLevel",
                get: function () {
                  return this.manualLevelIndex;
                },
                set: function (t) {
                  (this.manualLevelIndex = t),
                    void 0 === this._startLevel && (this._startLevel = t),
                    -1 !== t && (this.level = t);
                },
              },
              {
                key: "firstLevel",
                get: function () {
                  return this._firstLevel;
                },
                set: function (t) {
                  this._firstLevel = t;
                },
              },
              {
                key: "startLevel",
                get: function () {
                  if (void 0 === this._startLevel) {
                    var t = this.hls.config.startLevel;
                    return void 0 !== t ? t : this._firstLevel;
                  }
                  return this._startLevel;
                },
                set: function (t) {
                  this._startLevel = t;
                },
              },
              {
                key: "nextLoadLevel",
                get: function () {
                  return -1 !== this.manualLevelIndex
                    ? this.manualLevelIndex
                    : this.hls.nextAutoLevel;
                },
                set: function (t) {
                  (this.level = t),
                    -1 === this.manualLevelIndex &&
                      (this.hls.nextAutoLevel = t);
                },
              },
            ]),
            e
          );
        })(ur);
      function dr(t, e, r) {
        r &&
          ("audio" === e
            ? (t.audioGroupIds || (t.audioGroupIds = []),
              (t.audioGroupIds[t.url.length - 1] = r))
            : "text" === e &&
              (t.textGroupIds || (t.textGroupIds = []),
              (t.textGroupIds[t.url.length - 1] = r)));
      }
      function cr(t) {
        var e = {};
        t.forEach(function (t) {
          var r = t.groupId || "";
          (t.id = e[r] = e[r] || 0), e[r]++;
        });
      }
      var fr = "NOT_LOADED",
        gr = "APPENDING",
        vr = "PARTIAL",
        mr = "OK",
        pr = (function () {
          function t(t) {
            (this.activePartLists = Object.create(null)),
              (this.endListFragments = Object.create(null)),
              (this.fragments = Object.create(null)),
              (this.timeRanges = Object.create(null)),
              (this.bufferPadding = 0.2),
              (this.hls = void 0),
              (this.hasGaps = !1),
              (this.hls = t),
              this._registerListeners();
          }
          var e = t.prototype;
          return (
            (e._registerListeners = function () {
              var t = this.hls;
              t.on(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this);
            }),
            (e._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this);
            }),
            (e.destroy = function () {
              this._unregisterListeners(),
                (this.fragments =
                  this.activePartLists =
                  this.endListFragments =
                  this.timeRanges =
                    null);
            }),
            (e.getAppendedFrag = function (t, e) {
              var r = this.activePartLists[e];
              if (r)
                for (var i = r.length; i--; ) {
                  var n = r[i];
                  if (!n) break;
                  var a = n.end;
                  if (n.start <= t && null !== a && t <= a) return n;
                }
              return this.getBufferedFrag(t, e);
            }),
            (e.getBufferedFrag = function (t, e) {
              for (
                var r = this.fragments, i = Object.keys(r), n = i.length;
                n--;

              ) {
                var a = r[i[n]];
                if ((null == a ? void 0 : a.body.type) === e && a.buffered) {
                  var s = a.body;
                  if (s.start <= t && t <= s.end) return s;
                }
              }
              return null;
            }),
            (e.detectEvictedFragments = function (t, e, r, i) {
              var n = this;
              this.timeRanges && (this.timeRanges[t] = e);
              var a = (null == i ? void 0 : i.fragment.sn) || -1;
              Object.keys(this.fragments).forEach(function (i) {
                var s = n.fragments[i];
                if (s && !(a >= s.body.sn))
                  if (s.buffered || s.loaded) {
                    var o = s.range[t];
                    o &&
                      o.time.some(function (t) {
                        var r = !n.isTimeBuffered(t.startPTS, t.endPTS, e);
                        return r && n.removeFragment(s.body), r;
                      });
                  } else s.body.type === r && n.removeFragment(s.body);
              });
            }),
            (e.detectPartialFragments = function (t) {
              var e = this,
                r = this.timeRanges,
                i = t.frag,
                n = t.part;
              if (r && "initSegment" !== i.sn) {
                var a = Tr(i),
                  s = this.fragments[a];
                if (!(!s || (s.buffered && i.gap))) {
                  var o = !i.relurl;
                  Object.keys(r).forEach(function (t) {
                    var a = i.elementaryStreams[t];
                    if (a) {
                      var l = r[t],
                        u = o || !0 === a.partial;
                      s.range[t] = e.getBufferedTimes(i, n, u, l);
                    }
                  }),
                    (s.loaded = null),
                    Object.keys(s.range).length
                      ? ((s.buffered = !0),
                        s.body.endList &&
                          (this.endListFragments[s.body.type] = s),
                        yr(s) || this.removeParts(i.sn - 1, i.type))
                      : this.removeFragment(s.body);
                }
              }
            }),
            (e.removeParts = function (t, e) {
              var r = this.activePartLists[e];
              r &&
                (this.activePartLists[e] = r.filter(function (e) {
                  return e.fragment.sn >= t;
                }));
            }),
            (e.fragBuffered = function (t, e) {
              var r = Tr(t),
                i = this.fragments[r];
              !i &&
                e &&
                ((i = this.fragments[r] =
                  {
                    body: t,
                    appendedPTS: null,
                    loaded: null,
                    buffered: !1,
                    range: Object.create(null),
                  }),
                t.gap && (this.hasGaps = !0)),
                i && ((i.loaded = null), (i.buffered = !0));
            }),
            (e.getBufferedTimes = function (t, e, r, i) {
              for (
                var n = { time: [], partial: r },
                  a = t.start,
                  s = t.end,
                  o = t.minEndPTS || s,
                  l = t.maxStartPTS || a,
                  u = 0;
                u < i.length;
                u++
              ) {
                var h = i.start(u) - this.bufferPadding,
                  d = i.end(u) + this.bufferPadding;
                if (l >= h && o <= d) {
                  n.time.push({
                    startPTS: Math.max(a, i.start(u)),
                    endPTS: Math.min(s, i.end(u)),
                  });
                  break;
                }
                if (a < d && s > h)
                  (n.partial = !0),
                    n.time.push({
                      startPTS: Math.max(a, i.start(u)),
                      endPTS: Math.min(s, i.end(u)),
                    });
                else if (s <= h) break;
              }
              return n;
            }),
            (e.getPartialFragment = function (t) {
              var e,
                r,
                i,
                n = null,
                a = 0,
                s = this.bufferPadding,
                o = this.fragments;
              return (
                Object.keys(o).forEach(function (l) {
                  var u = o[l];
                  u &&
                    yr(u) &&
                    ((r = u.body.start - s),
                    (i = u.body.end + s),
                    t >= r &&
                      t <= i &&
                      ((e = Math.min(t - r, i - t)),
                      a <= e && ((n = u.body), (a = e))));
                }),
                n
              );
            }),
            (e.isEndListAppended = function (t) {
              var e = this.endListFragments[t];
              return void 0 !== e && (e.buffered || yr(e));
            }),
            (e.getState = function (t) {
              var e = Tr(t),
                r = this.fragments[e];
              return r ? (r.buffered ? (yr(r) ? vr : mr) : gr) : fr;
            }),
            (e.isTimeBuffered = function (t, e, r) {
              for (var i, n, a = 0; a < r.length; a++) {
                if (
                  ((i = r.start(a) - this.bufferPadding),
                  (n = r.end(a) + this.bufferPadding),
                  t >= i && e <= n)
                )
                  return !0;
                if (e <= i) return !1;
              }
              return !1;
            }),
            (e.onFragLoaded = function (t, e) {
              var r = e.frag,
                i = e.part;
              if ("initSegment" !== r.sn && !r.bitrateTest) {
                var n = i ? null : e,
                  a = Tr(r);
                this.fragments[a] = {
                  body: r,
                  appendedPTS: null,
                  loaded: n,
                  buffered: !1,
                  range: Object.create(null),
                };
              }
            }),
            (e.onBufferAppended = function (t, e) {
              var r = this,
                i = e.frag,
                n = e.part,
                a = e.timeRanges;
              if ("initSegment" !== i.sn) {
                var s = i.type;
                if (n) {
                  var o = this.activePartLists[s];
                  o || (this.activePartLists[s] = o = []), o.push(n);
                }
                (this.timeRanges = a),
                  Object.keys(a).forEach(function (t) {
                    var e = a[t];
                    r.detectEvictedFragments(t, e, s, n);
                  });
              }
            }),
            (e.onFragBuffered = function (t, e) {
              this.detectPartialFragments(e);
            }),
            (e.hasFragment = function (t) {
              var e = Tr(t);
              return !!this.fragments[e];
            }),
            (e.hasParts = function (t) {
              var e;
              return !(null == (e = this.activePartLists[t]) || !e.length);
            }),
            (e.removeFragmentsInRange = function (t, e, r, i, n) {
              var a = this;
              (i && !this.hasGaps) ||
                Object.keys(this.fragments).forEach(function (s) {
                  var o = a.fragments[s];
                  if (o) {
                    var l = o.body;
                    l.type !== r ||
                      (i && !l.gap) ||
                      (l.start < e &&
                        l.end > t &&
                        (o.buffered || n) &&
                        a.removeFragment(l));
                  }
                });
            }),
            (e.removeFragment = function (t) {
              var e = Tr(t);
              (t.stats.loaded = 0), t.clearElementaryStreamInfo();
              var r = this.activePartLists[t.type];
              if (r) {
                var i = t.sn;
                this.activePartLists[t.type] = r.filter(function (t) {
                  return t.fragment.sn !== i;
                });
              }
              delete this.fragments[e],
                t.endList && delete this.endListFragments[t.type];
            }),
            (e.removeAllFragments = function () {
              (this.fragments = Object.create(null)),
                (this.endListFragments = Object.create(null)),
                (this.activePartLists = Object.create(null)),
                (this.hasGaps = !1);
            }),
            t
          );
        })();
      function yr(t) {
        var e, r, i;
        return (
          t.buffered &&
          (t.body.gap ||
            (null == (e = t.range.video) ? void 0 : e.partial) ||
            (null == (r = t.range.audio) ? void 0 : r.partial) ||
            (null == (i = t.range.audiovideo) ? void 0 : i.partial))
        );
      }
      function Tr(t) {
        return t.type + "_" + t.level + "_" + t.urlId + "_" + t.sn;
      }
      var Er = Math.pow(2, 17),
        Sr = (function () {
          function t(t) {
            (this.config = void 0),
              (this.loader = null),
              (this.partLoadTimeout = -1),
              (this.config = t);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.loader && (this.loader.destroy(), (this.loader = null));
            }),
            (e.abort = function () {
              this.loader && this.loader.abort();
            }),
            (e.load = function (t, e) {
              var r = this,
                n = t.url;
              if (!n)
                return Promise.reject(
                  new Ar({
                    type: L.NETWORK_ERROR,
                    details: R.FRAG_LOAD_ERROR,
                    fatal: !1,
                    frag: t,
                    error: new Error(
                      "Fragment does not have a " + (n ? "part list" : "url")
                    ),
                    networkDetails: null,
                  })
                );
              this.abort();
              var a = this.config,
                s = a.fLoader,
                o = a.loader;
              return new Promise(function (l, u) {
                if ((r.loader && r.loader.destroy(), t.gap)) {
                  if (
                    t.tagList.some(function (t) {
                      return "GAP" === t[0];
                    })
                  )
                    return void u(Rr(t));
                  t.gap = !1;
                }
                var h = (r.loader = t.loader = s ? new s(a) : new o(a)),
                  d = Lr(t),
                  c = Xe(a.fragLoadPolicy.default),
                  f = {
                    loadPolicy: c,
                    timeout: c.maxLoadTimeMs,
                    maxRetry: 0,
                    retryDelay: 0,
                    maxRetryDelay: 0,
                    highWaterMark: "initSegment" === t.sn ? 1 / 0 : Er,
                  };
                (t.stats = h.stats),
                  h.load(d, f, {
                    onSuccess: function (e, i, n, a) {
                      r.resetLoader(t, h);
                      var s = e.data;
                      n.resetIV &&
                        t.decryptdata &&
                        ((t.decryptdata.iv = new Uint8Array(s.slice(0, 16))),
                        (s = s.slice(16))),
                        l({
                          frag: t,
                          part: null,
                          payload: s,
                          networkDetails: a,
                        });
                    },
                    onError: function (e, a, s, o) {
                      r.resetLoader(t, h),
                        u(
                          new Ar({
                            type: L.NETWORK_ERROR,
                            details: R.FRAG_LOAD_ERROR,
                            fatal: !1,
                            frag: t,
                            response: i({ url: n, data: void 0 }, e),
                            error: new Error(
                              "HTTP Error " + e.code + " " + e.text
                            ),
                            networkDetails: s,
                            stats: o,
                          })
                        );
                    },
                    onAbort: function (e, i, n) {
                      r.resetLoader(t, h),
                        u(
                          new Ar({
                            type: L.NETWORK_ERROR,
                            details: R.INTERNAL_ABORTED,
                            fatal: !1,
                            frag: t,
                            error: new Error("Aborted"),
                            networkDetails: n,
                            stats: e,
                          })
                        );
                    },
                    onTimeout: function (e, i, n) {
                      r.resetLoader(t, h),
                        u(
                          new Ar({
                            type: L.NETWORK_ERROR,
                            details: R.FRAG_LOAD_TIMEOUT,
                            fatal: !1,
                            frag: t,
                            error: new Error(
                              "Timeout after " + f.timeout + "ms"
                            ),
                            networkDetails: n,
                            stats: e,
                          })
                        );
                    },
                    onProgress: function (r, i, n, a) {
                      e &&
                        e({
                          frag: t,
                          part: null,
                          payload: n,
                          networkDetails: a,
                        });
                    },
                  });
              });
            }),
            (e.loadPart = function (t, e, r) {
              var n = this;
              this.abort();
              var a = this.config,
                s = a.fLoader,
                o = a.loader;
              return new Promise(function (l, u) {
                if ((n.loader && n.loader.destroy(), t.gap || e.gap))
                  u(Rr(t, e));
                else {
                  var h = (n.loader = t.loader = s ? new s(a) : new o(a)),
                    d = Lr(t, e),
                    c = Xe(a.fragLoadPolicy.default),
                    f = {
                      loadPolicy: c,
                      timeout: c.maxLoadTimeMs,
                      maxRetry: 0,
                      retryDelay: 0,
                      maxRetryDelay: 0,
                      highWaterMark: Er,
                    };
                  (e.stats = h.stats),
                    h.load(d, f, {
                      onSuccess: function (i, a, s, o) {
                        n.resetLoader(t, h), n.updateStatsFromPart(t, e);
                        var u = {
                          frag: t,
                          part: e,
                          payload: i.data,
                          networkDetails: o,
                        };
                        r(u), l(u);
                      },
                      onError: function (r, a, s, o) {
                        n.resetLoader(t, h),
                          u(
                            new Ar({
                              type: L.NETWORK_ERROR,
                              details: R.FRAG_LOAD_ERROR,
                              fatal: !1,
                              frag: t,
                              part: e,
                              response: i({ url: d.url, data: void 0 }, r),
                              error: new Error(
                                "HTTP Error " + r.code + " " + r.text
                              ),
                              networkDetails: s,
                              stats: o,
                            })
                          );
                      },
                      onAbort: function (r, i, a) {
                        (t.stats.aborted = e.stats.aborted),
                          n.resetLoader(t, h),
                          u(
                            new Ar({
                              type: L.NETWORK_ERROR,
                              details: R.INTERNAL_ABORTED,
                              fatal: !1,
                              frag: t,
                              part: e,
                              error: new Error("Aborted"),
                              networkDetails: a,
                              stats: r,
                            })
                          );
                      },
                      onTimeout: function (r, i, a) {
                        n.resetLoader(t, h),
                          u(
                            new Ar({
                              type: L.NETWORK_ERROR,
                              details: R.FRAG_LOAD_TIMEOUT,
                              fatal: !1,
                              frag: t,
                              part: e,
                              error: new Error(
                                "Timeout after " + f.timeout + "ms"
                              ),
                              networkDetails: a,
                              stats: r,
                            })
                          );
                      },
                    });
                }
              });
            }),
            (e.updateStatsFromPart = function (t, e) {
              var r = t.stats,
                i = e.stats,
                n = i.total;
              if (((r.loaded += i.loaded), n)) {
                var a = Math.round(t.duration / e.duration),
                  s = Math.min(Math.round(r.loaded / n), a),
                  o = (a - s) * Math.round(r.loaded / s);
                r.total = r.loaded + o;
              } else r.total = Math.max(r.loaded, r.total);
              var l = r.loading,
                u = i.loading;
              l.start
                ? (l.first += u.first - u.start)
                : ((l.start = u.start), (l.first = u.first)),
                (l.end = u.end);
            }),
            (e.resetLoader = function (t, e) {
              (t.loader = null),
                this.loader === e &&
                  (self.clearTimeout(this.partLoadTimeout),
                  (this.loader = null)),
                e.destroy();
            }),
            t
          );
        })();
      function Lr(t, e) {
        void 0 === e && (e = null);
        var r = e || t,
          i = {
            frag: t,
            part: e,
            responseType: "arraybuffer",
            url: r.url,
            headers: {},
            rangeStart: 0,
            rangeEnd: 0,
          },
          n = r.byteRangeStartOffset,
          a = r.byteRangeEndOffset;
        if (E(n) && E(a)) {
          var s,
            o = n,
            l = a;
          if (
            "initSegment" === t.sn &&
            "AES-128" === (null == (s = t.decryptdata) ? void 0 : s.method)
          ) {
            var u = a - n;
            u % 16 && (l = a + (16 - (u % 16))),
              0 !== n && ((i.resetIV = !0), (o = n - 16));
          }
          (i.rangeStart = o), (i.rangeEnd = l);
        }
        return i;
      }
      function Rr(t, e) {
        var r = new Error("GAP " + (t.gap ? "tag" : "attribute") + " found"),
          i = {
            type: L.MEDIA_ERROR,
            details: R.FRAG_GAP,
            fatal: !1,
            frag: t,
            error: r,
            networkDetails: null,
          };
        return e && (i.part = e), ((e || t).stats.aborted = !0), new Ar(i);
      }
      var Ar = (function (t) {
          function e(e) {
            var r;
            return (
              ((r = t.call(this, e.error.message) || this).data = void 0),
              (r.data = e),
              r
            );
          }
          return l(e, t), e;
        })(f(Error)),
        kr = (function () {
          function t(t) {
            (this.config = void 0),
              (this.keyUriToKeyInfo = {}),
              (this.emeController = null),
              (this.config = t);
          }
          var e = t.prototype;
          return (
            (e.abort = function (t) {
              for (var e in this.keyUriToKeyInfo) {
                var r = this.keyUriToKeyInfo[e].loader;
                if (r) {
                  if (t && t !== r.context.frag.type) return;
                  r.abort();
                }
              }
            }),
            (e.detach = function () {
              for (var t in this.keyUriToKeyInfo) {
                var e = this.keyUriToKeyInfo[t];
                (e.mediaKeySessionContext ||
                  e.decryptdata.isCommonEncryption) &&
                  delete this.keyUriToKeyInfo[t];
              }
            }),
            (e.destroy = function () {
              for (var t in (this.detach(), this.keyUriToKeyInfo)) {
                var e = this.keyUriToKeyInfo[t].loader;
                e && e.destroy();
              }
              this.keyUriToKeyInfo = {};
            }),
            (e.createKeyLoadError = function (t, e, r, i, n) {
              return (
                void 0 === e && (e = R.KEY_LOAD_ERROR),
                new Ar({
                  type: L.NETWORK_ERROR,
                  details: e,
                  fatal: !1,
                  frag: t,
                  response: n,
                  error: r,
                  networkDetails: i,
                })
              );
            }),
            (e.loadClear = function (t, e) {
              var r = this;
              if (this.emeController && this.config.emeEnabled)
                for (
                  var i = t.sn,
                    n = t.cc,
                    a = function () {
                      var t = e[s];
                      if (
                        n <= t.cc &&
                        ("initSegment" === i ||
                          "initSegment" === t.sn ||
                          i < t.sn)
                      )
                        return (
                          r.emeController
                            .selectKeySystemFormat(t)
                            .then(function (e) {
                              t.setKeyFormat(e);
                            }),
                          "break"
                        );
                    },
                    s = 0;
                  s < e.length && "break" !== a();
                  s++
                );
            }),
            (e.load = function (t) {
              var e = this;
              return !t.decryptdata && t.encrypted && this.emeController
                ? this.emeController
                    .selectKeySystemFormat(t)
                    .then(function (r) {
                      return e.loadInternal(t, r);
                    })
                : this.loadInternal(t);
            }),
            (e.loadInternal = function (t, e) {
              var r, i;
              e && t.setKeyFormat(e);
              var n = t.decryptdata;
              if (!n) {
                var a = new Error(
                  e
                    ? "Expected frag.decryptdata to be defined after setting format " +
                      e
                    : "Missing decryption data on fragment in onKeyLoading"
                );
                return Promise.reject(
                  this.createKeyLoadError(t, R.KEY_LOAD_ERROR, a)
                );
              }
              var s = n.uri;
              if (!s)
                return Promise.reject(
                  this.createKeyLoadError(
                    t,
                    R.KEY_LOAD_ERROR,
                    new Error('Invalid key URI: "' + s + '"')
                  )
                );
              var o,
                l = this.keyUriToKeyInfo[s];
              if (null != (r = l) && r.decryptdata.key)
                return (
                  (n.key = l.decryptdata.key),
                  Promise.resolve({ frag: t, keyInfo: l })
                );
              if (null != (i = l) && i.keyLoadPromise)
                switch (
                  null == (o = l.mediaKeySessionContext) ? void 0 : o.keyStatus
                ) {
                  case void 0:
                  case "status-pending":
                  case "usable":
                  case "usable-in-future":
                    return l.keyLoadPromise.then(function (e) {
                      return (
                        (n.key = e.keyInfo.decryptdata.key),
                        { frag: t, keyInfo: l }
                      );
                    });
                }
              switch (
                ((l = this.keyUriToKeyInfo[s] =
                  {
                    decryptdata: n,
                    keyLoadPromise: null,
                    loader: null,
                    mediaKeySessionContext: null,
                  }),
                n.method)
              ) {
                case "ISO-23001-7":
                case "SAMPLE-AES":
                case "SAMPLE-AES-CENC":
                case "SAMPLE-AES-CTR":
                  return "identity" === n.keyFormat
                    ? this.loadKeyHTTP(l, t)
                    : this.loadKeyEME(l, t);
                case "AES-128":
                  return this.loadKeyHTTP(l, t);
                default:
                  return Promise.reject(
                    this.createKeyLoadError(
                      t,
                      R.KEY_LOAD_ERROR,
                      new Error(
                        'Key supplied with unsupported METHOD: "' +
                          n.method +
                          '"'
                      )
                    )
                  );
              }
            }),
            (e.loadKeyEME = function (t, e) {
              var r = { frag: e, keyInfo: t };
              if (this.emeController && this.config.emeEnabled) {
                var i = this.emeController.loadKey(r);
                if (i)
                  return (t.keyLoadPromise = i.then(function (e) {
                    return (t.mediaKeySessionContext = e), r;
                  })).catch(function (e) {
                    throw ((t.keyLoadPromise = null), e);
                  });
              }
              return Promise.resolve(r);
            }),
            (e.loadKeyHTTP = function (t, e) {
              var r = this,
                n = this.config,
                a = new (0, n.loader)(n);
              return (
                (e.keyLoader = t.loader = a),
                (t.keyLoadPromise = new Promise(function (s, o) {
                  var l = {
                      keyInfo: t,
                      frag: e,
                      responseType: "arraybuffer",
                      url: t.decryptdata.uri,
                    },
                    u = n.keyLoadPolicy.default,
                    h = {
                      loadPolicy: u,
                      timeout: u.maxLoadTimeMs,
                      maxRetry: 0,
                      retryDelay: 0,
                      maxRetryDelay: 0,
                    },
                    d = {
                      onSuccess: function (t, e, i, n) {
                        var a = i.frag,
                          l = i.keyInfo,
                          u = i.url;
                        if (!a.decryptdata || l !== r.keyUriToKeyInfo[u])
                          return o(
                            r.createKeyLoadError(
                              a,
                              R.KEY_LOAD_ERROR,
                              new Error(
                                "after key load, decryptdata unset or changed"
                              ),
                              n
                            )
                          );
                        (l.decryptdata.key = a.decryptdata.key =
                          new Uint8Array(t.data)),
                          (a.keyLoader = null),
                          (l.loader = null),
                          s({ frag: a, keyInfo: l });
                      },
                      onError: function (t, n, a, s) {
                        r.resetLoader(n),
                          o(
                            r.createKeyLoadError(
                              e,
                              R.KEY_LOAD_ERROR,
                              new Error(
                                "HTTP Error " +
                                  t.code +
                                  " loading key " +
                                  t.text
                              ),
                              a,
                              i({ url: l.url, data: void 0 }, t)
                            )
                          );
                      },
                      onTimeout: function (t, i, n) {
                        r.resetLoader(i),
                          o(
                            r.createKeyLoadError(
                              e,
                              R.KEY_LOAD_TIMEOUT,
                              new Error("key loading timed out"),
                              n
                            )
                          );
                      },
                      onAbort: function (t, i, n) {
                        r.resetLoader(i),
                          o(
                            r.createKeyLoadError(
                              e,
                              R.INTERNAL_ABORTED,
                              new Error("key loading aborted"),
                              n
                            )
                          );
                      },
                    };
                  a.load(l, h, d);
                }))
              );
            }),
            (e.resetLoader = function (t) {
              var e = t.frag,
                r = t.keyInfo,
                i = t.url,
                n = r.loader;
              e.keyLoader === n && ((e.keyLoader = null), (r.loader = null)),
                delete this.keyUriToKeyInfo[i],
                n && n.destroy();
            }),
            t
          );
        })(),
        br = (function () {
          function t() {
            (this._boundTick = void 0),
              (this._tickTimer = null),
              (this._tickInterval = null),
              (this._tickCallCount = 0),
              (this._boundTick = this.tick.bind(this));
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.onHandlerDestroying(), this.onHandlerDestroyed();
            }),
            (e.onHandlerDestroying = function () {
              this.clearNextTick(), this.clearInterval();
            }),
            (e.onHandlerDestroyed = function () {}),
            (e.hasInterval = function () {
              return !!this._tickInterval;
            }),
            (e.hasNextTick = function () {
              return !!this._tickTimer;
            }),
            (e.setInterval = function (t) {
              return (
                !this._tickInterval &&
                ((this._tickCallCount = 0),
                (this._tickInterval = self.setInterval(this._boundTick, t)),
                !0)
              );
            }),
            (e.clearInterval = function () {
              return (
                !!this._tickInterval &&
                (self.clearInterval(this._tickInterval),
                (this._tickInterval = null),
                !0)
              );
            }),
            (e.clearNextTick = function () {
              return (
                !!this._tickTimer &&
                (self.clearTimeout(this._tickTimer),
                (this._tickTimer = null),
                !0)
              );
            }),
            (e.tick = function () {
              this._tickCallCount++,
                1 === this._tickCallCount &&
                  (this.doTick(),
                  this._tickCallCount > 1 && this.tickImmediate(),
                  (this._tickCallCount = 0));
            }),
            (e.tickImmediate = function () {
              this.clearNextTick(),
                (this._tickTimer = self.setTimeout(this._boundTick, 0));
            }),
            (e.doTick = function () {}),
            t
          );
        })(),
        Dr = {
          length: 0,
          start: function () {
            return 0;
          },
          end: function () {
            return 0;
          },
        },
        Ir = (function () {
          function t() {}
          return (
            (t.isBuffered = function (e, r) {
              try {
                if (e)
                  for (var i = t.getBuffered(e), n = 0; n < i.length; n++)
                    if (r >= i.start(n) && r <= i.end(n)) return !0;
              } catch (t) {}
              return !1;
            }),
            (t.bufferInfo = function (e, r, i) {
              try {
                if (e) {
                  var n,
                    a = t.getBuffered(e),
                    s = [];
                  for (n = 0; n < a.length; n++)
                    s.push({ start: a.start(n), end: a.end(n) });
                  return this.bufferedInfo(s, r, i);
                }
              } catch (t) {}
              return { len: 0, start: r, end: r, nextStart: void 0 };
            }),
            (t.bufferedInfo = function (t, e, r) {
              (e = Math.max(0, e)),
                t.sort(function (t, e) {
                  var r = t.start - e.start;
                  return r || e.end - t.end;
                });
              var i = [];
              if (r)
                for (var n = 0; n < t.length; n++) {
                  var a = i.length;
                  if (a) {
                    var s = i[a - 1].end;
                    t[n].start - s < r
                      ? t[n].end > s && (i[a - 1].end = t[n].end)
                      : i.push(t[n]);
                  } else i.push(t[n]);
                }
              else i = t;
              for (var o, l = 0, u = e, h = e, d = 0; d < i.length; d++) {
                var c = i[d].start,
                  f = i[d].end;
                if (e + r >= c && e < f) (u = c), (l = (h = f) - e);
                else if (e + r < c) {
                  o = c;
                  break;
                }
              }
              return { len: l, start: u || 0, end: h || 0, nextStart: o };
            }),
            (t.getBuffered = function (t) {
              try {
                return t.buffered;
              } catch (t) {
                return w.log("failed to get media.buffered", t), Dr;
              }
            }),
            t
          );
        })(),
        wr = function (t, e, r, i, n, a) {
          void 0 === i && (i = 0),
            void 0 === n && (n = -1),
            void 0 === a && (a = !1),
            (this.level = void 0),
            (this.sn = void 0),
            (this.part = void 0),
            (this.id = void 0),
            (this.size = void 0),
            (this.partial = void 0),
            (this.transmuxing = {
              start: 0,
              executeStart: 0,
              executeEnd: 0,
              end: 0,
            }),
            (this.buffering = {
              audio: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
              video: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
              audiovideo: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
            }),
            (this.level = t),
            (this.sn = e),
            (this.id = r),
            (this.size = i),
            (this.part = n),
            (this.partial = a);
        };
      function Cr(t, e) {
        for (var r = null, i = 0, n = t.length; i < n; i++) {
          var a = t[i];
          if (a && a.cc === e) {
            r = a;
            break;
          }
        }
        return r;
      }
      function _r(t, e) {
        if (t) {
          var r = t.start + e;
          (t.start = t.startPTS = r), (t.endPTS = r + t.duration);
        }
      }
      function Pr(t, e) {
        for (var r = e.fragments, i = 0, n = r.length; i < n; i++) _r(r[i], t);
        e.fragmentHint && _r(e.fragmentHint, t), (e.alignedSliding = !0);
      }
      function xr(t, e, r) {
        e &&
          ((function (t, e, r) {
            if (
              (function (t, e, r) {
                return !(
                  !e.details ||
                  !(r.endCC > r.startCC || (t && t.cc < r.startCC))
                );
              })(t, r, e)
            ) {
              var i = (function (t, e, r) {
                var i = t.fragments,
                  n = e.fragments;
                if (n.length && i.length) {
                  var a = Cr(i, n[0].cc);
                  if (a && (!a || a.startPTS)) return a;
                  w.log("No frag in previous level to align on");
                } else w.log("No fragments to align");
              })(r.details, e);
              i &&
                E(i.start) &&
                (w.log(
                  "Adjusting PTS using last level due to CC increase within current level " +
                    e.url
                ),
                Pr(i.start, e));
            }
          })(t, r, e),
          !r.alignedSliding &&
            e.details &&
            (function (t, e) {
              if (
                e.fragments.length &&
                t.hasProgramDateTime &&
                e.hasProgramDateTime
              ) {
                var r = e.fragments[0].programDateTime,
                  i = t.fragments[0].programDateTime,
                  n = (i - r) / 1e3 + e.fragments[0].start;
                n &&
                  E(n) &&
                  (w.log(
                    "Adjusting PTS using programDateTime delta " +
                      (i - r) +
                      "ms, sliding:" +
                      n.toFixed(3) +
                      " " +
                      t.url +
                      " "
                  ),
                  Pr(n, t));
              }
            })(r, e.details),
          r.alignedSliding ||
            !e.details ||
            r.skippedSegments ||
            Ke(e.details, r));
      }
      function Fr(t, e) {
        if (t.hasProgramDateTime && e.hasProgramDateTime) {
          var r = t.fragments,
            i = e.fragments;
          if (r.length && i.length) {
            var n = i[Math.round(i.length / 2) - 1],
              a = Cr(r, n.cc) || r[Math.round(r.length / 2) - 1],
              s = n.programDateTime,
              o = a.programDateTime;
            null !== s &&
              null !== o &&
              Pr((o - s) / 1e3 - (a.start - n.start), t);
          }
        }
      }
      var Mr = (function () {
          function t(t, e) {
            (this.subtle = void 0),
              (this.aesIV = void 0),
              (this.subtle = t),
              (this.aesIV = e);
          }
          return (
            (t.prototype.decrypt = function (t, e) {
              return this.subtle.decrypt(
                { name: "AES-CBC", iv: this.aesIV },
                e,
                t
              );
            }),
            t
          );
        })(),
        Or = (function () {
          function t(t, e) {
            (this.subtle = void 0),
              (this.key = void 0),
              (this.subtle = t),
              (this.key = e);
          }
          return (
            (t.prototype.expandKey = function () {
              return this.subtle.importKey(
                "raw",
                this.key,
                { name: "AES-CBC" },
                !1,
                ["encrypt", "decrypt"]
              );
            }),
            t
          );
        })(),
        Nr = (function () {
          function t() {
            (this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]),
              (this.subMix = [
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
              ]),
              (this.invSubMix = [
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
                new Uint32Array(256),
              ]),
              (this.sBox = new Uint32Array(256)),
              (this.invSBox = new Uint32Array(256)),
              (this.key = new Uint32Array(0)),
              (this.ksRows = 0),
              (this.keySize = 0),
              (this.keySchedule = void 0),
              (this.invKeySchedule = void 0),
              this.initTable();
          }
          var e = t.prototype;
          return (
            (e.uint8ArrayToUint32Array_ = function (t) {
              for (
                var e = new DataView(t), r = new Uint32Array(4), i = 0;
                i < 4;
                i++
              )
                r[i] = e.getUint32(4 * i);
              return r;
            }),
            (e.initTable = function () {
              var t = this.sBox,
                e = this.invSBox,
                r = this.subMix,
                i = r[0],
                n = r[1],
                a = r[2],
                s = r[3],
                o = this.invSubMix,
                l = o[0],
                u = o[1],
                h = o[2],
                d = o[3],
                c = new Uint32Array(256),
                f = 0,
                g = 0,
                v = 0;
              for (v = 0; v < 256; v++)
                c[v] = v < 128 ? v << 1 : (v << 1) ^ 283;
              for (v = 0; v < 256; v++) {
                var m = g ^ (g << 1) ^ (g << 2) ^ (g << 3) ^ (g << 4);
                (m = (m >>> 8) ^ (255 & m) ^ 99), (t[f] = m), (e[m] = f);
                var p = c[f],
                  y = c[p],
                  T = c[y],
                  E = (257 * c[m]) ^ (16843008 * m);
                (i[f] = (E << 24) | (E >>> 8)),
                  (n[f] = (E << 16) | (E >>> 16)),
                  (a[f] = (E << 8) | (E >>> 24)),
                  (s[f] = E),
                  (E =
                    (16843009 * T) ^ (65537 * y) ^ (257 * p) ^ (16843008 * f)),
                  (l[m] = (E << 24) | (E >>> 8)),
                  (u[m] = (E << 16) | (E >>> 16)),
                  (h[m] = (E << 8) | (E >>> 24)),
                  (d[m] = E),
                  f ? ((f = p ^ c[c[c[T ^ p]]]), (g ^= c[c[g]])) : (f = g = 1);
              }
            }),
            (e.expandKey = function (t) {
              for (
                var e = this.uint8ArrayToUint32Array_(t), r = !0, i = 0;
                i < e.length && r;

              )
                (r = e[i] === this.key[i]), i++;
              if (!r) {
                this.key = e;
                var n = (this.keySize = e.length);
                if (4 !== n && 6 !== n && 8 !== n)
                  throw new Error("Invalid aes key size=" + n);
                var a,
                  s,
                  o,
                  l,
                  u = (this.ksRows = 4 * (n + 6 + 1)),
                  h = (this.keySchedule = new Uint32Array(u)),
                  d = (this.invKeySchedule = new Uint32Array(u)),
                  c = this.sBox,
                  f = this.rcon,
                  g = this.invSubMix,
                  v = g[0],
                  m = g[1],
                  p = g[2],
                  y = g[3];
                for (a = 0; a < u; a++)
                  a < n
                    ? (o = h[a] = e[a])
                    : ((l = o),
                      a % n == 0
                        ? ((l =
                            (c[(l = (l << 8) | (l >>> 24)) >>> 24] << 24) |
                            (c[(l >>> 16) & 255] << 16) |
                            (c[(l >>> 8) & 255] << 8) |
                            c[255 & l]),
                          (l ^= f[(a / n) | 0] << 24))
                        : n > 6 &&
                          a % n == 4 &&
                          (l =
                            (c[l >>> 24] << 24) |
                            (c[(l >>> 16) & 255] << 16) |
                            (c[(l >>> 8) & 255] << 8) |
                            c[255 & l]),
                      (h[a] = o = (h[a - n] ^ l) >>> 0));
                for (s = 0; s < u; s++)
                  (a = u - s),
                    (l = 3 & s ? h[a] : h[a - 4]),
                    (d[s] =
                      s < 4 || a <= 4
                        ? l
                        : v[c[l >>> 24]] ^
                          m[c[(l >>> 16) & 255]] ^
                          p[c[(l >>> 8) & 255]] ^
                          y[c[255 & l]]),
                    (d[s] = d[s] >>> 0);
              }
            }),
            (e.networkToHostOrderSwap = function (t) {
              return (
                (t << 24) |
                ((65280 & t) << 8) |
                ((16711680 & t) >> 8) |
                (t >>> 24)
              );
            }),
            (e.decrypt = function (t, e, r) {
              for (
                var i,
                  n,
                  a,
                  s,
                  o,
                  l,
                  u,
                  h,
                  d,
                  c,
                  f,
                  g,
                  v,
                  m,
                  p = this.keySize + 6,
                  y = this.invKeySchedule,
                  T = this.invSBox,
                  E = this.invSubMix,
                  S = E[0],
                  L = E[1],
                  R = E[2],
                  A = E[3],
                  k = this.uint8ArrayToUint32Array_(r),
                  b = k[0],
                  D = k[1],
                  I = k[2],
                  w = k[3],
                  C = new Int32Array(t),
                  _ = new Int32Array(C.length),
                  P = this.networkToHostOrderSwap;
                e < C.length;

              ) {
                for (
                  d = P(C[e]),
                    c = P(C[e + 1]),
                    f = P(C[e + 2]),
                    g = P(C[e + 3]),
                    o = d ^ y[0],
                    l = g ^ y[1],
                    u = f ^ y[2],
                    h = c ^ y[3],
                    v = 4,
                    m = 1;
                  m < p;
                  m++
                )
                  (i =
                    S[o >>> 24] ^
                    L[(l >> 16) & 255] ^
                    R[(u >> 8) & 255] ^
                    A[255 & h] ^
                    y[v]),
                    (n =
                      S[l >>> 24] ^
                      L[(u >> 16) & 255] ^
                      R[(h >> 8) & 255] ^
                      A[255 & o] ^
                      y[v + 1]),
                    (a =
                      S[u >>> 24] ^
                      L[(h >> 16) & 255] ^
                      R[(o >> 8) & 255] ^
                      A[255 & l] ^
                      y[v + 2]),
                    (s =
                      S[h >>> 24] ^
                      L[(o >> 16) & 255] ^
                      R[(l >> 8) & 255] ^
                      A[255 & u] ^
                      y[v + 3]),
                    (o = i),
                    (l = n),
                    (u = a),
                    (h = s),
                    (v += 4);
                (i =
                  (T[o >>> 24] << 24) ^
                  (T[(l >> 16) & 255] << 16) ^
                  (T[(u >> 8) & 255] << 8) ^
                  T[255 & h] ^
                  y[v]),
                  (n =
                    (T[l >>> 24] << 24) ^
                    (T[(u >> 16) & 255] << 16) ^
                    (T[(h >> 8) & 255] << 8) ^
                    T[255 & o] ^
                    y[v + 1]),
                  (a =
                    (T[u >>> 24] << 24) ^
                    (T[(h >> 16) & 255] << 16) ^
                    (T[(o >> 8) & 255] << 8) ^
                    T[255 & l] ^
                    y[v + 2]),
                  (s =
                    (T[h >>> 24] << 24) ^
                    (T[(o >> 16) & 255] << 16) ^
                    (T[(l >> 8) & 255] << 8) ^
                    T[255 & u] ^
                    y[v + 3]),
                  (_[e] = P(i ^ b)),
                  (_[e + 1] = P(s ^ D)),
                  (_[e + 2] = P(a ^ I)),
                  (_[e + 3] = P(n ^ w)),
                  (b = d),
                  (D = c),
                  (I = f),
                  (w = g),
                  (e += 4);
              }
              return _.buffer;
            }),
            t
          );
        })(),
        Ur = (function () {
          function t(t, e) {
            var r = (void 0 === e ? {} : e).removePKCS7Padding,
              i = void 0 === r || r;
            if (
              ((this.logEnabled = !0),
              (this.removePKCS7Padding = void 0),
              (this.subtle = null),
              (this.softwareDecrypter = null),
              (this.key = null),
              (this.fastAesKey = null),
              (this.remainderData = null),
              (this.currentIV = null),
              (this.currentResult = null),
              (this.useSoftware = void 0),
              (this.useSoftware = t.enableSoftwareAES),
              (this.removePKCS7Padding = i),
              i)
            )
              try {
                var n = self.crypto;
                n && (this.subtle = n.subtle || n.webkitSubtle);
              } catch (t) {}
            null === this.subtle && (this.useSoftware = !0);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.subtle = null),
                (this.softwareDecrypter = null),
                (this.key = null),
                (this.fastAesKey = null),
                (this.remainderData = null),
                (this.currentIV = null),
                (this.currentResult = null);
            }),
            (e.isSync = function () {
              return this.useSoftware;
            }),
            (e.flush = function () {
              var t = this.currentResult,
                e = this.remainderData;
              if (!t || e) return this.reset(), null;
              var r,
                i,
                n,
                a = new Uint8Array(t);
              return (
                this.reset(),
                this.removePKCS7Padding
                  ? ((i = (r = a).byteLength),
                    (n = i && new DataView(r.buffer).getUint8(i - 1))
                      ? rt(r, 0, i - n)
                      : r)
                  : a
              );
            }),
            (e.reset = function () {
              (this.currentResult = null),
                (this.currentIV = null),
                (this.remainderData = null),
                this.softwareDecrypter && (this.softwareDecrypter = null);
            }),
            (e.decrypt = function (t, e, r) {
              var i = this;
              return this.useSoftware
                ? new Promise(function (n, a) {
                    i.softwareDecrypt(new Uint8Array(t), e, r);
                    var s = i.flush();
                    s
                      ? n(s.buffer)
                      : a(
                          new Error("[softwareDecrypt] Failed to decrypt data")
                        );
                  })
                : this.webCryptoDecrypt(new Uint8Array(t), e, r);
            }),
            (e.softwareDecrypt = function (t, e, r) {
              var i = this.currentIV,
                n = this.currentResult,
                a = this.remainderData;
              this.logOnce("JS AES decrypt"),
                a && ((t = xt(a, t)), (this.remainderData = null));
              var s = this.getValidChunk(t);
              if (!s.length) return null;
              i && (r = i);
              var o = this.softwareDecrypter;
              o || (o = this.softwareDecrypter = new Nr()), o.expandKey(e);
              var l = n;
              return (
                (this.currentResult = o.decrypt(s.buffer, 0, r)),
                (this.currentIV = rt(s, -16).buffer),
                l || null
              );
            }),
            (e.webCryptoDecrypt = function (t, e, r) {
              var i = this,
                n = this.subtle;
              return (
                (this.key === e && this.fastAesKey) ||
                  ((this.key = e), (this.fastAesKey = new Or(n, e))),
                this.fastAesKey
                  .expandKey()
                  .then(function (e) {
                    return n
                      ? (i.logOnce("WebCrypto AES decrypt"),
                        new Mr(n, new Uint8Array(r)).decrypt(t.buffer, e))
                      : Promise.reject(new Error("web crypto not initialized"));
                  })
                  .catch(function (n) {
                    return (
                      w.warn(
                        "[decrypter]: WebCrypto Error, disable WebCrypto API, " +
                          n.name +
                          ": " +
                          n.message
                      ),
                      i.onWebCryptoError(t, e, r)
                    );
                  })
              );
            }),
            (e.onWebCryptoError = function (t, e, r) {
              (this.useSoftware = !0),
                (this.logEnabled = !0),
                this.softwareDecrypt(t, e, r);
              var i = this.flush();
              if (i) return i.buffer;
              throw new Error(
                "WebCrypto and softwareDecrypt: failed to decrypt data"
              );
            }),
            (e.getValidChunk = function (t) {
              var e = t,
                r = t.length - (t.length % 16);
              return (
                r !== t.length &&
                  ((e = rt(t, 0, r)), (this.remainderData = rt(t, r))),
                e
              );
            }),
            (e.logOnce = function (t) {
              this.logEnabled &&
                (w.log("[decrypter]: " + t), (this.logEnabled = !1));
            }),
            t
          );
        })(),
        Br = function (t) {
          for (var e = "", r = t.length, i = 0; i < r; i++)
            e += "[" + t.start(i).toFixed(3) + "-" + t.end(i).toFixed(3) + "]";
          return e;
        },
        Gr = "STOPPED",
        Kr = "IDLE",
        Hr = "KEY_LOADING",
        Vr = "FRAG_LOADING",
        Yr = "FRAG_LOADING_WAITING_RETRY",
        Wr = "WAITING_TRACK",
        jr = "PARSING",
        qr = "PARSED",
        Xr = "ENDED",
        zr = "ERROR",
        Qr = "WAITING_INIT_PTS",
        $r = "WAITING_LEVEL",
        Jr = (function (t) {
          function e(e, r, i, n, a) {
            var s;
            return (
              ((s = t.call(this) || this).hls = void 0),
              (s.fragPrevious = null),
              (s.fragCurrent = null),
              (s.fragmentTracker = void 0),
              (s.transmuxer = null),
              (s._state = Gr),
              (s.playlistType = void 0),
              (s.media = null),
              (s.mediaBuffer = null),
              (s.config = void 0),
              (s.bitrateTest = !1),
              (s.lastCurrentTime = 0),
              (s.nextLoadPosition = 0),
              (s.startPosition = 0),
              (s.startTimeOffset = null),
              (s.loadedmetadata = !1),
              (s.retryDate = 0),
              (s.levels = null),
              (s.fragmentLoader = void 0),
              (s.keyLoader = void 0),
              (s.levelLastLoaded = null),
              (s.startFragRequested = !1),
              (s.decrypter = void 0),
              (s.initPTS = []),
              (s.onvseeking = null),
              (s.onvended = null),
              (s.logPrefix = ""),
              (s.log = void 0),
              (s.warn = void 0),
              (s.playlistType = a),
              (s.logPrefix = n),
              (s.log = w.log.bind(w, n + ":")),
              (s.warn = w.warn.bind(w, n + ":")),
              (s.hls = e),
              (s.fragmentLoader = new Sr(e.config)),
              (s.keyLoader = i),
              (s.fragmentTracker = r),
              (s.config = e.config),
              (s.decrypter = new Ur(e.config)),
              e.on(
                S.MANIFEST_LOADED,
                s.onManifestLoaded,
                (function (t) {
                  if (void 0 === t)
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return t;
                })(s)
              ),
              s
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.doTick = function () {
              this.onTickEnd();
            }),
            (r.onTickEnd = function () {}),
            (r.startLoad = function (t) {}),
            (r.stopLoad = function () {
              this.fragmentLoader.abort(),
                this.keyLoader.abort(this.playlistType);
              var t = this.fragCurrent;
              null != t &&
                t.loader &&
                (t.abortRequests(), this.fragmentTracker.removeFragment(t)),
                this.resetTransmuxer(),
                (this.fragCurrent = null),
                (this.fragPrevious = null),
                this.clearInterval(),
                this.clearNextTick(),
                (this.state = Gr);
            }),
            (r._streamEnded = function (t, e) {
              if (e.live || t.nextStart || !t.end || !this.media) return !1;
              var r = e.partList;
              if (null != r && r.length) {
                var i = r[r.length - 1];
                return Ir.isBuffered(this.media, i.start + i.duration / 2);
              }
              var n = e.fragments[e.fragments.length - 1].type;
              return this.fragmentTracker.isEndListAppended(n);
            }),
            (r.getLevelDetails = function () {
              var t;
              if (this.levels && null !== this.levelLastLoaded)
                return null == (t = this.levels[this.levelLastLoaded])
                  ? void 0
                  : t.details;
            }),
            (r.onMediaAttached = function (t, e) {
              var r = (this.media = this.mediaBuffer = e.media);
              (this.onvseeking = this.onMediaSeeking.bind(this)),
                (this.onvended = this.onMediaEnded.bind(this)),
                r.addEventListener("seeking", this.onvseeking),
                r.addEventListener("ended", this.onvended);
              var i = this.config;
              this.levels &&
                i.autoStartLoad &&
                this.state === Gr &&
                this.startLoad(i.startPosition);
            }),
            (r.onMediaDetaching = function () {
              var t = this.media;
              null != t &&
                t.ended &&
                (this.log("MSE detaching and video ended, reset startPosition"),
                (this.startPosition = this.lastCurrentTime = 0)),
                t &&
                  this.onvseeking &&
                  this.onvended &&
                  (t.removeEventListener("seeking", this.onvseeking),
                  t.removeEventListener("ended", this.onvended),
                  (this.onvseeking = this.onvended = null)),
                this.keyLoader && this.keyLoader.detach(),
                (this.media = this.mediaBuffer = null),
                (this.loadedmetadata = !1),
                this.fragmentTracker.removeAllFragments(),
                this.stopLoad();
            }),
            (r.onMediaSeeking = function () {
              var t = this.config,
                e = this.fragCurrent,
                r = this.media,
                i = this.mediaBuffer,
                n = this.state,
                a = r ? r.currentTime : 0,
                s = Ir.bufferInfo(i || r, a, t.maxBufferHole);
              if (
                (this.log(
                  "media seeking to " +
                    (E(a) ? a.toFixed(3) : a) +
                    ", state: " +
                    n
                ),
                this.state === Xr)
              )
                this.resetLoadingState();
              else if (e) {
                var o = t.maxFragLookUpTolerance,
                  l = e.start - o,
                  u = e.start + e.duration + o;
                if (!s.len || u < s.start || l > s.end) {
                  var h = a > u;
                  (a < l || h) &&
                    (h &&
                      e.loader &&
                      (this.log(
                        "seeking outside of buffer while fragment load in progress, cancel fragment load"
                      ),
                      e.abortRequests(),
                      this.resetLoadingState()),
                    (this.fragPrevious = null));
                }
              }
              r &&
                (this.fragmentTracker.removeFragmentsInRange(
                  a,
                  1 / 0,
                  this.playlistType,
                  !0
                ),
                (this.lastCurrentTime = a)),
                this.loadedmetadata ||
                  s.len ||
                  (this.nextLoadPosition = this.startPosition = a),
                this.tickImmediate();
            }),
            (r.onMediaEnded = function () {
              this.startPosition = this.lastCurrentTime = 0;
            }),
            (r.onManifestLoaded = function (t, e) {
              (this.startTimeOffset = e.startTimeOffset), (this.initPTS = []);
            }),
            (r.onHandlerDestroying = function () {
              this.stopLoad(), t.prototype.onHandlerDestroying.call(this);
            }),
            (r.onHandlerDestroyed = function () {
              (this.state = Gr),
                this.fragmentLoader && this.fragmentLoader.destroy(),
                this.keyLoader && this.keyLoader.destroy(),
                this.decrypter && this.decrypter.destroy(),
                (this.hls =
                  this.log =
                  this.warn =
                  this.decrypter =
                  this.keyLoader =
                  this.fragmentLoader =
                  this.fragmentTracker =
                    null),
                t.prototype.onHandlerDestroyed.call(this);
            }),
            (r.loadFragment = function (t, e, r) {
              this._loadFragForPlayback(t, e, r);
            }),
            (r._loadFragForPlayback = function (t, e, r) {
              var i = this;
              this._doFragLoad(t, e, r, function (e) {
                if (i.fragContextChanged(t))
                  return (
                    i.warn(
                      "Fragment " +
                        t.sn +
                        (e.part ? " p: " + e.part.index : "") +
                        " of level " +
                        t.level +
                        " was dropped during download."
                    ),
                    void i.fragmentTracker.removeFragment(t)
                  );
                t.stats.chunkCount++, i._handleFragmentLoadProgress(e);
              })
                .then(function (e) {
                  if (e) {
                    var r = i.state;
                    i.fragContextChanged(t)
                      ? (r === Vr || (!i.fragCurrent && r === jr)) &&
                        (i.fragmentTracker.removeFragment(t), (i.state = Kr))
                      : ("payload" in e &&
                          (i.log(
                            "Loaded fragment " + t.sn + " of level " + t.level
                          ),
                          i.hls.trigger(S.FRAG_LOADED, e)),
                        i._handleFragmentLoadComplete(e));
                  }
                })
                .catch(function (e) {
                  i.state !== Gr &&
                    i.state !== zr &&
                    (i.warn(e), i.resetFragmentLoading(t));
                });
            }),
            (r.clearTrackerIfNeeded = function (t) {
              var e,
                r = this.fragmentTracker;
              if (r.getState(t) === gr) {
                var i = t.type,
                  n = this.getFwdBufferInfo(this.mediaBuffer, i),
                  a = Math.max(
                    t.duration,
                    n ? n.len : this.config.maxBufferLength
                  );
                this.reduceMaxBufferLength(a) && r.removeFragment(t);
              } else
                0 ===
                (null == (e = this.mediaBuffer) ? void 0 : e.buffered.length)
                  ? r.removeAllFragments()
                  : r.hasParts(t.type) &&
                    (r.detectPartialFragments({
                      frag: t,
                      part: null,
                      stats: t.stats,
                      id: t.type,
                    }),
                    r.getState(t) === vr && r.removeFragment(t));
            }),
            (r.flushMainBuffer = function (t, e, r) {
              if ((void 0 === r && (r = null), t - e)) {
                var i = { startOffset: t, endOffset: e, type: r };
                this.hls.trigger(S.BUFFER_FLUSHING, i);
              }
            }),
            (r._loadInitSegment = function (t, e) {
              var r = this;
              this._doFragLoad(t, e)
                .then(function (e) {
                  if (!e || r.fragContextChanged(t) || !r.levels)
                    throw new Error("init load aborted");
                  return e;
                })
                .then(function (e) {
                  var i = r.hls,
                    n = e.payload,
                    a = t.decryptdata;
                  if (
                    n &&
                    n.byteLength > 0 &&
                    a &&
                    a.key &&
                    a.iv &&
                    "AES-128" === a.method
                  ) {
                    var s = self.performance.now();
                    return r.decrypter
                      .decrypt(new Uint8Array(n), a.key.buffer, a.iv.buffer)
                      .catch(function (e) {
                        throw (
                          (i.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: R.FRAG_DECRYPT_ERROR,
                            fatal: !1,
                            error: e,
                            reason: e.message,
                            frag: t,
                          }),
                          e)
                        );
                      })
                      .then(function (r) {
                        var n = self.performance.now();
                        return (
                          i.trigger(S.FRAG_DECRYPTED, {
                            frag: t,
                            payload: r,
                            stats: { tstart: s, tdecrypt: n },
                          }),
                          (e.payload = r),
                          e
                        );
                      });
                  }
                  return e;
                })
                .then(function (i) {
                  var n = r.fragCurrent,
                    a = r.hls;
                  if (!r.levels)
                    throw new Error("init load aborted, missing levels");
                  var s = t.stats;
                  (r.state = Kr),
                    (e.fragmentError = 0),
                    (t.data = new Uint8Array(i.payload)),
                    (s.parsing.start = s.buffering.start =
                      self.performance.now()),
                    (s.parsing.end = s.buffering.end = self.performance.now()),
                    i.frag === n &&
                      a.trigger(S.FRAG_BUFFERED, {
                        stats: s,
                        frag: n,
                        part: null,
                        id: t.type,
                      }),
                    r.tick();
                })
                .catch(function (e) {
                  r.state !== Gr &&
                    r.state !== zr &&
                    (r.warn(e), r.resetFragmentLoading(t));
                });
            }),
            (r.fragContextChanged = function (t) {
              var e = this.fragCurrent;
              return (
                !t ||
                !e ||
                t.level !== e.level ||
                t.sn !== e.sn ||
                t.urlId !== e.urlId
              );
            }),
            (r.fragBufferedComplete = function (t, e) {
              var r,
                i,
                n,
                a,
                s = this.mediaBuffer ? this.mediaBuffer : this.media;
              this.log(
                "Buffered " +
                  t.type +
                  " sn: " +
                  t.sn +
                  (e ? " part: " + e.index : "") +
                  " of " +
                  (this.playlistType === ge ? "level" : "track") +
                  " " +
                  t.level +
                  " (frag:[" +
                  (null != (r = t.startPTS) ? r : NaN).toFixed(3) +
                  "-" +
                  (null != (i = t.endPTS) ? i : NaN).toFixed(3) +
                  "] > buffer:" +
                  (s ? Br(Ir.getBuffered(s)) : "(detached)") +
                  ")"
              ),
                (this.state = Kr),
                s &&
                  (!this.loadedmetadata &&
                    t.type == ge &&
                    s.buffered.length &&
                    (null == (n = this.fragCurrent) ? void 0 : n.sn) ===
                      (null == (a = this.fragPrevious) ? void 0 : a.sn) &&
                    ((this.loadedmetadata = !0), this.seekToStartPos()),
                  this.tick());
            }),
            (r.seekToStartPos = function () {}),
            (r._handleFragmentLoadComplete = function (t) {
              var e = this.transmuxer;
              if (e) {
                var r = t.frag,
                  i = t.part,
                  n = t.partsLoaded,
                  a =
                    !n ||
                    0 === n.length ||
                    n.some(function (t) {
                      return !t;
                    }),
                  s = new wr(
                    r.level,
                    r.sn,
                    r.stats.chunkCount + 1,
                    0,
                    i ? i.index : -1,
                    !a
                  );
                e.flush(s);
              }
            }),
            (r._handleFragmentLoadProgress = function (t) {}),
            (r._doFragLoad = function (t, e, r, i) {
              var n,
                a = this;
              void 0 === r && (r = null);
              var s = null == e ? void 0 : e.details;
              if (!this.levels || !s)
                throw new Error(
                  "frag load aborted, missing level" +
                    (s ? "" : " detail") +
                    "s"
                );
              var o = null;
              if (
                (!t.encrypted || (null != (n = t.decryptdata) && n.key)
                  ? !t.encrypted &&
                    s.encryptedFragments.length &&
                    this.keyLoader.loadClear(t, s.encryptedFragments)
                  : (this.log(
                      "Loading key for " +
                        t.sn +
                        " of [" +
                        s.startSN +
                        "-" +
                        s.endSN +
                        "], " +
                        ("[stream-controller]" === this.logPrefix
                          ? "level"
                          : "track") +
                        " " +
                        t.level
                    ),
                    (this.state = Hr),
                    (this.fragCurrent = t),
                    (o = this.keyLoader.load(t).then(function (t) {
                      if (!a.fragContextChanged(t.frag))
                        return (
                          a.hls.trigger(S.KEY_LOADED, t),
                          a.state === Hr && (a.state = Kr),
                          t
                        );
                    })),
                    this.hls.trigger(S.KEY_LOADING, { frag: t }),
                    null === this.fragCurrent &&
                      (o = Promise.reject(
                        new Error(
                          "frag load aborted, context changed in KEY_LOADING"
                        )
                      ))),
                (r = Math.max(t.start, r || 0)),
                this.config.lowLatencyMode && "initSegment" !== t.sn)
              ) {
                var l = s.partList;
                if (l && i) {
                  r > t.end && s.fragmentHint && (t = s.fragmentHint);
                  var u = this.getNextPart(l, t, r);
                  if (u > -1) {
                    var h,
                      d = l[u];
                    return (
                      this.log(
                        "Loading part sn: " +
                          t.sn +
                          " p: " +
                          d.index +
                          " cc: " +
                          t.cc +
                          " of playlist [" +
                          s.startSN +
                          "-" +
                          s.endSN +
                          "] parts [0-" +
                          u +
                          "-" +
                          (l.length - 1) +
                          "] " +
                          ("[stream-controller]" === this.logPrefix
                            ? "level"
                            : "track") +
                          ": " +
                          t.level +
                          ", target: " +
                          parseFloat(r.toFixed(3))
                      ),
                      (this.nextLoadPosition = d.start + d.duration),
                      (this.state = Vr),
                      (h = o
                        ? o
                            .then(function (r) {
                              return !r || a.fragContextChanged(r.frag)
                                ? null
                                : a.doFragPartsLoad(t, d, e, i);
                            })
                            .catch(function (t) {
                              return a.handleFragLoadError(t);
                            })
                        : this.doFragPartsLoad(t, d, e, i).catch(function (t) {
                            return a.handleFragLoadError(t);
                          })),
                      this.hls.trigger(S.FRAG_LOADING, {
                        frag: t,
                        part: d,
                        targetBufferTime: r,
                      }),
                      null === this.fragCurrent
                        ? Promise.reject(
                            new Error(
                              "frag load aborted, context changed in FRAG_LOADING parts"
                            )
                          )
                        : h
                    );
                  }
                  if (!t.url || this.loadedEndOfParts(l, r))
                    return Promise.resolve(null);
                }
              }
              this.log(
                "Loading fragment " +
                  t.sn +
                  " cc: " +
                  t.cc +
                  " " +
                  (s ? "of [" + s.startSN + "-" + s.endSN + "] " : "") +
                  ("[stream-controller]" === this.logPrefix
                    ? "level"
                    : "track") +
                  ": " +
                  t.level +
                  ", target: " +
                  parseFloat(r.toFixed(3))
              ),
                E(t.sn) &&
                  !this.bitrateTest &&
                  (this.nextLoadPosition = t.start + t.duration),
                (this.state = Vr);
              var c,
                f = this.config.progressive;
              return (
                (c =
                  f && o
                    ? o
                        .then(function (e) {
                          return !e ||
                            a.fragContextChanged(null == e ? void 0 : e.frag)
                            ? null
                            : a.fragmentLoader.load(t, i);
                        })
                        .catch(function (t) {
                          return a.handleFragLoadError(t);
                        })
                    : Promise.all([
                        this.fragmentLoader.load(t, f ? i : void 0),
                        o,
                      ])
                        .then(function (t) {
                          var e = t[0];
                          return !f && e && i && i(e), e;
                        })
                        .catch(function (t) {
                          return a.handleFragLoadError(t);
                        })),
                this.hls.trigger(S.FRAG_LOADING, {
                  frag: t,
                  targetBufferTime: r,
                }),
                null === this.fragCurrent
                  ? Promise.reject(
                      new Error(
                        "frag load aborted, context changed in FRAG_LOADING"
                      )
                    )
                  : c
              );
            }),
            (r.doFragPartsLoad = function (t, e, r, i) {
              var n = this;
              return new Promise(function (a, s) {
                var o,
                  l = [],
                  u = null == (o = r.details) ? void 0 : o.partList;
                !(function e(o) {
                  n.fragmentLoader
                    .loadPart(t, o, i)
                    .then(function (i) {
                      l[o.index] = i;
                      var s = i.part;
                      n.hls.trigger(S.FRAG_LOADED, i);
                      var h =
                        Ve(r, t.sn, o.index + 1) || Ye(u, t.sn, o.index + 1);
                      if (!h) return a({ frag: t, part: s, partsLoaded: l });
                      e(h);
                    })
                    .catch(s);
                })(e);
              });
            }),
            (r.handleFragLoadError = function (t) {
              if ("data" in t) {
                var e = t.data;
                t.data && e.details === R.INTERNAL_ABORTED
                  ? this.handleFragLoadAborted(e.frag, e.part)
                  : this.hls.trigger(S.ERROR, e);
              } else
                this.hls.trigger(S.ERROR, {
                  type: L.OTHER_ERROR,
                  details: R.INTERNAL_EXCEPTION,
                  err: t,
                  error: t,
                  fatal: !0,
                });
              return null;
            }),
            (r._handleTransmuxerFlush = function (t) {
              var e = this.getCurrentContext(t);
              if (e && this.state === jr) {
                var r = e.frag,
                  i = e.part,
                  n = e.level,
                  a = self.performance.now();
                (r.stats.parsing.end = a),
                  i && (i.stats.parsing.end = a),
                  this.updateLevelTiming(r, i, n, t.partial);
              } else
                this.fragCurrent ||
                  this.state === Gr ||
                  this.state === zr ||
                  (this.state = Kr);
            }),
            (r.getCurrentContext = function (t) {
              var e = this.levels,
                r = this.fragCurrent,
                i = t.level,
                n = t.sn,
                a = t.part;
              if (null == e || !e[i])
                return (
                  this.warn(
                    "Levels object was unset while buffering fragment " +
                      n +
                      " of level " +
                      i +
                      ". The current chunk will not be buffered."
                  ),
                  null
                );
              var s = e[i],
                o = a > -1 ? Ve(s, n, a) : null,
                l = o
                  ? o.fragment
                  : (function (t, e, r) {
                      if (null == t || !t.details) return null;
                      var i = t.details,
                        n = i.fragments[e - i.startSN];
                      return (
                        n ||
                        ((n = i.fragmentHint) && n.sn === e
                          ? n
                          : e < i.startSN && r && r.sn === e
                          ? r
                          : null)
                      );
                    })(s, n, r);
              return l
                ? (r && r !== l && (l.stats = r.stats),
                  { frag: l, part: o, level: s })
                : null;
            }),
            (r.bufferFragmentData = function (t, e, r, i, n) {
              var a;
              if (t && this.state === jr) {
                var s = t.data1,
                  o = t.data2,
                  l = s;
                if ((s && o && (l = xt(s, o)), null != (a = l) && a.length)) {
                  var u = {
                    type: t.type,
                    frag: e,
                    part: r,
                    chunkMeta: i,
                    parent: e.type,
                    data: l,
                  };
                  if (
                    (this.hls.trigger(S.BUFFER_APPENDING, u),
                    t.dropped && t.independent && !r)
                  ) {
                    if (n) return;
                    this.flushBufferGap(e);
                  }
                }
              }
            }),
            (r.flushBufferGap = function (t) {
              var e = this.media;
              if (e)
                if (Ir.isBuffered(e, e.currentTime)) {
                  var r = e.currentTime,
                    i = Ir.bufferInfo(e, r, 0),
                    n = t.duration,
                    a = Math.min(
                      2 * this.config.maxFragLookUpTolerance,
                      0.25 * n
                    ),
                    s = Math.max(Math.min(t.start - a, i.end - a), r + a);
                  t.start - s > a && this.flushMainBuffer(s, t.start);
                } else this.flushMainBuffer(0, t.start);
            }),
            (r.getFwdBufferInfo = function (t, e) {
              var r = this.getLoadPosition();
              return E(r) ? this.getFwdBufferInfoAtPos(t, r, e) : null;
            }),
            (r.getFwdBufferInfoAtPos = function (t, e, r) {
              var i = this.config.maxBufferHole,
                n = Ir.bufferInfo(t, e, i);
              if (0 === n.len && void 0 !== n.nextStart) {
                var a = this.fragmentTracker.getBufferedFrag(e, r);
                if (a && n.nextStart < a.end)
                  return Ir.bufferInfo(t, e, Math.max(n.nextStart, i));
              }
              return n;
            }),
            (r.getMaxBufferLength = function (t) {
              var e,
                r = this.config;
              return (
                (e = t
                  ? Math.max((8 * r.maxBufferSize) / t, r.maxBufferLength)
                  : r.maxBufferLength),
                Math.min(e, r.maxMaxBufferLength)
              );
            }),
            (r.reduceMaxBufferLength = function (t) {
              var e = this.config,
                r = t || e.maxBufferLength;
              return (
                e.maxMaxBufferLength >= r &&
                ((e.maxMaxBufferLength /= 2),
                this.warn(
                  "Reduce max buffer length to " + e.maxMaxBufferLength + "s"
                ),
                !0)
              );
            }),
            (r.getAppendedFrag = function (t, e) {
              var r = this.fragmentTracker.getAppendedFrag(t, ge);
              return r && "fragment" in r ? r.fragment : r;
            }),
            (r.getNextFragment = function (t, e) {
              var r = e.fragments,
                i = r.length;
              if (!i) return null;
              var n,
                a = this.config,
                s = r[0].start;
              if (e.live) {
                var o = a.initialLiveManifestSize;
                if (i < o)
                  return (
                    this.warn(
                      "Not enough fragments to start playback (have: " +
                        i +
                        ", need: " +
                        o +
                        ")"
                    ),
                    null
                  );
                e.PTSKnown ||
                  this.startFragRequested ||
                  -1 !== this.startPosition ||
                  ((n = this.getInitialLiveFragment(e, r)),
                  (this.startPosition = n
                    ? this.hls.liveSyncPosition || n.start
                    : t));
              } else t <= s && (n = r[0]);
              if (!n) {
                var l = a.lowLatencyMode ? e.partEnd : e.fragmentEnd;
                n = this.getFragmentAtPosition(t, l, e);
              }
              return this.mapToInitFragWhenRequired(n);
            }),
            (r.isLoopLoading = function (t, e) {
              var r = this.fragmentTracker.getState(t);
              return (
                (r === mr || (r === vr && !!t.gap)) && this.nextLoadPosition > e
              );
            }),
            (r.getNextFragmentLoopLoading = function (t, e, r, i, n) {
              var a = t.gap,
                s = this.getNextFragment(this.nextLoadPosition, e);
              if (null === s) return s;
              if (((t = s), a && t && !t.gap && r.nextStart)) {
                var o = this.getFwdBufferInfoAtPos(
                  this.mediaBuffer ? this.mediaBuffer : this.media,
                  r.nextStart,
                  i
                );
                if (null !== o && r.len + o.len >= n)
                  return (
                    this.log(
                      'buffer full after gaps in "' +
                        i +
                        '" playlist starting at sn: ' +
                        t.sn
                    ),
                    null
                  );
              }
              return t;
            }),
            (r.mapToInitFragWhenRequired = function (t) {
              return null == t ||
                !t.initSegment ||
                (null != t && t.initSegment.data) ||
                this.bitrateTest
                ? t
                : t.initSegment;
            }),
            (r.getNextPart = function (t, e, r) {
              for (
                var i = -1, n = !1, a = !0, s = 0, o = t.length;
                s < o;
                s++
              ) {
                var l = t[s];
                if (((a = a && !l.independent), i > -1 && r < l.start)) break;
                var u = l.loaded;
                u
                  ? (i = -1)
                  : (n || l.independent || a) && l.fragment === e && (i = s),
                  (n = u);
              }
              return i;
            }),
            (r.loadedEndOfParts = function (t, e) {
              var r = t[t.length - 1];
              return r && e > r.start && r.loaded;
            }),
            (r.getInitialLiveFragment = function (t, e) {
              var r = this.fragPrevious,
                i = null;
              if (r) {
                if (
                  (t.hasProgramDateTime &&
                    (this.log(
                      "Live playlist, switching playlist, load frag with same PDT: " +
                        r.programDateTime
                    ),
                    (i = (function (t, e, r) {
                      if (null === e || !Array.isArray(t) || !t.length || !E(e))
                        return null;
                      if (e < (t[0].programDateTime || 0)) return null;
                      if (e >= (t[t.length - 1].endProgramDateTime || 0))
                        return null;
                      r = r || 0;
                      for (var i = 0; i < t.length; ++i) {
                        var n = t[i];
                        if (Ze(e, r, n)) return n;
                      }
                      return null;
                    })(
                      e,
                      r.endProgramDateTime,
                      this.config.maxFragLookUpTolerance
                    ))),
                  !i)
                ) {
                  var n = r.sn + 1;
                  if (n >= t.startSN && n <= t.endSN) {
                    var a = e[n - t.startSN];
                    r.cc === a.cc &&
                      ((i = a),
                      this.log(
                        "Live playlist, switching playlist, load frag with next SN: " +
                          i.sn
                      ));
                  }
                  i ||
                    ((i = (function (t, e) {
                      return Qe(t, function (t) {
                        return t.cc < e ? 1 : t.cc > e ? -1 : 0;
                      });
                    })(e, r.cc)),
                    i &&
                      this.log(
                        "Live playlist, switching playlist, load frag with same CC: " +
                          i.sn
                      ));
                }
              } else {
                var s = this.hls.liveSyncPosition;
                null !== s &&
                  (i = this.getFragmentAtPosition(
                    s,
                    this.bitrateTest ? t.fragmentEnd : t.edge,
                    t
                  ));
              }
              return i;
            }),
            (r.getFragmentAtPosition = function (t, e, r) {
              var i,
                n = this.config,
                a = this.fragPrevious,
                s = r.fragments,
                o = r.endSN,
                l = r.fragmentHint,
                u = n.maxFragLookUpTolerance,
                h = r.partList,
                d = !!(n.lowLatencyMode && null != h && h.length && l);
              if (
                (d && l && !this.bitrateTest && ((s = s.concat(l)), (o = l.sn)),
                (i = t < e ? $e(a, s, t, t > e - u ? 0 : u) : s[s.length - 1]))
              ) {
                var c = i.sn - r.startSN,
                  f = this.fragmentTracker.getState(i);
                if (
                  ((f === mr || (f === vr && i.gap)) && (a = i),
                  a &&
                    i.sn === a.sn &&
                    (!d || h[0].fragment.sn > i.sn) &&
                    a &&
                    i.level === a.level)
                ) {
                  var g = s[c + 1];
                  i =
                    i.sn < o && this.fragmentTracker.getState(g) !== mr
                      ? g
                      : null;
                }
              }
              return i;
            }),
            (r.synchronizeToLiveEdge = function (t) {
              var e = this.config,
                r = this.media;
              if (r) {
                var i = this.hls.liveSyncPosition,
                  n = r.currentTime,
                  a = t.fragments[0].start,
                  s = t.edge,
                  o = n >= a - e.maxFragLookUpTolerance && n <= s;
                if (null !== i && r.duration > i && (n < i || !o)) {
                  var l =
                    void 0 !== e.liveMaxLatencyDuration
                      ? e.liveMaxLatencyDuration
                      : e.liveMaxLatencyDurationCount * t.targetduration;
                  ((!o && r.readyState < 4) || n < s - l) &&
                    (this.loadedmetadata || (this.nextLoadPosition = i),
                    r.readyState &&
                      (this.warn(
                        "Playback: " +
                          n.toFixed(3) +
                          " is located too far from the end of live sliding playlist: " +
                          s +
                          ", reset currentTime to : " +
                          i.toFixed(3)
                      ),
                      (r.currentTime = i)));
                }
              }
            }),
            (r.alignPlaylists = function (t, e) {
              var r = this.levels,
                i = this.levelLastLoaded,
                n = this.fragPrevious,
                a = null !== i ? r[i] : null,
                s = t.fragments.length;
              if (!s) return this.warn("No fragments in live playlist"), 0;
              var o = t.fragments[0].start,
                l = !e,
                u = t.alignedSliding && E(o);
              if (l || (!u && !o)) {
                xr(n, a, t);
                var h = t.fragments[0].start;
                return (
                  this.log(
                    "Live playlist sliding: " +
                      h.toFixed(2) +
                      " start-sn: " +
                      (e ? e.startSN : "na") +
                      "->" +
                      t.startSN +
                      " prev-sn: " +
                      (n ? n.sn : "na") +
                      " fragments: " +
                      s
                  ),
                  h
                );
              }
              return o;
            }),
            (r.waitForCdnTuneIn = function (t) {
              return (
                t.live &&
                t.canBlockReload &&
                t.partTarget &&
                t.tuneInGoal > Math.max(t.partHoldBack, 3 * t.partTarget)
              );
            }),
            (r.setStartPosition = function (t, e) {
              var r = this.startPosition;
              if (
                (r < e && (r = -1), -1 === r || -1 === this.lastCurrentTime)
              ) {
                var i = null !== this.startTimeOffset,
                  n = i ? this.startTimeOffset : t.startTimeOffset;
                null !== n && E(n)
                  ? ((r = e + n),
                    n < 0 && (r += t.totalduration),
                    (r = Math.min(Math.max(e, r), e + t.totalduration)),
                    this.log(
                      "Start time offset " +
                        n +
                        " found in " +
                        (i ? "multivariant" : "media") +
                        " playlist, adjust startPosition to " +
                        r
                    ),
                    (this.startPosition = r))
                  : t.live
                  ? (r = this.hls.liveSyncPosition || e)
                  : (this.startPosition = r = 0),
                  (this.lastCurrentTime = r);
              }
              this.nextLoadPosition = r;
            }),
            (r.getLoadPosition = function () {
              var t = this.media,
                e = 0;
              return (
                this.loadedmetadata && t
                  ? (e = t.currentTime)
                  : this.nextLoadPosition && (e = this.nextLoadPosition),
                e
              );
            }),
            (r.handleFragLoadAborted = function (t, e) {
              this.transmuxer &&
                "initSegment" !== t.sn &&
                t.stats.aborted &&
                (this.warn(
                  "Fragment " +
                    t.sn +
                    (e ? " part " + e.index : "") +
                    " of level " +
                    t.level +
                    " was aborted"
                ),
                this.resetFragmentLoading(t));
            }),
            (r.resetFragmentLoading = function (t) {
              (this.fragCurrent &&
                (this.fragContextChanged(t) || this.state === Yr)) ||
                (this.state = Kr);
            }),
            (r.onFragmentOrKeyLoadError = function (t, e) {
              if (e.chunkMeta && !e.frag) {
                var r = this.getCurrentContext(e.chunkMeta);
                r && (e.frag = r.frag);
              }
              var i = e.frag;
              if (i && i.type === t && this.levels)
                if (this.fragContextChanged(i)) {
                  var n;
                  this.warn(
                    "Frag load error must match current frag to retry " +
                      i.url +
                      " > " +
                      (null == (n = this.fragCurrent) ? void 0 : n.url)
                  );
                } else {
                  var a = e.details === R.FRAG_GAP;
                  a && this.fragmentTracker.fragBuffered(i, !0);
                  var s = e.errorAction,
                    o = s || {},
                    l = o.action,
                    u = o.retryCount,
                    h = void 0 === u ? 0 : u,
                    d = o.retryConfig;
                  if (s && l === nr && d) {
                    var c;
                    this.resetStartWhenNotLoaded(
                      null != (c = this.levelLastLoaded) ? c : i.level
                    );
                    var f = qe(d, h);
                    this.warn(
                      "Fragment " +
                        i.sn +
                        " of " +
                        t +
                        " " +
                        i.level +
                        " errored with " +
                        e.details +
                        ", retrying loading " +
                        (h + 1) +
                        "/" +
                        d.maxNumRetry +
                        " in " +
                        f +
                        "ms"
                    ),
                      (s.resolved = !0),
                      (this.retryDate = self.performance.now() + f),
                      (this.state = Yr);
                  } else
                    d && s
                      ? (this.resetFragmentErrors(t),
                        h < d.maxNumRetry
                          ? a || (s.resolved = !0)
                          : w.warn(
                              e.details +
                                " reached or exceeded max retry (" +
                                h +
                                ")"
                            ))
                      : (null == s ? void 0 : s.action) === ir
                      ? (this.state = $r)
                      : (this.state = zr);
                  this.tickImmediate();
                }
            }),
            (r.reduceLengthAndFlushBuffer = function (t) {
              if (this.state === jr || this.state === qr) {
                var e = t.parent,
                  r = this.getFwdBufferInfo(this.mediaBuffer, e),
                  i = r && r.len > 0.5;
                i && this.reduceMaxBufferLength(r.len);
                var n = !i;
                return (
                  n &&
                    this.warn(
                      "Buffer full error while media.currentTime is not buffered, flush " +
                        e +
                        " buffer"
                    ),
                  t.frag &&
                    (this.fragmentTracker.removeFragment(t.frag),
                    (this.nextLoadPosition = t.frag.start)),
                  this.resetLoadingState(),
                  n
                );
              }
              return !1;
            }),
            (r.resetFragmentErrors = function (t) {
              t === ve && (this.fragCurrent = null),
                this.loadedmetadata || (this.startFragRequested = !1),
                this.state !== Gr && (this.state = Kr);
            }),
            (r.afterBufferFlushed = function (t, e, r) {
              if (t) {
                var i = Ir.getBuffered(t);
                this.fragmentTracker.detectEvictedFragments(e, i, r),
                  this.state === Xr && this.resetLoadingState();
              }
            }),
            (r.resetLoadingState = function () {
              this.log("Reset loading state"),
                (this.fragCurrent = null),
                (this.fragPrevious = null),
                (this.state = Kr);
            }),
            (r.resetStartWhenNotLoaded = function (t) {
              if (!this.loadedmetadata) {
                this.startFragRequested = !1;
                var e = this.levels ? this.levels[t].details : null;
                null != e && e.live
                  ? ((this.startPosition = -1),
                    this.setStartPosition(e, 0),
                    this.resetLoadingState())
                  : (this.nextLoadPosition = this.startPosition);
              }
            }),
            (r.resetWhenMissingContext = function (t) {
              var e;
              this.warn(
                "The loading context changed while buffering fragment " +
                  t.sn +
                  " of level " +
                  t.level +
                  ". This chunk will not be buffered."
              ),
                this.removeUnbufferedFrags(),
                this.resetStartWhenNotLoaded(
                  null != (e = this.levelLastLoaded) ? e : t.level
                ),
                this.resetLoadingState();
            }),
            (r.removeUnbufferedFrags = function (t) {
              void 0 === t && (t = 0),
                this.fragmentTracker.removeFragmentsInRange(
                  t,
                  1 / 0,
                  this.playlistType,
                  !1,
                  !0
                );
            }),
            (r.updateLevelTiming = function (t, e, r, i) {
              var n,
                a = this,
                s = r.details;
              if (s) {
                if (
                  Object.keys(t.elementaryStreams).reduce(function (e, n) {
                    var o = t.elementaryStreams[n];
                    if (o) {
                      var l = o.endPTS - o.startPTS;
                      if (l <= 0)
                        return (
                          a.warn(
                            "Could not parse fragment " +
                              t.sn +
                              " " +
                              n +
                              " duration reliably (" +
                              l +
                              ")"
                          ),
                          e || !1
                        );
                      var u = i
                        ? 0
                        : Be(s, t, o.startPTS, o.endPTS, o.startDTS, o.endDTS);
                      return (
                        a.hls.trigger(S.LEVEL_PTS_UPDATED, {
                          details: s,
                          level: r,
                          drift: u,
                          type: n,
                          frag: t,
                          start: o.startPTS,
                          end: o.endPTS,
                        }),
                        !0
                      );
                    }
                    return e;
                  }, !1)
                )
                  r.fragmentError = 0;
                else if (
                  null === (null == (n = this.transmuxer) ? void 0 : n.error)
                ) {
                  var o = new Error(
                    "Found no media in fragment " +
                      t.sn +
                      " of level " +
                      t.level +
                      " resetting transmuxer to fallback to playlist timing"
                  );
                  if (
                    (0 === r.fragmentError &&
                      (r.fragmentError++,
                      (t.gap = !0),
                      this.fragmentTracker.removeFragment(t),
                      this.fragmentTracker.fragBuffered(t, !0)),
                    this.warn(o.message),
                    this.hls.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: R.FRAG_PARSING_ERROR,
                      fatal: !1,
                      error: o,
                      frag: t,
                      reason:
                        "Found no media in msn " +
                        t.sn +
                        ' of level "' +
                        r.url +
                        '"',
                    }),
                    !this.hls)
                  )
                    return;
                  this.resetTransmuxer();
                }
                (this.state = qr),
                  this.hls.trigger(S.FRAG_PARSED, { frag: t, part: e });
              } else this.warn("level.details undefined");
            }),
            (r.resetTransmuxer = function () {
              this.transmuxer &&
                (this.transmuxer.destroy(), (this.transmuxer = null));
            }),
            (r.recoverWorkerError = function (t) {
              var e, r, i;
              "demuxerWorker" === t.event &&
                (this.fragmentTracker.removeAllFragments(),
                this.resetTransmuxer(),
                this.resetStartWhenNotLoaded(
                  null !=
                    (e =
                      null != (r = this.levelLastLoaded)
                        ? r
                        : null == (i = this.fragCurrent)
                        ? void 0
                        : i.level)
                    ? e
                    : 0
                ),
                this.resetLoadingState());
            }),
            a(e, [
              {
                key: "state",
                get: function () {
                  return this._state;
                },
                set: function (t) {
                  var e = this._state;
                  e !== t && ((this._state = t), this.log(e + "->" + t));
                },
              },
            ]),
            e
          );
        })(br);
      function Zr() {
        return self.SourceBuffer || self.WebKitSourceBuffer;
      }
      function ti(t, e) {
        return (
          void 0 === t && (t = ""),
          void 0 === e && (e = 9e4),
          {
            type: t,
            id: -1,
            pid: -1,
            inputTimeScale: e,
            sequenceNumber: -1,
            samples: [],
            dropped: 0,
          }
        );
      }
      var ei = (function () {
          function t() {
            (this._audioTrack = void 0),
              (this._id3Track = void 0),
              (this.frameIndex = 0),
              (this.cachedData = null),
              (this.basePTS = null),
              (this.initPTS = null),
              (this.lastPTS = null);
          }
          var e = t.prototype;
          return (
            (e.resetInitSegment = function (t, e, r, i) {
              this._id3Track = {
                type: "id3",
                id: 3,
                pid: -1,
                inputTimeScale: 9e4,
                sequenceNumber: 0,
                samples: [],
                dropped: 0,
              };
            }),
            (e.resetTimeStamp = function (t) {
              (this.initPTS = t), this.resetContiguity();
            }),
            (e.resetContiguity = function () {
              (this.basePTS = null),
                (this.lastPTS = null),
                (this.frameIndex = 0);
            }),
            (e.canParse = function (t, e) {
              return !1;
            }),
            (e.appendFrame = function (t, e, r) {}),
            (e.demux = function (t, e) {
              this.cachedData &&
                ((t = xt(this.cachedData, t)), (this.cachedData = null));
              var r,
                i = st(t, 0),
                n = i ? i.length : 0,
                a = this._audioTrack,
                s = this._id3Track,
                o = i
                  ? (function (t) {
                      for (var e = dt(t), r = 0; r < e.length; r++) {
                        var i = e[r];
                        if (ut(i)) return mt(i);
                      }
                    })(i)
                  : void 0,
                l = t.length;
              for (
                (null === this.basePTS || (0 === this.frameIndex && E(o))) &&
                  ((this.basePTS = ri(o, e, this.initPTS)),
                  (this.lastPTS = this.basePTS)),
                  null === this.lastPTS && (this.lastPTS = this.basePTS),
                  i &&
                    i.length > 0 &&
                    s.samples.push({
                      pts: this.lastPTS,
                      dts: this.lastPTS,
                      data: i,
                      type: Ae,
                      duration: Number.POSITIVE_INFINITY,
                    });
                n < l;

              ) {
                if (this.canParse(t, n)) {
                  var u = this.appendFrame(a, t, n);
                  u
                    ? (this.frameIndex++,
                      (this.lastPTS = u.sample.pts),
                      (r = n += u.length))
                    : (n = l);
                } else
                  lt(t, n)
                    ? ((i = st(t, n)),
                      s.samples.push({
                        pts: this.lastPTS,
                        dts: this.lastPTS,
                        data: i,
                        type: Ae,
                        duration: Number.POSITIVE_INFINITY,
                      }),
                      (r = n += i.length))
                    : n++;
                if (n === l && r !== l) {
                  var h = rt(t, r);
                  this.cachedData
                    ? (this.cachedData = xt(this.cachedData, h))
                    : (this.cachedData = h);
                }
              }
              return {
                audioTrack: a,
                videoTrack: ti(),
                id3Track: s,
                textTrack: ti(),
              };
            }),
            (e.demuxSampleAes = function (t, e, r) {
              return Promise.reject(
                new Error(
                  "[" +
                    this +
                    "] This demuxer does not support Sample-AES decryption"
                )
              );
            }),
            (e.flush = function (t) {
              var e = this.cachedData;
              return (
                e && ((this.cachedData = null), this.demux(e, 0)),
                {
                  audioTrack: this._audioTrack,
                  videoTrack: ti(),
                  id3Track: this._id3Track,
                  textTrack: ti(),
                }
              );
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        ri = function (t, e, r) {
          return E(t)
            ? 90 * t
            : 9e4 * e + (r ? (9e4 * r.baseTime) / r.timescale : 0);
        };
      function ii(t, e) {
        return 255 === t[e] && 240 == (246 & t[e + 1]);
      }
      function ni(t, e) {
        return 1 & t[e + 1] ? 7 : 9;
      }
      function ai(t, e) {
        return (
          ((3 & t[e + 3]) << 11) | (t[e + 4] << 3) | ((224 & t[e + 5]) >>> 5)
        );
      }
      function si(t, e) {
        return e + 1 < t.length && ii(t, e);
      }
      function oi(t, e) {
        if (si(t, e)) {
          var r = ni(t, e);
          if (e + r >= t.length) return !1;
          var i = ai(t, e);
          if (i <= r) return !1;
          var n = e + i;
          return n === t.length || si(t, n);
        }
        return !1;
      }
      function li(t, e, r, i, n) {
        if (!t.samplerate) {
          var a = (function (t, e, r, i) {
            var n,
              a,
              s,
              o,
              l = navigator.userAgent.toLowerCase(),
              u = i,
              h = [
                96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3,
                11025, 8e3, 7350,
              ];
            n = 1 + ((192 & e[r + 2]) >>> 6);
            var d = (60 & e[r + 2]) >>> 2;
            if (!(d > h.length - 1))
              return (
                (s = (1 & e[r + 2]) << 2),
                (s |= (192 & e[r + 3]) >>> 6),
                w.log(
                  "manifest codec:" +
                    i +
                    ", ADTS type:" +
                    n +
                    ", samplingIndex:" +
                    d
                ),
                /firefox/i.test(l)
                  ? d >= 6
                    ? ((n = 5), (o = new Array(4)), (a = d - 3))
                    : ((n = 2), (o = new Array(2)), (a = d))
                  : -1 !== l.indexOf("android")
                  ? ((n = 2), (o = new Array(2)), (a = d))
                  : ((n = 5),
                    (o = new Array(4)),
                    (i &&
                      (-1 !== i.indexOf("mp4a.40.29") ||
                        -1 !== i.indexOf("mp4a.40.5"))) ||
                    (!i && d >= 6)
                      ? (a = d - 3)
                      : (((i &&
                          -1 !== i.indexOf("mp4a.40.2") &&
                          ((d >= 6 && 1 === s) || /vivaldi/i.test(l))) ||
                          (!i && 1 === s)) &&
                          ((n = 2), (o = new Array(2))),
                        (a = d))),
                (o[0] = n << 3),
                (o[0] |= (14 & d) >> 1),
                (o[1] |= (1 & d) << 7),
                (o[1] |= s << 3),
                5 === n &&
                  ((o[1] |= (14 & a) >> 1),
                  (o[2] = (1 & a) << 7),
                  (o[2] |= 8),
                  (o[3] = 0)),
                {
                  config: o,
                  samplerate: h[d],
                  channelCount: s,
                  codec: "mp4a.40." + n,
                  manifestCodec: u,
                }
              );
            t.trigger(S.ERROR, {
              type: L.MEDIA_ERROR,
              details: R.FRAG_PARSING_ERROR,
              fatal: !0,
              reason: "invalid ADTS sampling index:" + d,
            });
          })(e, r, i, n);
          if (!a) return;
          (t.config = a.config),
            (t.samplerate = a.samplerate),
            (t.channelCount = a.channelCount),
            (t.codec = a.codec),
            (t.manifestCodec = a.manifestCodec),
            w.log(
              "parsed codec:" +
                t.codec +
                ", rate:" +
                a.samplerate +
                ", channels:" +
                a.channelCount
            );
        }
      }
      function ui(t) {
        return 9216e4 / t;
      }
      function hi(t, e, r, i, n) {
        var a,
          s = i + n * ui(t.samplerate),
          o = (function (t, e) {
            var r = ni(t, e);
            if (e + r <= t.length) {
              var i = ai(t, e) - r;
              if (i > 0) return { headerLength: r, frameLength: i };
            }
          })(e, r);
        if (o) {
          var l = o.frameLength,
            u = o.headerLength,
            h = u + l,
            d = Math.max(0, r + h - e.length);
          d
            ? (a = new Uint8Array(h - u)).set(e.subarray(r + u, e.length), 0)
            : (a = e.subarray(r + u, r + h));
          var c = { unit: a, pts: s };
          return d || t.samples.push(c), { sample: c, length: h, missing: d };
        }
        var f = e.length - r;
        return (
          (a = new Uint8Array(f)).set(e.subarray(r, e.length), 0),
          { sample: { unit: a, pts: s }, length: f, missing: -1 }
        );
      }
      var di = (function (t) {
          function e(e, r) {
            var i;
            return (
              ((i = t.call(this) || this).observer = void 0),
              (i.config = void 0),
              (i.observer = e),
              (i.config = r),
              i
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.resetInitSegment = function (e, r, i, n) {
              t.prototype.resetInitSegment.call(this, e, r, i, n),
                (this._audioTrack = {
                  container: "audio/adts",
                  type: "audio",
                  id: 2,
                  pid: -1,
                  sequenceNumber: 0,
                  segmentCodec: "aac",
                  samples: [],
                  manifestCodec: r,
                  duration: n,
                  inputTimeScale: 9e4,
                  dropped: 0,
                });
            }),
            (e.probe = function (t) {
              if (!t) return !1;
              for (var e = (st(t, 0) || []).length, r = t.length; e < r; e++)
                if (oi(t, e)) return w.log("ADTS sync word found !"), !0;
              return !1;
            }),
            (r.canParse = function (t, e) {
              return (function (t, e) {
                return (
                  (function (t, e) {
                    return e + 5 < t.length;
                  })(t, e) &&
                  ii(t, e) &&
                  ai(t, e) <= t.length - e
                );
              })(t, e);
            }),
            (r.appendFrame = function (t, e, r) {
              li(t, this.observer, e, r, t.manifestCodec);
              var i = hi(t, e, r, this.basePTS, this.frameIndex);
              if (i && 0 === i.missing) return i;
            }),
            e
          );
        })(ei),
        ci = /\/emsg[-/]ID3/i,
        fi = (function () {
          function t(t, e) {
            (this.remainderData = null),
              (this.timeOffset = 0),
              (this.config = void 0),
              (this.videoTrack = void 0),
              (this.audioTrack = void 0),
              (this.id3Track = void 0),
              (this.txtTrack = void 0),
              (this.config = e);
          }
          var e = t.prototype;
          return (
            (e.resetTimeStamp = function () {}),
            (e.resetInitSegment = function (t, e, r, i) {
              var n = (this.videoTrack = ti("video", 1)),
                a = (this.audioTrack = ti("audio", 1)),
                s = (this.txtTrack = ti("text", 1));
              if (
                ((this.id3Track = ti("id3", 1)),
                (this.timeOffset = 0),
                null != t && t.byteLength)
              ) {
                var o = Ct(t);
                if (o.video) {
                  var l = o.video,
                    u = l.id,
                    h = l.timescale,
                    d = l.codec;
                  (n.id = u), (n.timescale = s.timescale = h), (n.codec = d);
                }
                if (o.audio) {
                  var c = o.audio,
                    f = c.id,
                    g = c.timescale,
                    v = c.codec;
                  (a.id = f), (a.timescale = g), (a.codec = v);
                }
                (s.id = Lt.text),
                  (n.sampleDuration = 0),
                  (n.duration = a.duration = i);
              }
            }),
            (e.resetContiguity = function () {
              this.remainderData = null;
            }),
            (t.probe = function (t) {
              return (
                It((t = t.length > 16384 ? t.subarray(0, 16384) : t), ["moof"])
                  .length > 0
              );
            }),
            (e.demux = function (t, e) {
              this.timeOffset = e;
              var r = t,
                i = this.videoTrack,
                n = this.txtTrack;
              if (this.config.progressive) {
                this.remainderData && (r = xt(this.remainderData, t));
                var a = (function (t) {
                  var e = { valid: null, remainder: null },
                    r = It(t, ["moof"]);
                  if (!r) return e;
                  if (r.length < 2) return (e.remainder = t), e;
                  var i = r[r.length - 1];
                  return (
                    (e.valid = rt(t, 0, i.byteOffset - 8)),
                    (e.remainder = rt(t, i.byteOffset - 8)),
                    e
                  );
                })(r);
                (this.remainderData = a.remainder),
                  (i.samples = a.valid || new Uint8Array());
              } else i.samples = r;
              var s = this.extractID3Track(i, e);
              return (
                (n.samples = Ft(e, i)),
                {
                  videoTrack: i,
                  audioTrack: this.audioTrack,
                  id3Track: s,
                  textTrack: this.txtTrack,
                }
              );
            }),
            (e.flush = function () {
              var t = this.timeOffset,
                e = this.videoTrack,
                r = this.txtTrack;
              (e.samples = this.remainderData || new Uint8Array()),
                (this.remainderData = null);
              var i = this.extractID3Track(e, this.timeOffset);
              return (
                (r.samples = Ft(t, e)),
                {
                  videoTrack: e,
                  audioTrack: ti(),
                  id3Track: i,
                  textTrack: ti(),
                }
              );
            }),
            (e.extractID3Track = function (t, e) {
              var r = this.id3Track;
              if (t.samples.length) {
                var i = It(t.samples, ["emsg"]);
                i &&
                  i.forEach(function (t) {
                    var i = (function (t) {
                      var e = t[0],
                        r = "",
                        i = "",
                        n = 0,
                        a = 0,
                        s = 0,
                        o = 0,
                        l = 0,
                        u = 0;
                      if (0 === e) {
                        for (; "\0" !== Rt(t.subarray(u, u + 1)); )
                          (r += Rt(t.subarray(u, u + 1))), (u += 1);
                        for (
                          r += Rt(t.subarray(u, u + 1)), u += 1;
                          "\0" !== Rt(t.subarray(u, u + 1));

                        )
                          (i += Rt(t.subarray(u, u + 1))), (u += 1);
                        (i += Rt(t.subarray(u, u + 1))),
                          (u += 1),
                          (n = kt(t, 12)),
                          (a = kt(t, 16)),
                          (o = kt(t, 20)),
                          (l = kt(t, 24)),
                          (u = 28);
                      } else if (1 === e) {
                        n = kt(t, (u += 4));
                        var h = kt(t, (u += 4)),
                          d = kt(t, (u += 4));
                        for (
                          u += 4,
                            s = Math.pow(2, 32) * h + d,
                            Number.isSafeInteger(s) ||
                              ((s = Number.MAX_SAFE_INTEGER),
                              w.warn(
                                "Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box"
                              )),
                            o = kt(t, u),
                            l = kt(t, (u += 4)),
                            u += 4;
                          "\0" !== Rt(t.subarray(u, u + 1));

                        )
                          (r += Rt(t.subarray(u, u + 1))), (u += 1);
                        for (
                          r += Rt(t.subarray(u, u + 1)), u += 1;
                          "\0" !== Rt(t.subarray(u, u + 1));

                        )
                          (i += Rt(t.subarray(u, u + 1))), (u += 1);
                        (i += Rt(t.subarray(u, u + 1))), (u += 1);
                      }
                      return {
                        schemeIdUri: r,
                        value: i,
                        timeScale: n,
                        presentationTime: s,
                        presentationTimeDelta: a,
                        eventDuration: o,
                        id: l,
                        payload: t.subarray(u, t.byteLength),
                      };
                    })(t);
                    if (ci.test(i.schemeIdUri)) {
                      var n = E(i.presentationTime)
                          ? i.presentationTime / i.timeScale
                          : e + i.presentationTimeDelta / i.timeScale,
                        a =
                          4294967295 === i.eventDuration
                            ? Number.POSITIVE_INFINITY
                            : i.eventDuration / i.timeScale;
                      a <= 0.001 && (a = Number.POSITIVE_INFINITY);
                      var s = i.payload;
                      r.samples.push({
                        data: s,
                        len: s.byteLength,
                        dts: n,
                        pts: n,
                        type: be,
                        duration: a,
                      });
                    }
                  });
              }
              return r;
            }),
            (e.demuxSampleAes = function (t, e, r) {
              return Promise.reject(
                new Error(
                  "The MP4 demuxer does not support SAMPLE-AES decryption"
                )
              );
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        gi = null,
        vi = [
          32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32,
          48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40,
          48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64,
          80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48,
          56, 64, 80, 96, 112, 128, 144, 160,
        ],
        mi = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
        pi = [
          [0, 72, 144, 12],
          [0, 0, 0, 0],
          [0, 72, 144, 12],
          [0, 144, 144, 12],
        ],
        yi = [0, 1, 1, 4];
      function Ti(t, e, r, i, n) {
        if (!(r + 24 > e.length)) {
          var a = Ei(e, r);
          if (a && r + a.frameLength <= e.length) {
            var s = i + n * ((9e4 * a.samplesPerFrame) / a.sampleRate),
              o = { unit: e.subarray(r, r + a.frameLength), pts: s, dts: s };
            return (
              (t.config = []),
              (t.channelCount = a.channelCount),
              (t.samplerate = a.sampleRate),
              t.samples.push(o),
              { sample: o, length: a.frameLength, missing: 0 }
            );
          }
        }
      }
      function Ei(t, e) {
        var r = (t[e + 1] >> 3) & 3,
          i = (t[e + 1] >> 1) & 3,
          n = (t[e + 2] >> 4) & 15,
          a = (t[e + 2] >> 2) & 3;
        if (1 !== r && 0 !== n && 15 !== n && 3 !== a) {
          var s = (t[e + 2] >> 1) & 1,
            o = t[e + 3] >> 6,
            l = 1e3 * vi[14 * (3 === r ? 3 - i : 3 === i ? 3 : 4) + n - 1],
            u = mi[3 * (3 === r ? 0 : 2 === r ? 1 : 2) + a],
            h = 3 === o ? 1 : 2,
            d = pi[r][i],
            c = yi[i],
            f = 8 * d * c,
            g = Math.floor((d * l) / u + s) * c;
          if (null === gi) {
            var v = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
            gi = v ? parseInt(v[1]) : 0;
          }
          return (
            !!gi &&
              gi <= 87 &&
              2 === i &&
              l >= 224e3 &&
              0 === o &&
              (t[e + 3] = 128 | t[e + 3]),
            {
              sampleRate: u,
              channelCount: h,
              frameLength: g,
              samplesPerFrame: f,
            }
          );
        }
      }
      function Si(t, e) {
        return 255 === t[e] && 224 == (224 & t[e + 1]) && 0 != (6 & t[e + 1]);
      }
      function Li(t, e) {
        return e + 1 < t.length && Si(t, e);
      }
      function Ri(t, e) {
        if (e + 1 < t.length && Si(t, e)) {
          var r = Ei(t, e),
            i = 4;
          null != r && r.frameLength && (i = r.frameLength);
          var n = e + i;
          return n === t.length || Li(t, n);
        }
        return !1;
      }
      var Ai = (function () {
          function t(t) {
            (this.data = void 0),
              (this.bytesAvailable = void 0),
              (this.word = void 0),
              (this.bitsAvailable = void 0),
              (this.data = t),
              (this.bytesAvailable = t.byteLength),
              (this.word = 0),
              (this.bitsAvailable = 0);
          }
          var e = t.prototype;
          return (
            (e.loadWord = function () {
              var t = this.data,
                e = this.bytesAvailable,
                r = t.byteLength - e,
                i = new Uint8Array(4),
                n = Math.min(4, e);
              if (0 === n) throw new Error("no bytes available");
              i.set(t.subarray(r, r + n)),
                (this.word = new DataView(i.buffer).getUint32(0)),
                (this.bitsAvailable = 8 * n),
                (this.bytesAvailable -= n);
            }),
            (e.skipBits = function (t) {
              var e;
              (t = Math.min(t, 8 * this.bytesAvailable + this.bitsAvailable)),
                this.bitsAvailable > t
                  ? ((this.word <<= t), (this.bitsAvailable -= t))
                  : ((t -= this.bitsAvailable),
                    (t -= (e = t >> 3) << 3),
                    (this.bytesAvailable -= e),
                    this.loadWord(),
                    (this.word <<= t),
                    (this.bitsAvailable -= t));
            }),
            (e.readBits = function (t) {
              var e = Math.min(this.bitsAvailable, t),
                r = this.word >>> (32 - e);
              if (
                (t > 32 && w.error("Cannot read more than 32 bits at a time"),
                (this.bitsAvailable -= e),
                this.bitsAvailable > 0)
              )
                this.word <<= e;
              else {
                if (!(this.bytesAvailable > 0))
                  throw new Error("no bits available");
                this.loadWord();
              }
              return (e = t - e) > 0 && this.bitsAvailable
                ? (r << e) | this.readBits(e)
                : r;
            }),
            (e.skipLZ = function () {
              var t;
              for (t = 0; t < this.bitsAvailable; ++t)
                if (0 != (this.word & (2147483648 >>> t)))
                  return (this.word <<= t), (this.bitsAvailable -= t), t;
              return this.loadWord(), t + this.skipLZ();
            }),
            (e.skipUEG = function () {
              this.skipBits(1 + this.skipLZ());
            }),
            (e.skipEG = function () {
              this.skipBits(1 + this.skipLZ());
            }),
            (e.readUEG = function () {
              var t = this.skipLZ();
              return this.readBits(t + 1) - 1;
            }),
            (e.readEG = function () {
              var t = this.readUEG();
              return 1 & t ? (1 + t) >>> 1 : -1 * (t >>> 1);
            }),
            (e.readBoolean = function () {
              return 1 === this.readBits(1);
            }),
            (e.readUByte = function () {
              return this.readBits(8);
            }),
            (e.readUShort = function () {
              return this.readBits(16);
            }),
            (e.readUInt = function () {
              return this.readBits(32);
            }),
            (e.skipScalingList = function (t) {
              for (var e = 8, r = 8, i = 0; i < t; i++)
                0 !== r && (r = (e + this.readEG() + 256) % 256),
                  (e = 0 === r ? e : r);
            }),
            (e.readSPS = function () {
              var t,
                e,
                r,
                i = 0,
                n = 0,
                a = 0,
                s = 0,
                o = this.readUByte.bind(this),
                l = this.readBits.bind(this),
                u = this.readUEG.bind(this),
                h = this.readBoolean.bind(this),
                d = this.skipBits.bind(this),
                c = this.skipEG.bind(this),
                f = this.skipUEG.bind(this),
                g = this.skipScalingList.bind(this);
              o();
              var v = o();
              if (
                (l(5),
                d(3),
                o(),
                f(),
                100 === v ||
                  110 === v ||
                  122 === v ||
                  244 === v ||
                  44 === v ||
                  83 === v ||
                  86 === v ||
                  118 === v ||
                  128 === v)
              ) {
                var m = u();
                if ((3 === m && d(1), f(), f(), d(1), h()))
                  for (e = 3 !== m ? 8 : 12, r = 0; r < e; r++)
                    h() && g(r < 6 ? 16 : 64);
              }
              f();
              var p = u();
              if (0 === p) u();
              else if (1 === p)
                for (d(1), c(), c(), t = u(), r = 0; r < t; r++) c();
              f(), d(1);
              var y = u(),
                T = u(),
                E = l(1);
              0 === E && d(1),
                d(1),
                h() && ((i = u()), (n = u()), (a = u()), (s = u()));
              var S = [1, 1];
              if (h() && h())
                switch (o()) {
                  case 1:
                    S = [1, 1];
                    break;
                  case 2:
                    S = [12, 11];
                    break;
                  case 3:
                    S = [10, 11];
                    break;
                  case 4:
                    S = [16, 11];
                    break;
                  case 5:
                    S = [40, 33];
                    break;
                  case 6:
                    S = [24, 11];
                    break;
                  case 7:
                    S = [20, 11];
                    break;
                  case 8:
                    S = [32, 11];
                    break;
                  case 9:
                    S = [80, 33];
                    break;
                  case 10:
                    S = [18, 11];
                    break;
                  case 11:
                    S = [15, 11];
                    break;
                  case 12:
                    S = [64, 33];
                    break;
                  case 13:
                    S = [160, 99];
                    break;
                  case 14:
                    S = [4, 3];
                    break;
                  case 15:
                    S = [3, 2];
                    break;
                  case 16:
                    S = [2, 1];
                    break;
                  case 255:
                    S = [(o() << 8) | o(), (o() << 8) | o()];
                }
              return {
                width: Math.ceil(16 * (y + 1) - 2 * i - 2 * n),
                height: (2 - E) * (T + 1) * 16 - (E ? 2 : 4) * (a + s),
                pixelRatio: S,
              };
            }),
            (e.readSliceType = function () {
              return this.readUByte(), this.readUEG(), this.readUEG();
            }),
            t
          );
        })(),
        ki = (function () {
          function t(t, e, r) {
            (this.keyData = void 0),
              (this.decrypter = void 0),
              (this.keyData = r),
              (this.decrypter = new Ur(e, { removePKCS7Padding: !1 }));
          }
          var e = t.prototype;
          return (
            (e.decryptBuffer = function (t) {
              return this.decrypter.decrypt(
                t,
                this.keyData.key.buffer,
                this.keyData.iv.buffer
              );
            }),
            (e.decryptAacSample = function (t, e, r) {
              var i = this,
                n = t[e].unit;
              if (!(n.length <= 16)) {
                var a = n.subarray(16, n.length - (n.length % 16)),
                  s = a.buffer.slice(a.byteOffset, a.byteOffset + a.length);
                this.decryptBuffer(s).then(function (a) {
                  var s = new Uint8Array(a);
                  n.set(s, 16),
                    i.decrypter.isSync() || i.decryptAacSamples(t, e + 1, r);
                });
              }
            }),
            (e.decryptAacSamples = function (t, e, r) {
              for (; ; e++) {
                if (e >= t.length) return void r();
                if (
                  !(
                    t[e].unit.length < 32 ||
                    (this.decryptAacSample(t, e, r), this.decrypter.isSync())
                  )
                )
                  return;
              }
            }),
            (e.getAvcEncryptedData = function (t) {
              for (
                var e = 16 * Math.floor((t.length - 48) / 160) + 16,
                  r = new Int8Array(e),
                  i = 0,
                  n = 32;
                n < t.length - 16;
                n += 160, i += 16
              )
                r.set(t.subarray(n, n + 16), i);
              return r;
            }),
            (e.getAvcDecryptedUnit = function (t, e) {
              for (
                var r = new Uint8Array(e), i = 0, n = 32;
                n < t.length - 16;
                n += 160, i += 16
              )
                t.set(r.subarray(i, i + 16), n);
              return t;
            }),
            (e.decryptAvcSample = function (t, e, r, i, n) {
              var a = this,
                s = Nt(n.data),
                o = this.getAvcEncryptedData(s);
              this.decryptBuffer(o.buffer).then(function (o) {
                (n.data = a.getAvcDecryptedUnit(s, o)),
                  a.decrypter.isSync() || a.decryptAvcSamples(t, e, r + 1, i);
              });
            }),
            (e.decryptAvcSamples = function (t, e, r, i) {
              if (t instanceof Uint8Array)
                throw new Error("Cannot decrypt samples of type Uint8Array");
              for (; ; e++, r = 0) {
                if (e >= t.length) return void i();
                for (var n = t[e].units; !(r >= n.length); r++) {
                  var a = n[r];
                  if (
                    !(
                      a.data.length <= 48 ||
                      (1 !== a.type && 5 !== a.type) ||
                      (this.decryptAvcSample(t, e, r, i, a),
                      this.decrypter.isSync())
                    )
                  )
                    return;
                }
              }
            }),
            t
          );
        })(),
        bi = 188,
        Di = (function () {
          function t(t, e, r) {
            (this.observer = void 0),
              (this.config = void 0),
              (this.typeSupported = void 0),
              (this.sampleAes = null),
              (this.pmtParsed = !1),
              (this.audioCodec = void 0),
              (this.videoCodec = void 0),
              (this._duration = 0),
              (this._pmtId = -1),
              (this._avcTrack = void 0),
              (this._audioTrack = void 0),
              (this._id3Track = void 0),
              (this._txtTrack = void 0),
              (this.aacOverFlow = null),
              (this.avcSample = null),
              (this.remainderData = null),
              (this.observer = t),
              (this.config = e),
              (this.typeSupported = r);
          }
          (t.probe = function (e) {
            var r = t.syncOffset(e);
            return (
              r > 0 &&
                w.warn(
                  "MPEG2-TS detected but first sync word found @ offset " + r
                ),
              -1 !== r
            );
          }),
            (t.syncOffset = function (t) {
              for (
                var e = t.length, r = Math.min(940, t.length - bi) + 1, i = 0;
                i < r;

              ) {
                for (var n = !1, a = -1, s = 0, o = i; o < e; o += bi) {
                  if (71 !== t[o]) {
                    if (s) return -1;
                    break;
                  }
                  if (
                    (s++,
                    -1 === a &&
                      0 !== (a = o) &&
                      (r = Math.min(a + 18612, t.length - bi) + 1),
                    n || (n = 0 === wi(t, o)),
                    n && s > 1 && ((0 === a && s > 2) || o + bi > r))
                  )
                    return a;
                }
                i++;
              }
              return -1;
            }),
            (t.createTrack = function (t, e) {
              return {
                container:
                  "video" === t || "audio" === t ? "video/mp2t" : void 0,
                type: t,
                id: Lt[t],
                pid: -1,
                inputTimeScale: 9e4,
                sequenceNumber: 0,
                samples: [],
                dropped: 0,
                duration: "audio" === t ? e : void 0,
              };
            });
          var e = t.prototype;
          return (
            (e.resetInitSegment = function (e, r, i, n) {
              (this.pmtParsed = !1),
                (this._pmtId = -1),
                (this._avcTrack = t.createTrack("video")),
                (this._audioTrack = t.createTrack("audio", n)),
                (this._id3Track = t.createTrack("id3")),
                (this._txtTrack = t.createTrack("text")),
                (this._audioTrack.segmentCodec = "aac"),
                (this.aacOverFlow = null),
                (this.avcSample = null),
                (this.remainderData = null),
                (this.audioCodec = r),
                (this.videoCodec = i),
                (this._duration = n);
            }),
            (e.resetTimeStamp = function () {}),
            (e.resetContiguity = function () {
              var t = this._audioTrack,
                e = this._avcTrack,
                r = this._id3Track;
              t && (t.pesData = null),
                e && (e.pesData = null),
                r && (r.pesData = null),
                (this.aacOverFlow = null),
                (this.avcSample = null),
                (this.remainderData = null);
            }),
            (e.demux = function (e, r, i, n) {
              var a;
              void 0 === i && (i = !1),
                void 0 === n && (n = !1),
                i || (this.sampleAes = null);
              var s = this._avcTrack,
                o = this._audioTrack,
                l = this._id3Track,
                u = this._txtTrack,
                h = s.pid,
                d = s.pesData,
                c = o.pid,
                f = l.pid,
                g = o.pesData,
                v = l.pesData,
                m = null,
                p = this.pmtParsed,
                y = this._pmtId,
                T = e.length;
              if (
                (this.remainderData &&
                  ((T = (e = xt(this.remainderData, e)).length),
                  (this.remainderData = null)),
                T < bi && !n)
              )
                return (
                  (this.remainderData = e),
                  { audioTrack: o, videoTrack: s, id3Track: l, textTrack: u }
                );
              var E = Math.max(0, t.syncOffset(e));
              (T -= (T - E) % bi) < e.byteLength &&
                !n &&
                (this.remainderData = new Uint8Array(
                  e.buffer,
                  T,
                  e.buffer.byteLength - T
                ));
              for (var A = 0, k = E; k < T; k += bi)
                if (71 === e[k]) {
                  var b = !!(64 & e[k + 1]),
                    D = wi(e, k),
                    I = void 0;
                  if ((48 & e[k + 3]) >> 4 > 1) {
                    if ((I = k + 5 + e[k + 4]) === k + bi) continue;
                  } else I = k + 4;
                  switch (D) {
                    case h:
                      b &&
                        (d && (a = Pi(d)) && this.parseAVCPES(s, u, a, !1),
                        (d = { data: [], size: 0 })),
                        d &&
                          (d.data.push(e.subarray(I, k + bi)),
                          (d.size += k + bi - I));
                      break;
                    case c:
                      if (b) {
                        if (g && (a = Pi(g)))
                          switch (o.segmentCodec) {
                            case "aac":
                              this.parseAACPES(o, a);
                              break;
                            case "mp3":
                              this.parseMPEGPES(o, a);
                          }
                        g = { data: [], size: 0 };
                      }
                      g &&
                        (g.data.push(e.subarray(I, k + bi)),
                        (g.size += k + bi - I));
                      break;
                    case f:
                      b &&
                        (v && (a = Pi(v)) && this.parseID3PES(l, a),
                        (v = { data: [], size: 0 })),
                        v &&
                          (v.data.push(e.subarray(I, k + bi)),
                          (v.size += k + bi - I));
                      break;
                    case 0:
                      b && (I += e[I] + 1), (y = this._pmtId = Ci(e, I));
                      break;
                    case y:
                      b && (I += e[I] + 1);
                      var C = _i(e, I, this.typeSupported, i);
                      (h = C.avc) > 0 && (s.pid = h),
                        (c = C.audio) > 0 &&
                          ((o.pid = c), (o.segmentCodec = C.segmentCodec)),
                        (f = C.id3) > 0 && (l.pid = f),
                        null === m ||
                          p ||
                          (w.warn(
                            "MPEG-TS PMT found at " +
                              k +
                              " after unknown PID '" +
                              m +
                              "'. Backtracking to sync byte @" +
                              E +
                              " to parse all TS packets."
                          ),
                          (m = null),
                          (k = E - 188)),
                        (p = this.pmtParsed = !0);
                      break;
                    case 17:
                    case 8191:
                      break;
                    default:
                      m = D;
                  }
                } else A++;
              if (A > 0) {
                var _ = new Error(
                  "Found " + A + " TS packet/s that do not start with 0x47"
                );
                this.observer.emit(S.ERROR, S.ERROR, {
                  type: L.MEDIA_ERROR,
                  details: R.FRAG_PARSING_ERROR,
                  fatal: !1,
                  error: _,
                  reason: _.message,
                });
              }
              (s.pesData = d), (o.pesData = g), (l.pesData = v);
              var P = {
                audioTrack: o,
                videoTrack: s,
                id3Track: l,
                textTrack: u,
              };
              return n && this.extractRemainingSamples(P), P;
            }),
            (e.flush = function () {
              var t,
                e = this.remainderData;
              return (
                (this.remainderData = null),
                (t = e
                  ? this.demux(e, -1, !1, !0)
                  : {
                      videoTrack: this._avcTrack,
                      audioTrack: this._audioTrack,
                      id3Track: this._id3Track,
                      textTrack: this._txtTrack,
                    }),
                this.extractRemainingSamples(t),
                this.sampleAes ? this.decrypt(t, this.sampleAes) : t
              );
            }),
            (e.extractRemainingSamples = function (t) {
              var e,
                r = t.audioTrack,
                i = t.videoTrack,
                n = t.id3Track,
                a = t.textTrack,
                s = i.pesData,
                o = r.pesData,
                l = n.pesData;
              if (
                (s && (e = Pi(s))
                  ? (this.parseAVCPES(i, a, e, !0), (i.pesData = null))
                  : (i.pesData = s),
                o && (e = Pi(o)))
              ) {
                switch (r.segmentCodec) {
                  case "aac":
                    this.parseAACPES(r, e);
                    break;
                  case "mp3":
                    this.parseMPEGPES(r, e);
                }
                r.pesData = null;
              } else
                null != o &&
                  o.size &&
                  w.log(
                    "last AAC PES packet truncated,might overlap between fragments"
                  ),
                  (r.pesData = o);
              l && (e = Pi(l))
                ? (this.parseID3PES(n, e), (n.pesData = null))
                : (n.pesData = l);
            }),
            (e.demuxSampleAes = function (t, e, r) {
              var i = this.demux(t, r, !0, !this.config.progressive),
                n = (this.sampleAes = new ki(this.observer, this.config, e));
              return this.decrypt(i, n);
            }),
            (e.decrypt = function (t, e) {
              return new Promise(function (r) {
                var i = t.audioTrack,
                  n = t.videoTrack;
                i.samples && "aac" === i.segmentCodec
                  ? e.decryptAacSamples(i.samples, 0, function () {
                      n.samples
                        ? e.decryptAvcSamples(n.samples, 0, 0, function () {
                            r(t);
                          })
                        : r(t);
                    })
                  : n.samples &&
                    e.decryptAvcSamples(n.samples, 0, 0, function () {
                      r(t);
                    });
              });
            }),
            (e.destroy = function () {
              this._duration = 0;
            }),
            (e.parseAVCPES = function (t, e, r, i) {
              var n,
                a = this,
                s = this.parseAVCNALu(t, r.data),
                o = this.avcSample,
                l = !1;
              (r.data = null),
                o &&
                  s.length &&
                  !t.audFound &&
                  (xi(o, t), (o = this.avcSample = Ii(!1, r.pts, r.dts, ""))),
                s.forEach(function (i) {
                  var s;
                  switch (i.type) {
                    case 1:
                      var u = !1;
                      n = !0;
                      var h,
                        d = i.data;
                      if (l && d.length > 4) {
                        var c = new Ai(d).readSliceType();
                        (2 !== c && 4 !== c && 7 !== c && 9 !== c) || (u = !0);
                      }
                      u &&
                        null != (h = o) &&
                        h.frame &&
                        !o.key &&
                        (xi(o, t), (o = a.avcSample = null)),
                        o || (o = a.avcSample = Ii(!0, r.pts, r.dts, "")),
                        (o.frame = !0),
                        (o.key = u);
                      break;
                    case 5:
                      (n = !0),
                        null != (s = o) &&
                          s.frame &&
                          !o.key &&
                          (xi(o, t), (o = a.avcSample = null)),
                        o || (o = a.avcSample = Ii(!0, r.pts, r.dts, "")),
                        (o.key = !0),
                        (o.frame = !0);
                      break;
                    case 6:
                      (n = !0), Ot(i.data, 1, r.pts, e.samples);
                      break;
                    case 7:
                      if (((n = !0), (l = !0), !t.sps)) {
                        var f = i.data,
                          g = new Ai(f).readSPS();
                        (t.width = g.width),
                          (t.height = g.height),
                          (t.pixelRatio = g.pixelRatio),
                          (t.sps = [f]),
                          (t.duration = a._duration);
                        for (
                          var v = f.subarray(1, 4), m = "avc1.", p = 0;
                          p < 3;
                          p++
                        ) {
                          var y = v[p].toString(16);
                          y.length < 2 && (y = "0" + y), (m += y);
                        }
                        t.codec = m;
                      }
                      break;
                    case 8:
                      (n = !0), t.pps || (t.pps = [i.data]);
                      break;
                    case 9:
                      (n = !1),
                        (t.audFound = !0),
                        o && xi(o, t),
                        (o = a.avcSample = Ii(!1, r.pts, r.dts, ""));
                      break;
                    case 12:
                      n = !0;
                      break;
                    default:
                      (n = !1), o && (o.debug += "unknown NAL " + i.type + " ");
                  }
                  o && n && o.units.push(i);
                }),
                i && o && (xi(o, t), (this.avcSample = null));
            }),
            (e.getLastNalUnit = function (t) {
              var e,
                r,
                i = this.avcSample;
              if (
                ((i && 0 !== i.units.length) || (i = t[t.length - 1]),
                null != (e = i) && e.units)
              ) {
                var n = i.units;
                r = n[n.length - 1];
              }
              return r;
            }),
            (e.parseAVCNALu = function (t, e) {
              var r,
                i,
                n = e.byteLength,
                a = t.naluState || 0,
                s = a,
                o = [],
                l = 0,
                u = -1,
                h = 0;
              for (
                -1 === a && ((u = 0), (h = 31 & e[0]), (a = 0), (l = 1));
                l < n;

              )
                if (((r = e[l++]), a))
                  if (1 !== a)
                    if (r)
                      if (1 === r) {
                        if (u >= 0) {
                          var d = { data: e.subarray(u, l - a - 1), type: h };
                          o.push(d);
                        } else {
                          var c = this.getLastNalUnit(t.samples);
                          if (
                            c &&
                            (s &&
                              l <= 4 - s &&
                              c.state &&
                              (c.data = c.data.subarray(
                                0,
                                c.data.byteLength - s
                              )),
                            (i = l - a - 1) > 0)
                          ) {
                            var f = new Uint8Array(c.data.byteLength + i);
                            f.set(c.data, 0),
                              f.set(e.subarray(0, i), c.data.byteLength),
                              (c.data = f),
                              (c.state = 0);
                          }
                        }
                        l < n ? ((u = l), (h = 31 & e[l]), (a = 0)) : (a = -1);
                      } else a = 0;
                    else a = 3;
                  else a = r ? 0 : 2;
                else a = r ? 0 : 1;
              if (u >= 0 && a >= 0) {
                var g = { data: e.subarray(u, n), type: h, state: a };
                o.push(g);
              }
              if (0 === o.length) {
                var v = this.getLastNalUnit(t.samples);
                if (v) {
                  var m = new Uint8Array(v.data.byteLength + e.byteLength);
                  m.set(v.data, 0), m.set(e, v.data.byteLength), (v.data = m);
                }
              }
              return (t.naluState = a), o;
            }),
            (e.parseAACPES = function (t, e) {
              var r,
                i,
                n,
                a = 0,
                s = this.aacOverFlow,
                o = e.data;
              if (s) {
                this.aacOverFlow = null;
                var l = s.missing,
                  u = s.sample.unit.byteLength;
                if (-1 === l) {
                  var h = new Uint8Array(u + o.byteLength);
                  h.set(s.sample.unit, 0), h.set(o, u), (o = h);
                } else {
                  var d = u - l;
                  s.sample.unit.set(o.subarray(0, l), d),
                    t.samples.push(s.sample),
                    (a = s.missing);
                }
              }
              for (r = a, i = o.length; r < i - 1 && !si(o, r); r++);
              if (r !== a) {
                var c,
                  f = r < i - 1;
                c = f
                  ? "AAC PES did not start with ADTS header,offset:" + r
                  : "No ADTS header found in AAC PES";
                var g = new Error(c);
                if (
                  (w.warn("parsing error: " + c),
                  this.observer.emit(S.ERROR, S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: R.FRAG_PARSING_ERROR,
                    fatal: !1,
                    levelRetry: f,
                    error: g,
                    reason: c,
                  }),
                  !f)
                )
                  return;
              }
              if (
                (li(t, this.observer, o, r, this.audioCodec), void 0 !== e.pts)
              )
                n = e.pts;
              else {
                if (!s) return void w.warn("[tsdemuxer]: AAC PES unknown PTS");
                var v = ui(t.samplerate);
                n = s.sample.pts + v;
              }
              for (var m, p = 0; r < i; ) {
                if (((r += (m = hi(t, o, r, n, p)).length), m.missing)) {
                  this.aacOverFlow = m;
                  break;
                }
                for (p++; r < i - 1 && !si(o, r); r++);
              }
            }),
            (e.parseMPEGPES = function (t, e) {
              var r = e.data,
                i = r.length,
                n = 0,
                a = 0,
                s = e.pts;
              if (void 0 !== s)
                for (; a < i; )
                  if (Li(r, a)) {
                    var o = Ti(t, r, a, s, n);
                    if (!o) break;
                    (a += o.length), n++;
                  } else a++;
              else w.warn("[tsdemuxer]: MPEG PES unknown PTS");
            }),
            (e.parseID3PES = function (t, e) {
              if (void 0 !== e.pts) {
                var r = o({}, e, {
                  type: this._avcTrack ? be : Ae,
                  duration: Number.POSITIVE_INFINITY,
                });
                t.samples.push(r);
              } else w.warn("[tsdemuxer]: ID3 PES unknown PTS");
            }),
            t
          );
        })();
      function Ii(t, e, r, i) {
        return {
          key: t,
          frame: !1,
          pts: e,
          dts: r,
          units: [],
          debug: i,
          length: 0,
        };
      }
      function wi(t, e) {
        return ((31 & t[e + 1]) << 8) + t[e + 2];
      }
      function Ci(t, e) {
        return ((31 & t[e + 10]) << 8) | t[e + 11];
      }
      function _i(t, e, r, i) {
        var n = { audio: -1, avc: -1, id3: -1, segmentCodec: "aac" },
          a = e + 3 + (((15 & t[e + 1]) << 8) | t[e + 2]) - 4;
        for (e += 12 + (((15 & t[e + 10]) << 8) | t[e + 11]); e < a; ) {
          var s = wi(t, e);
          switch (t[e]) {
            case 207:
              if (!i) {
                w.log(
                  "ADTS AAC with AES-128-CBC frame encryption found in unencrypted stream"
                );
                break;
              }
            case 15:
              -1 === n.audio && (n.audio = s);
              break;
            case 21:
              -1 === n.id3 && (n.id3 = s);
              break;
            case 219:
              if (!i) {
                w.log(
                  "H.264 with AES-128-CBC slice encryption found in unencrypted stream"
                );
                break;
              }
            case 27:
              -1 === n.avc && (n.avc = s);
              break;
            case 3:
            case 4:
              !0 !== r.mpeg && !0 !== r.mp3
                ? w.log("MPEG audio found, not supported in this browser")
                : -1 === n.audio && ((n.audio = s), (n.segmentCodec = "mp3"));
              break;
            case 36:
              w.warn("Unsupported HEVC stream type found");
          }
          e += 5 + (((15 & t[e + 3]) << 8) | t[e + 4]);
        }
        return n;
      }
      function Pi(t) {
        var e,
          r,
          i,
          n,
          a,
          s = 0,
          o = t.data;
        if (!t || 0 === t.size) return null;
        for (; o[0].length < 19 && o.length > 1; ) {
          var l = new Uint8Array(o[0].length + o[1].length);
          l.set(o[0]), l.set(o[1], o[0].length), (o[0] = l), o.splice(1, 1);
        }
        if (1 === ((e = o[0])[0] << 16) + (e[1] << 8) + e[2]) {
          if ((r = (e[4] << 8) + e[5]) && r > t.size - 6) return null;
          var u = e[7];
          192 & u &&
            ((n =
              536870912 * (14 & e[9]) +
              4194304 * (255 & e[10]) +
              16384 * (254 & e[11]) +
              128 * (255 & e[12]) +
              (254 & e[13]) / 2),
            64 & u
              ? n -
                  (a =
                    536870912 * (14 & e[14]) +
                    4194304 * (255 & e[15]) +
                    16384 * (254 & e[16]) +
                    128 * (255 & e[17]) +
                    (254 & e[18]) / 2) >
                  54e5 &&
                (w.warn(
                  Math.round((n - a) / 9e4) +
                    "s delta between PTS and DTS, align them"
                ),
                (n = a))
              : (a = n));
          var h = (i = e[8]) + 9;
          if (t.size <= h) return null;
          t.size -= h;
          for (
            var d = new Uint8Array(t.size), c = 0, f = o.length;
            c < f;
            c++
          ) {
            var g = (e = o[c]).byteLength;
            if (h) {
              if (h > g) {
                h -= g;
                continue;
              }
              (e = e.subarray(h)), (g -= h), (h = 0);
            }
            d.set(e, s), (s += g);
          }
          return r && (r -= i + 3), { data: d, pts: n, dts: a, len: r };
        }
        return null;
      }
      function xi(t, e) {
        if (t.units.length && t.frame) {
          if (void 0 === t.pts) {
            var r = e.samples,
              i = r.length;
            if (!i) return void e.dropped++;
            var n = r[i - 1];
            (t.pts = n.pts), (t.dts = n.dts);
          }
          e.samples.push(t);
        }
        t.debug.length && w.log(t.pts + "/" + t.dts + ":" + t.debug);
      }
      var Fi = (function (t) {
          function e() {
            return t.apply(this, arguments) || this;
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.resetInitSegment = function (e, r, i, n) {
              t.prototype.resetInitSegment.call(this, e, r, i, n),
                (this._audioTrack = {
                  container: "audio/mpeg",
                  type: "audio",
                  id: 2,
                  pid: -1,
                  sequenceNumber: 0,
                  segmentCodec: "mp3",
                  samples: [],
                  manifestCodec: r,
                  duration: n,
                  inputTimeScale: 9e4,
                  dropped: 0,
                });
            }),
            (e.probe = function (t) {
              if (!t) return !1;
              for (var e = (st(t, 0) || []).length, r = t.length; e < r; e++)
                if (Ri(t, e)) return w.log("MPEG Audio sync word found !"), !0;
              return !1;
            }),
            (r.canParse = function (t, e) {
              return (function (t, e) {
                return Si(t, e) && 4 <= t.length - e;
              })(t, e);
            }),
            (r.appendFrame = function (t, e, r) {
              if (null !== this.basePTS)
                return Ti(t, e, r, this.basePTS, this.frameIndex);
            }),
            e
          );
        })(ei),
        Mi = (function () {
          function t() {}
          return (
            (t.getSilentFrame = function (t, e) {
              if ("mp4a.40.2" === t) {
                if (1 === e) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                if (2 === e)
                  return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                if (3 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142,
                  ]);
                if (4 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128,
                    8, 2, 56,
                  ]);
                if (5 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4,
                    153, 0, 33, 144, 2, 56,
                  ]);
                if (6 === e)
                  return new Uint8Array([
                    0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4,
                    153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224,
                  ]);
              } else {
                if (1 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6,
                    241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
                if (2 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149,
                    0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
                if (3 === e)
                  return new Uint8Array([
                    1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149,
                    0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                    90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                  ]);
              }
            }),
            t
          );
        })(),
        Oi = Math.pow(2, 32) - 1,
        Ni = (function () {
          function t() {}
          return (
            (t.init = function () {
              var e;
              for (e in ((t.types = {
                avc1: [],
                avcC: [],
                btrt: [],
                dinf: [],
                dref: [],
                esds: [],
                ftyp: [],
                hdlr: [],
                mdat: [],
                mdhd: [],
                mdia: [],
                mfhd: [],
                minf: [],
                moof: [],
                moov: [],
                mp4a: [],
                ".mp3": [],
                mvex: [],
                mvhd: [],
                pasp: [],
                sdtp: [],
                stbl: [],
                stco: [],
                stsc: [],
                stsd: [],
                stsz: [],
                stts: [],
                tfdt: [],
                tfhd: [],
                traf: [],
                trak: [],
                trun: [],
                trex: [],
                tkhd: [],
                vmhd: [],
                smhd: [],
              }),
              t.types))
                t.types.hasOwnProperty(e) &&
                  (t.types[e] = [
                    e.charCodeAt(0),
                    e.charCodeAt(1),
                    e.charCodeAt(2),
                    e.charCodeAt(3),
                  ]);
              var r = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100,
                  108, 101, 114, 0,
                ]),
                i = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100,
                  108, 101, 114, 0,
                ]);
              t.HDLR_TYPES = { video: r, audio: i };
              var n = new Uint8Array([
                  0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0,
                  0, 1,
                ]),
                a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
              (t.STTS = t.STSC = t.STCO = a),
                (t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])),
                (t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])),
                (t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
                (t.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]));
              var s = new Uint8Array([105, 115, 111, 109]),
                o = new Uint8Array([97, 118, 99, 49]),
                l = new Uint8Array([0, 0, 0, 1]);
              (t.FTYP = t.box(t.types.ftyp, s, l, s, o)),
                (t.DINF = t.box(t.types.dinf, t.box(t.types.dref, n)));
            }),
            (t.box = function (t) {
              for (
                var e = 8,
                  r = arguments.length,
                  i = new Array(r > 1 ? r - 1 : 0),
                  n = 1;
                n < r;
                n++
              )
                i[n - 1] = arguments[n];
              for (var a = i.length, s = a; a--; ) e += i[a].byteLength;
              var o = new Uint8Array(e);
              for (
                o[0] = (e >> 24) & 255,
                  o[1] = (e >> 16) & 255,
                  o[2] = (e >> 8) & 255,
                  o[3] = 255 & e,
                  o.set(t, 4),
                  a = 0,
                  e = 8;
                a < s;
                a++
              )
                o.set(i[a], e), (e += i[a].byteLength);
              return o;
            }),
            (t.hdlr = function (e) {
              return t.box(t.types.hdlr, t.HDLR_TYPES[e]);
            }),
            (t.mdat = function (e) {
              return t.box(t.types.mdat, e);
            }),
            (t.mdhd = function (e, r) {
              r *= e;
              var i = Math.floor(r / (Oi + 1)),
                n = Math.floor(r % (Oi + 1));
              return t.box(
                t.types.mdhd,
                new Uint8Array([
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (e >> 24) & 255,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                  i >> 24,
                  (i >> 16) & 255,
                  (i >> 8) & 255,
                  255 & i,
                  n >> 24,
                  (n >> 16) & 255,
                  (n >> 8) & 255,
                  255 & n,
                  85,
                  196,
                  0,
                  0,
                ])
              );
            }),
            (t.mdia = function (e) {
              return t.box(
                t.types.mdia,
                t.mdhd(e.timescale, e.duration),
                t.hdlr(e.type),
                t.minf(e)
              );
            }),
            (t.mfhd = function (e) {
              return t.box(
                t.types.mfhd,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  e >> 24,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                ])
              );
            }),
            (t.minf = function (e) {
              return "audio" === e.type
                ? t.box(
                    t.types.minf,
                    t.box(t.types.smhd, t.SMHD),
                    t.DINF,
                    t.stbl(e)
                  )
                : t.box(
                    t.types.minf,
                    t.box(t.types.vmhd, t.VMHD),
                    t.DINF,
                    t.stbl(e)
                  );
            }),
            (t.moof = function (e, r, i) {
              return t.box(t.types.moof, t.mfhd(e), t.traf(i, r));
            }),
            (t.moov = function (e) {
              for (var r = e.length, i = []; r--; ) i[r] = t.trak(e[r]);
              return t.box.apply(
                null,
                [t.types.moov, t.mvhd(e[0].timescale, e[0].duration)]
                  .concat(i)
                  .concat(t.mvex(e))
              );
            }),
            (t.mvex = function (e) {
              for (var r = e.length, i = []; r--; ) i[r] = t.trex(e[r]);
              return t.box.apply(null, [t.types.mvex].concat(i));
            }),
            (t.mvhd = function (e, r) {
              r *= e;
              var i = Math.floor(r / (Oi + 1)),
                n = Math.floor(r % (Oi + 1)),
                a = new Uint8Array([
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (e >> 24) & 255,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                  i >> 24,
                  (i >> 16) & 255,
                  (i >> 8) & 255,
                  255 & i,
                  n >> 24,
                  (n >> 16) & 255,
                  (n >> 8) & 255,
                  255 & n,
                  0,
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  64,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  255,
                  255,
                  255,
                  255,
                ]);
              return t.box(t.types.mvhd, a);
            }),
            (t.sdtp = function (e) {
              var r,
                i,
                n = e.samples || [],
                a = new Uint8Array(4 + n.length);
              for (r = 0; r < n.length; r++)
                (i = n[r].flags),
                  (a[r + 4] =
                    (i.dependsOn << 4) |
                    (i.isDependedOn << 2) |
                    i.hasRedundancy);
              return t.box(t.types.sdtp, a);
            }),
            (t.stbl = function (e) {
              return t.box(
                t.types.stbl,
                t.stsd(e),
                t.box(t.types.stts, t.STTS),
                t.box(t.types.stsc, t.STSC),
                t.box(t.types.stsz, t.STSZ),
                t.box(t.types.stco, t.STCO)
              );
            }),
            (t.avc1 = function (e) {
              var r,
                i,
                n,
                a = [],
                s = [];
              for (r = 0; r < e.sps.length; r++)
                (n = (i = e.sps[r]).byteLength),
                  a.push((n >>> 8) & 255),
                  a.push(255 & n),
                  (a = a.concat(Array.prototype.slice.call(i)));
              for (r = 0; r < e.pps.length; r++)
                (n = (i = e.pps[r]).byteLength),
                  s.push((n >>> 8) & 255),
                  s.push(255 & n),
                  (s = s.concat(Array.prototype.slice.call(i)));
              var o = t.box(
                  t.types.avcC,
                  new Uint8Array(
                    [1, a[3], a[4], a[5], 255, 224 | e.sps.length]
                      .concat(a)
                      .concat([e.pps.length])
                      .concat(s)
                  )
                ),
                l = e.width,
                u = e.height,
                h = e.pixelRatio[0],
                d = e.pixelRatio[1];
              return t.box(
                t.types.avc1,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  (l >> 8) & 255,
                  255 & l,
                  (u >> 8) & 255,
                  255 & u,
                  0,
                  72,
                  0,
                  0,
                  0,
                  72,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  18,
                  100,
                  97,
                  105,
                  108,
                  121,
                  109,
                  111,
                  116,
                  105,
                  111,
                  110,
                  47,
                  104,
                  108,
                  115,
                  46,
                  106,
                  115,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  24,
                  17,
                  17,
                ]),
                o,
                t.box(
                  t.types.btrt,
                  new Uint8Array([
                    0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192,
                  ])
                ),
                t.box(
                  t.types.pasp,
                  new Uint8Array([
                    h >> 24,
                    (h >> 16) & 255,
                    (h >> 8) & 255,
                    255 & h,
                    d >> 24,
                    (d >> 16) & 255,
                    (d >> 8) & 255,
                    255 & d,
                  ])
                )
              );
            }),
            (t.esds = function (t) {
              var e = t.config.length;
              return new Uint8Array(
                [
                  0,
                  0,
                  0,
                  0,
                  3,
                  23 + e,
                  0,
                  1,
                  0,
                  4,
                  15 + e,
                  64,
                  21,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  5,
                ]
                  .concat([e])
                  .concat(t.config)
                  .concat([6, 1, 2])
              );
            }),
            (t.mp4a = function (e) {
              var r = e.samplerate;
              return t.box(
                t.types.mp4a,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  e.channelCount,
                  0,
                  16,
                  0,
                  0,
                  0,
                  0,
                  (r >> 8) & 255,
                  255 & r,
                  0,
                  0,
                ]),
                t.box(t.types.esds, t.esds(e))
              );
            }),
            (t.mp3 = function (e) {
              var r = e.samplerate;
              return t.box(
                t.types[".mp3"],
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  e.channelCount,
                  0,
                  16,
                  0,
                  0,
                  0,
                  0,
                  (r >> 8) & 255,
                  255 & r,
                  0,
                  0,
                ])
              );
            }),
            (t.stsd = function (e) {
              return "audio" === e.type
                ? "mp3" === e.segmentCodec && "mp3" === e.codec
                  ? t.box(t.types.stsd, t.STSD, t.mp3(e))
                  : t.box(t.types.stsd, t.STSD, t.mp4a(e))
                : t.box(t.types.stsd, t.STSD, t.avc1(e));
            }),
            (t.tkhd = function (e) {
              var r = e.id,
                i = e.duration * e.timescale,
                n = e.width,
                a = e.height,
                s = Math.floor(i / (Oi + 1)),
                o = Math.floor(i % (Oi + 1));
              return t.box(
                t.types.tkhd,
                new Uint8Array([
                  1,
                  0,
                  0,
                  7,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  (r >> 24) & 255,
                  (r >> 16) & 255,
                  (r >> 8) & 255,
                  255 & r,
                  0,
                  0,
                  0,
                  0,
                  s >> 24,
                  (s >> 16) & 255,
                  (s >> 8) & 255,
                  255 & s,
                  o >> 24,
                  (o >> 16) & 255,
                  (o >> 8) & 255,
                  255 & o,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  64,
                  0,
                  0,
                  0,
                  (n >> 8) & 255,
                  255 & n,
                  0,
                  0,
                  (a >> 8) & 255,
                  255 & a,
                  0,
                  0,
                ])
              );
            }),
            (t.traf = function (e, r) {
              var i = t.sdtp(e),
                n = e.id,
                a = Math.floor(r / (Oi + 1)),
                s = Math.floor(r % (Oi + 1));
              return t.box(
                t.types.traf,
                t.box(
                  t.types.tfhd,
                  new Uint8Array([
                    0,
                    0,
                    0,
                    0,
                    n >> 24,
                    (n >> 16) & 255,
                    (n >> 8) & 255,
                    255 & n,
                  ])
                ),
                t.box(
                  t.types.tfdt,
                  new Uint8Array([
                    1,
                    0,
                    0,
                    0,
                    a >> 24,
                    (a >> 16) & 255,
                    (a >> 8) & 255,
                    255 & a,
                    s >> 24,
                    (s >> 16) & 255,
                    (s >> 8) & 255,
                    255 & s,
                  ])
                ),
                t.trun(e, i.length + 16 + 20 + 8 + 16 + 8 + 8),
                i
              );
            }),
            (t.trak = function (e) {
              return (
                (e.duration = e.duration || 4294967295),
                t.box(t.types.trak, t.tkhd(e), t.mdia(e))
              );
            }),
            (t.trex = function (e) {
              var r = e.id;
              return t.box(
                t.types.trex,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  r >> 24,
                  (r >> 16) & 255,
                  (r >> 8) & 255,
                  255 & r,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  1,
                ])
              );
            }),
            (t.trun = function (e, r) {
              var i,
                n,
                a,
                s,
                o,
                l,
                u = e.samples || [],
                h = u.length,
                d = 12 + 16 * h,
                c = new Uint8Array(d);
              for (
                r += 8 + d,
                  c.set(
                    [
                      "video" === e.type ? 1 : 0,
                      0,
                      15,
                      1,
                      (h >>> 24) & 255,
                      (h >>> 16) & 255,
                      (h >>> 8) & 255,
                      255 & h,
                      (r >>> 24) & 255,
                      (r >>> 16) & 255,
                      (r >>> 8) & 255,
                      255 & r,
                    ],
                    0
                  ),
                  i = 0;
                i < h;
                i++
              )
                (a = (n = u[i]).duration),
                  (s = n.size),
                  (o = n.flags),
                  (l = n.cts),
                  c.set(
                    [
                      (a >>> 24) & 255,
                      (a >>> 16) & 255,
                      (a >>> 8) & 255,
                      255 & a,
                      (s >>> 24) & 255,
                      (s >>> 16) & 255,
                      (s >>> 8) & 255,
                      255 & s,
                      (o.isLeading << 2) | o.dependsOn,
                      (o.isDependedOn << 6) |
                        (o.hasRedundancy << 4) |
                        (o.paddingValue << 1) |
                        o.isNonSync,
                      61440 & o.degradPrio,
                      15 & o.degradPrio,
                      (l >>> 24) & 255,
                      (l >>> 16) & 255,
                      (l >>> 8) & 255,
                      255 & l,
                    ],
                    12 + 16 * i
                  );
              return t.box(t.types.trun, c);
            }),
            (t.initSegment = function (e) {
              t.types || t.init();
              var r = t.moov(e),
                i = new Uint8Array(t.FTYP.byteLength + r.byteLength);
              return i.set(t.FTYP), i.set(r, t.FTYP.byteLength), i;
            }),
            t
          );
        })();
      function Ui(t, e, r, i) {
        void 0 === r && (r = 1), void 0 === i && (i = !1);
        var n = t * e * r;
        return i ? Math.round(n) : n;
      }
      function Bi(t, e) {
        return void 0 === e && (e = !1), Ui(t, 1e3, 1 / 9e4, e);
      }
      (Ni.types = void 0),
        (Ni.HDLR_TYPES = void 0),
        (Ni.STTS = void 0),
        (Ni.STSC = void 0),
        (Ni.STCO = void 0),
        (Ni.STSZ = void 0),
        (Ni.VMHD = void 0),
        (Ni.SMHD = void 0),
        (Ni.STSD = void 0),
        (Ni.FTYP = void 0),
        (Ni.DINF = void 0);
      var Gi = null,
        Ki = null,
        Hi = (function () {
          function t(t, e, r, i) {
            if (
              ((this.observer = void 0),
              (this.config = void 0),
              (this.typeSupported = void 0),
              (this.ISGenerated = !1),
              (this._initPTS = null),
              (this._initDTS = null),
              (this.nextAvcDts = null),
              (this.nextAudioPts = null),
              (this.videoSampleDuration = null),
              (this.isAudioContiguous = !1),
              (this.isVideoContiguous = !1),
              (this.observer = t),
              (this.config = e),
              (this.typeSupported = r),
              (this.ISGenerated = !1),
              null === Gi)
            ) {
              var n = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
              Gi = n ? parseInt(n[1]) : 0;
            }
            if (null === Ki) {
              var a = navigator.userAgent.match(/Safari\/(\d+)/i);
              Ki = a ? parseInt(a[1]) : 0;
            }
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {}),
            (e.resetTimeStamp = function (t) {
              w.log("[mp4-remuxer]: initPTS & initDTS reset"),
                (this._initPTS = this._initDTS = t);
            }),
            (e.resetNextTimestamp = function () {
              w.log("[mp4-remuxer]: reset next timestamp"),
                (this.isVideoContiguous = !1),
                (this.isAudioContiguous = !1);
            }),
            (e.resetInitSegment = function () {
              w.log("[mp4-remuxer]: ISGenerated flag reset"),
                (this.ISGenerated = !1);
            }),
            (e.getVideoStartPts = function (t) {
              var e = !1,
                r = t.reduce(function (t, r) {
                  var i = r.pts - t;
                  return i < -4294967296
                    ? ((e = !0), Vi(t, r.pts))
                    : i > 0
                    ? t
                    : r.pts;
                }, t[0].pts);
              return e && w.debug("PTS rollover detected"), r;
            }),
            (e.remux = function (t, e, r, i, n, a, s, o) {
              var l,
                u,
                h,
                d,
                c,
                f,
                g = n,
                v = n,
                m = t.pid > -1,
                p = e.pid > -1,
                y = e.samples.length,
                T = t.samples.length > 0,
                E = (s && y > 0) || y > 1;
              if (((!m || T) && (!p || E)) || this.ISGenerated || s) {
                this.ISGenerated || (h = this.generateIS(t, e, n, a));
                var S,
                  L = this.isVideoContiguous,
                  R = -1;
                if (
                  E &&
                  ((R = (function (t) {
                    for (var e = 0; e < t.length; e++) if (t[e].key) return e;
                    return -1;
                  })(e.samples)),
                  !L && this.config.forceKeyFrameOnDiscontinuity)
                )
                  if (((f = !0), R > 0)) {
                    w.warn(
                      "[mp4-remuxer]: Dropped " +
                        R +
                        " out of " +
                        y +
                        " video samples due to a missing keyframe"
                    );
                    var A = this.getVideoStartPts(e.samples);
                    (e.samples = e.samples.slice(R)),
                      (e.dropped += R),
                      (S = v += (e.samples[0].pts - A) / e.inputTimeScale);
                  } else
                    -1 === R &&
                      (w.warn(
                        "[mp4-remuxer]: No keyframe found out of " +
                          y +
                          " video samples"
                      ),
                      (f = !1));
                if (this.ISGenerated) {
                  if (T && E) {
                    var k = this.getVideoStartPts(e.samples),
                      b = (Vi(t.samples[0].pts, k) - k) / e.inputTimeScale;
                    (g += Math.max(0, b)), (v += Math.max(0, -b));
                  }
                  if (T) {
                    if (
                      (t.samplerate ||
                        (w.warn(
                          "[mp4-remuxer]: regenerate InitSegment as audio detected"
                        ),
                        (h = this.generateIS(t, e, n, a))),
                      (u = this.remuxAudio(
                        t,
                        g,
                        this.isAudioContiguous,
                        a,
                        p || E || o === ve ? v : void 0
                      )),
                      E)
                    ) {
                      var D = u ? u.endPTS - u.startPTS : 0;
                      e.inputTimeScale ||
                        (w.warn(
                          "[mp4-remuxer]: regenerate InitSegment as video detected"
                        ),
                        (h = this.generateIS(t, e, n, a))),
                        (l = this.remuxVideo(e, v, L, D));
                    }
                  } else E && (l = this.remuxVideo(e, v, L, 0));
                  l &&
                    ((l.firstKeyFrame = R),
                    (l.independent = -1 !== R),
                    (l.firstKeyFramePTS = S));
                }
              }
              return (
                this.ISGenerated &&
                  this._initPTS &&
                  this._initDTS &&
                  (r.samples.length &&
                    (c = Yi(r, n, this._initPTS, this._initDTS)),
                  i.samples.length && (d = Wi(i, n, this._initPTS))),
                {
                  audio: u,
                  video: l,
                  initSegment: h,
                  independent: f,
                  text: d,
                  id3: c,
                }
              );
            }),
            (e.generateIS = function (t, e, r, i) {
              var n,
                a,
                s,
                o = t.samples,
                l = e.samples,
                u = this.typeSupported,
                h = {},
                d = this._initPTS,
                c = !d || i,
                f = "audio/mp4";
              if (
                (c && (n = a = 1 / 0),
                t.config &&
                  o.length &&
                  ((t.timescale = t.samplerate),
                  "mp3" === t.segmentCodec &&
                    (u.mpeg
                      ? ((f = "audio/mpeg"), (t.codec = ""))
                      : u.mp3 && (t.codec = "mp3")),
                  (h.audio = {
                    id: "audio",
                    container: f,
                    codec: t.codec,
                    initSegment:
                      "mp3" === t.segmentCodec && u.mpeg
                        ? new Uint8Array(0)
                        : Ni.initSegment([t]),
                    metadata: { channelCount: t.channelCount },
                  }),
                  c &&
                    ((s = t.inputTimeScale),
                    d && s === d.timescale
                      ? (c = !1)
                      : (n = a = o[0].pts - Math.round(s * r)))),
                e.sps &&
                  e.pps &&
                  l.length &&
                  ((e.timescale = e.inputTimeScale),
                  (h.video = {
                    id: "main",
                    container: "video/mp4",
                    codec: e.codec,
                    initSegment: Ni.initSegment([e]),
                    metadata: { width: e.width, height: e.height },
                  }),
                  c))
              )
                if (((s = e.inputTimeScale), d && s === d.timescale)) c = !1;
                else {
                  var g = this.getVideoStartPts(l),
                    v = Math.round(s * r);
                  (a = Math.min(a, Vi(l[0].dts, g) - v)),
                    (n = Math.min(n, g - v));
                }
              if (Object.keys(h).length)
                return (
                  (this.ISGenerated = !0),
                  c
                    ? ((this._initPTS = { baseTime: n, timescale: s }),
                      (this._initDTS = { baseTime: a, timescale: s }))
                    : (n = s = void 0),
                  { tracks: h, initPTS: n, timescale: s }
                );
            }),
            (e.remuxVideo = function (t, e, r, i) {
              var n,
                a,
                s = t.inputTimeScale,
                l = t.samples,
                u = [],
                h = l.length,
                d = this._initPTS,
                c = this.nextAvcDts,
                f = 8,
                g = this.videoSampleDuration,
                v = Number.POSITIVE_INFINITY,
                m = Number.NEGATIVE_INFINITY,
                p = !1;
              (r && null !== c) ||
                (c = e * s - (l[0].pts - Vi(l[0].dts, l[0].pts)));
              for (var y = (d.baseTime * s) / d.timescale, T = 0; T < h; T++) {
                var E = l[T];
                (E.pts = Vi(E.pts - y, c)),
                  (E.dts = Vi(E.dts - y, c)),
                  E.dts < l[T > 0 ? T - 1 : T].dts && (p = !0);
              }
              p &&
                l.sort(function (t, e) {
                  var r = t.dts - e.dts,
                    i = t.pts - e.pts;
                  return r || i;
                }),
                (n = l[0].dts);
              var A = (a = l[l.length - 1].dts) - n,
                k = A ? Math.round(A / (h - 1)) : g || t.inputTimeScale / 30;
              if (r) {
                var b = n - c,
                  D = b > k,
                  I = b < -1;
                if (
                  (D || I) &&
                  (D
                    ? w.warn(
                        "AVC: " +
                          Bi(b, !0) +
                          " ms (" +
                          b +
                          "dts) hole between fragments detected, filling it"
                      )
                    : w.warn(
                        "AVC: " +
                          Bi(-b, !0) +
                          " ms (" +
                          b +
                          "dts) overlapping between fragments detected"
                      ),
                  !I || c >= l[0].pts)
                ) {
                  n = c;
                  var C = l[0].pts - b;
                  (l[0].dts = n),
                    (l[0].pts = C),
                    w.log(
                      "Video: First PTS/DTS adjusted: " +
                        Bi(C, !0) +
                        "/" +
                        Bi(n, !0) +
                        ", delta: " +
                        Bi(b, !0) +
                        " ms"
                    );
                }
              }
              n = Math.max(0, n);
              for (var _ = 0, P = 0, x = 0; x < h; x++) {
                for (
                  var F = l[x], M = F.units, O = M.length, N = 0, U = 0;
                  U < O;
                  U++
                )
                  N += M[U].data.length;
                (P += N),
                  (_ += O),
                  (F.length = N),
                  (F.dts = Math.max(F.dts, n)),
                  (v = Math.min(F.pts, v)),
                  (m = Math.max(F.pts, m));
              }
              a = l[h - 1].dts;
              var B,
                G = P + 4 * _ + 8;
              try {
                B = new Uint8Array(G);
              } catch (t) {
                return void this.observer.emit(S.ERROR, S.ERROR, {
                  type: L.MUX_ERROR,
                  details: R.REMUX_ALLOC_ERROR,
                  fatal: !1,
                  error: t,
                  bytes: G,
                  reason: "fail allocating video mdat " + G,
                });
              }
              var K = new DataView(B.buffer);
              K.setUint32(0, G), B.set(Ni.types.mdat, 4);
              for (
                var H = !1,
                  V = Number.POSITIVE_INFINITY,
                  Y = Number.POSITIVE_INFINITY,
                  W = Number.NEGATIVE_INFINITY,
                  j = Number.NEGATIVE_INFINITY,
                  q = 0;
                q < h;
                q++
              ) {
                for (
                  var X = l[q], z = X.units, Q = 0, $ = 0, J = z.length;
                  $ < J;
                  $++
                ) {
                  var Z = z[$],
                    tt = Z.data,
                    et = Z.data.byteLength;
                  K.setUint32(f, et),
                    (f += 4),
                    B.set(tt, f),
                    (f += et),
                    (Q += 4 + et);
                }
                var rt = void 0;
                if (q < h - 1)
                  (g = l[q + 1].dts - X.dts), (rt = l[q + 1].pts - X.pts);
                else {
                  var it = this.config,
                    nt = q > 0 ? X.dts - l[q - 1].dts : k;
                  if (
                    ((rt = q > 0 ? X.pts - l[q - 1].pts : k),
                    it.stretchShortVideoTrack && null !== this.nextAudioPts)
                  ) {
                    var at = Math.floor(it.maxBufferHole * s),
                      st = (i ? v + i * s : this.nextAudioPts) - X.pts;
                    st > at
                      ? ((g = st - nt) < 0 ? (g = nt) : (H = !0),
                        w.log(
                          "[mp4-remuxer]: It is approximately " +
                            st / 90 +
                            " ms to the next segment; using duration " +
                            g / 90 +
                            " ms for the last video frame."
                        ))
                      : (g = nt);
                  } else g = nt;
                }
                var ot = Math.round(X.pts - X.dts);
                (V = Math.min(V, g)),
                  (W = Math.max(W, g)),
                  (Y = Math.min(Y, rt)),
                  (j = Math.max(j, rt)),
                  u.push(new qi(X.key, g, Q, ot));
              }
              if (u.length)
                if (Gi) {
                  if (Gi < 70) {
                    var lt = u[0].flags;
                    (lt.dependsOn = 2), (lt.isNonSync = 0);
                  }
                } else if (
                  Ki &&
                  j - Y < W - V &&
                  k / W < 0.025 &&
                  0 === u[0].cts
                ) {
                  w.warn(
                    "Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration."
                  );
                  for (var ut = n, ht = 0, dt = u.length; ht < dt; ht++) {
                    var ct = ut + u[ht].duration,
                      ft = ut + u[ht].cts;
                    if (ht < dt - 1) {
                      var gt = ct + u[ht + 1].cts;
                      u[ht].duration = gt - ft;
                    } else u[ht].duration = ht ? u[ht - 1].duration : k;
                    (u[ht].cts = 0), (ut = ct);
                  }
                }
              (g = H || !g ? k : g),
                (this.nextAvcDts = c = a + g),
                (this.videoSampleDuration = g),
                (this.isVideoContiguous = !0);
              var vt = {
                data1: Ni.moof(t.sequenceNumber++, n, o({}, t, { samples: u })),
                data2: B,
                startPTS: v / s,
                endPTS: (m + g) / s,
                startDTS: n / s,
                endDTS: c / s,
                type: "video",
                hasAudio: !1,
                hasVideo: !0,
                nb: u.length,
                dropped: t.dropped,
              };
              return (t.samples = []), (t.dropped = 0), vt;
            }),
            (e.remuxAudio = function (t, e, r, i, n) {
              var a = t.inputTimeScale,
                s = a / (t.samplerate ? t.samplerate : a),
                l = "aac" === t.segmentCodec ? 1024 : 1152,
                u = l * s,
                h = this._initPTS,
                d = "mp3" === t.segmentCodec && this.typeSupported.mpeg,
                c = [],
                f = void 0 !== n,
                g = t.samples,
                v = d ? 0 : 8,
                m = this.nextAudioPts || -1,
                p = e * a,
                y = (h.baseTime * a) / h.timescale;
              if (
                ((this.isAudioContiguous = r =
                  r ||
                  (g.length &&
                    m > 0 &&
                    ((i && Math.abs(p - m) < 9e3) ||
                      Math.abs(Vi(g[0].pts - y, p) - m) < 20 * u))),
                g.forEach(function (t) {
                  t.pts = Vi(t.pts - y, p);
                }),
                !r || m < 0)
              ) {
                if (
                  ((g = g.filter(function (t) {
                    return t.pts >= 0;
                  })),
                  !g.length)
                )
                  return;
                m = 0 === n ? 0 : i && !f ? Math.max(0, p) : g[0].pts;
              }
              if ("aac" === t.segmentCodec)
                for (
                  var T = this.config.maxAudioFramesDrift, E = 0, A = m;
                  E < g.length;
                  E++
                ) {
                  var k = g[E],
                    b = k.pts,
                    D = b - A,
                    I = Math.abs((1e3 * D) / a);
                  if (D <= -T * u && f)
                    0 === E &&
                      (w.warn(
                        "Audio frame @ " +
                          (b / a).toFixed(3) +
                          "s overlaps nextAudioPts by " +
                          Math.round((1e3 * D) / a) +
                          " ms."
                      ),
                      (this.nextAudioPts = m = A = b));
                  else if (D >= T * u && I < 1e4 && f) {
                    var C = Math.round(D / u);
                    (A = b - C * u) < 0 && (C--, (A += u)),
                      0 === E && (this.nextAudioPts = m = A),
                      w.warn(
                        "[mp4-remuxer]: Injecting " +
                          C +
                          " audio frame @ " +
                          (A / a).toFixed(3) +
                          "s due to " +
                          Math.round((1e3 * D) / a) +
                          " ms gap."
                      );
                    for (var _ = 0; _ < C; _++) {
                      var P = Math.max(A, 0),
                        x = Mi.getSilentFrame(
                          t.manifestCodec || t.codec,
                          t.channelCount
                        );
                      x ||
                        (w.log(
                          "[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."
                        ),
                        (x = k.unit.subarray())),
                        g.splice(E, 0, { unit: x, pts: P }),
                        (A += u),
                        E++;
                    }
                  }
                  (k.pts = A), (A += u);
                }
              for (var F, M = null, O = null, N = 0, U = g.length; U--; )
                N += g[U].unit.byteLength;
              for (var B = 0, G = g.length; B < G; B++) {
                var K = g[B],
                  H = K.unit,
                  V = K.pts;
                if (null !== O) c[B - 1].duration = Math.round((V - O) / s);
                else {
                  if (
                    (r && "aac" === t.segmentCodec && (V = m),
                    (M = V),
                    !(N > 0))
                  )
                    return;
                  N += v;
                  try {
                    F = new Uint8Array(N);
                  } catch (t) {
                    return void this.observer.emit(S.ERROR, S.ERROR, {
                      type: L.MUX_ERROR,
                      details: R.REMUX_ALLOC_ERROR,
                      fatal: !1,
                      error: t,
                      bytes: N,
                      reason: "fail allocating audio mdat " + N,
                    });
                  }
                  d ||
                    (new DataView(F.buffer).setUint32(0, N),
                    F.set(Ni.types.mdat, 4));
                }
                F.set(H, v);
                var Y = H.byteLength;
                (v += Y), c.push(new qi(!0, l, Y, 0)), (O = V);
              }
              var W = c.length;
              if (W) {
                var j = c[c.length - 1];
                this.nextAudioPts = m = O + s * j.duration;
                var q = d
                  ? new Uint8Array(0)
                  : Ni.moof(
                      t.sequenceNumber++,
                      M / s,
                      o({}, t, { samples: c })
                    );
                t.samples = [];
                var X = M / a,
                  z = m / a,
                  Q = {
                    data1: q,
                    data2: F,
                    startPTS: X,
                    endPTS: z,
                    startDTS: X,
                    endDTS: z,
                    type: "audio",
                    hasAudio: !0,
                    hasVideo: !1,
                    nb: W,
                  };
                return (this.isAudioContiguous = !0), Q;
              }
            }),
            (e.remuxEmptyAudio = function (t, e, r, i) {
              var n = t.inputTimeScale,
                a = n / (t.samplerate ? t.samplerate : n),
                s = this.nextAudioPts,
                o = this._initDTS,
                l = (9e4 * o.baseTime) / o.timescale,
                u = (null !== s ? s : i.startDTS * n) + l,
                h = i.endDTS * n + l,
                d = 1024 * a,
                c = Math.ceil((h - u) / d),
                f = Mi.getSilentFrame(
                  t.manifestCodec || t.codec,
                  t.channelCount
                );
              if ((w.warn("[mp4-remuxer]: remux empty Audio"), f)) {
                for (var g = [], v = 0; v < c; v++) {
                  var m = u + v * d;
                  g.push({ unit: f, pts: m, dts: m });
                }
                return (t.samples = g), this.remuxAudio(t, e, r, !1);
              }
              w.trace(
                "[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec"
              );
            }),
            t
          );
        })();
      function Vi(t, e) {
        var r;
        if (null === e) return t;
        for (
          r = e < t ? -8589934592 : 8589934592;
          Math.abs(t - e) > 4294967296;

        )
          t += r;
        return t;
      }
      function Yi(t, e, r, i) {
        var n = t.samples.length;
        if (n) {
          for (var a = t.inputTimeScale, s = 0; s < n; s++) {
            var o = t.samples[s];
            (o.pts = Vi(o.pts - (r.baseTime * a) / r.timescale, e * a) / a),
              (o.dts = Vi(o.dts - (i.baseTime * a) / i.timescale, e * a) / a);
          }
          var l = t.samples;
          return (t.samples = []), { samples: l };
        }
      }
      function Wi(t, e, r) {
        var i = t.samples.length;
        if (i) {
          for (var n = t.inputTimeScale, a = 0; a < i; a++) {
            var s = t.samples[a];
            s.pts = Vi(s.pts - (r.baseTime * n) / r.timescale, e * n) / n;
          }
          t.samples.sort(function (t, e) {
            return t.pts - e.pts;
          });
          var o = t.samples;
          return (t.samples = []), { samples: o };
        }
      }
      var ji,
        qi = function (t, e, r, i) {
          (this.size = void 0),
            (this.duration = void 0),
            (this.cts = void 0),
            (this.flags = void 0),
            (this.duration = e),
            (this.size = r),
            (this.cts = i),
            (this.flags = new Xi(t));
        },
        Xi = function (t) {
          (this.isLeading = 0),
            (this.isDependedOn = 0),
            (this.hasRedundancy = 0),
            (this.degradPrio = 0),
            (this.dependsOn = 1),
            (this.isNonSync = 1),
            (this.dependsOn = t ? 2 : 1),
            (this.isNonSync = t ? 0 : 1);
        },
        zi = (function () {
          function t() {
            (this.emitInitSegment = !1),
              (this.audioCodec = void 0),
              (this.videoCodec = void 0),
              (this.initData = void 0),
              (this.initPTS = null),
              (this.initTracks = void 0),
              (this.lastEndTime = null);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {}),
            (e.resetTimeStamp = function (t) {
              (this.initPTS = t), (this.lastEndTime = null);
            }),
            (e.resetNextTimestamp = function () {
              this.lastEndTime = null;
            }),
            (e.resetInitSegment = function (t, e, r, i) {
              (this.audioCodec = e),
                (this.videoCodec = r),
                this.generateInitSegment(
                  (function (t, e) {
                    if (!t || !e) return t;
                    var r = e.keyId;
                    return (
                      r &&
                        e.isCommonEncryption &&
                        It(t, ["moov", "trak"]).forEach(function (t) {
                          var e = It(t, [
                              "mdia",
                              "minf",
                              "stbl",
                              "stsd",
                            ])[0].subarray(8),
                            i = It(e, ["enca"]),
                            n = i.length > 0;
                          n || (i = It(e, ["encv"])),
                            i.forEach(function (t) {
                              It(n ? t.subarray(28) : t.subarray(78), [
                                "sinf",
                              ]).forEach(function (t) {
                                var e = _t(t);
                                if (e) {
                                  var i = e.subarray(8, 24);
                                  i.some(function (t) {
                                    return 0 !== t;
                                  }) ||
                                    (w.log(
                                      "[eme] Patching keyId in 'enc" +
                                        (n ? "a" : "v") +
                                        ">sinf>>tenc' box: " +
                                        Tt(i) +
                                        " -> " +
                                        Tt(r)
                                    ),
                                    e.set(r, 8));
                                }
                              });
                            });
                        }),
                      t
                    );
                  })(t, i)
                ),
                (this.emitInitSegment = !0);
            }),
            (e.generateInitSegment = function (t) {
              var e = this.audioCodec,
                r = this.videoCodec;
              if (null == t || !t.byteLength)
                return (
                  (this.initTracks = void 0), void (this.initData = void 0)
                );
              var i = (this.initData = Ct(t));
              e || (e = Qi(i.audio, O)), r || (r = Qi(i.video, N));
              var n = {};
              i.audio && i.video
                ? (n.audiovideo = {
                    container: "video/mp4",
                    codec: e + "," + r,
                    initSegment: t,
                    id: "main",
                  })
                : i.audio
                ? (n.audio = {
                    container: "audio/mp4",
                    codec: e,
                    initSegment: t,
                    id: "audio",
                  })
                : i.video
                ? (n.video = {
                    container: "video/mp4",
                    codec: r,
                    initSegment: t,
                    id: "main",
                  })
                : w.warn(
                    "[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."
                  ),
                (this.initTracks = n);
            }),
            (e.remux = function (t, e, r, i, n, a) {
              var s,
                o,
                l = this.initPTS,
                u = this.lastEndTime,
                h = {
                  audio: void 0,
                  video: void 0,
                  text: i,
                  id3: r,
                  initSegment: void 0,
                };
              E(u) || (u = this.lastEndTime = n || 0);
              var d = e.samples;
              if (null == d || !d.length) return h;
              var c = { initPTS: void 0, timescale: 1 },
                f = this.initData;
              if (
                ((null != (s = f) && s.length) ||
                  (this.generateInitSegment(d), (f = this.initData)),
                null == (o = f) || !o.length)
              )
                return (
                  w.warn(
                    "[passthrough-remuxer.ts]: Failed to generate initSegment."
                  ),
                  h
                );
              this.emitInitSegment &&
                ((c.tracks = this.initTracks), (this.emitInitSegment = !1));
              var g = (function (t, e) {
                  for (
                    var r = 0, i = 0, n = 0, a = It(t, ["moof", "traf"]), s = 0;
                    s < a.length;
                    s++
                  ) {
                    var o = a[s],
                      l = It(o, ["tfhd"])[0],
                      u = e[kt(l, 4)];
                    if (u) {
                      var h = u.default,
                        d = kt(l, 0) | (null == h ? void 0 : h.flags),
                        c = null == h ? void 0 : h.duration;
                      8 & d && (c = kt(l, 2 & d ? 12 : 8));
                      for (
                        var f = u.timescale || 9e4, g = It(o, ["trun"]), v = 0;
                        v < g.length;
                        v++
                      )
                        !(r = Pt(g[v])) && c && (r = c * kt(g[v], 4)),
                          u.type === N
                            ? (i += r / f)
                            : u.type === O && (n += r / f);
                    }
                  }
                  if (0 === i && 0 === n) {
                    for (
                      var m = 0, p = It(t, ["sidx"]), y = 0;
                      y < p.length;
                      y++
                    ) {
                      var T = wt(p[y]);
                      null != T &&
                        T.references &&
                        (m += T.references.reduce(function (t, e) {
                          return t + e.info.duration || 0;
                        }, 0));
                    }
                    return m;
                  }
                  return i || n;
                })(d, f),
                v = (function (t, e) {
                  return It(e, ["moof", "traf"]).reduce(function (e, r) {
                    var i = It(r, ["tfdt"])[0],
                      n = i[0],
                      a = It(r, ["tfhd"]).reduce(function (e, r) {
                        var a = kt(r, 4),
                          s = t[a];
                        if (s) {
                          var o = kt(i, 4);
                          if (1 === n) {
                            if (o === Et)
                              return (
                                w.warn(
                                  "[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time"
                                ),
                                e
                              );
                            (o *= Et + 1), (o += kt(i, 8));
                          }
                          var l = o / (s.timescale || 9e4);
                          if (isFinite(l) && (null === e || l < e)) return l;
                        }
                        return e;
                      }, null);
                    return null !== a && isFinite(a) && (null === e || a < e)
                      ? a
                      : e;
                  }, null);
                })(f, d),
                m = null === v ? n : v;
              ((function (t, e, r, i) {
                if (null === t) return !0;
                var n = Math.max(i, 1),
                  a = e - t.baseTime / t.timescale;
                return Math.abs(a - r) > n;
              })(l, m, n, g) ||
                (c.timescale !== l.timescale && a)) &&
                ((c.initPTS = m - n),
                l &&
                  1 === l.timescale &&
                  w.warn("Adjusting initPTS by " + (c.initPTS - l.baseTime)),
                (this.initPTS = l = { baseTime: c.initPTS, timescale: 1 }));
              var p = t ? m - l.baseTime / l.timescale : u,
                y = p + g;
              !(function (t, e, r) {
                It(e, ["moof", "traf"]).forEach(function (e) {
                  It(e, ["tfhd"]).forEach(function (i) {
                    var n = kt(i, 4),
                      a = t[n];
                    if (a) {
                      var s = a.timescale || 9e4;
                      It(e, ["tfdt"]).forEach(function (t) {
                        var e = t[0],
                          i = kt(t, 4);
                        if (0 === e)
                          (i -= r * s), Dt(t, 4, (i = Math.max(i, 0)));
                        else {
                          (i *= Math.pow(2, 32)),
                            (i += kt(t, 8)),
                            (i -= r * s),
                            (i = Math.max(i, 0));
                          var n = Math.floor(i / (Et + 1)),
                            a = Math.floor(i % (Et + 1));
                          Dt(t, 4, n), Dt(t, 8, a);
                        }
                      });
                    }
                  });
                });
              })(f, d, l.baseTime / l.timescale),
                g > 0
                  ? (this.lastEndTime = y)
                  : (w.warn(
                      "Duration parsed from mp4 should be greater than zero"
                    ),
                    this.resetNextTimestamp());
              var T = !!f.audio,
                S = !!f.video,
                L = "";
              T && (L += "audio"), S && (L += "video");
              var R = {
                data1: d,
                startPTS: p,
                startDTS: p,
                endPTS: y,
                endDTS: y,
                type: L,
                hasAudio: T,
                hasVideo: S,
                nb: 1,
                dropped: 0,
              };
              return (
                (h.audio = "audio" === R.type ? R : void 0),
                (h.video = "audio" !== R.type ? R : void 0),
                (h.initSegment = c),
                (h.id3 = Yi(r, n, l, l)),
                i.samples.length && (h.text = Wi(i, n, l)),
                h
              );
            }),
            t
          );
        })();
      function Qi(t, e) {
        var r = null == t ? void 0 : t.codec;
        return r && r.length > 4
          ? r
          : "hvc1" === r || "hev1" === r
          ? "hvc1.1.6.L120.90"
          : "av01" === r
          ? "av01.0.04M.08"
          : "avc1" === r || e === N
          ? "avc1.42e01e"
          : "mp4a.40.5";
      }
      try {
        ji = self.performance.now.bind(self.performance);
      } catch (t) {
        w.debug("Unable to use Performance API on this environment"),
          (ji = "undefined" != typeof self && self.Date.now);
      }
      var $i = [
          { demux: fi, remux: zi },
          { demux: Di, remux: Hi },
          { demux: di, remux: Hi },
          { demux: Fi, remux: Hi },
        ],
        Ji = (function () {
          function t(t, e, r, i, n) {
            (this.async = !1),
              (this.observer = void 0),
              (this.typeSupported = void 0),
              (this.config = void 0),
              (this.vendor = void 0),
              (this.id = void 0),
              (this.demuxer = void 0),
              (this.remuxer = void 0),
              (this.decrypter = void 0),
              (this.probe = void 0),
              (this.decryptionPromise = null),
              (this.transmuxConfig = void 0),
              (this.currentTransmuxState = void 0),
              (this.observer = t),
              (this.typeSupported = e),
              (this.config = r),
              (this.vendor = i),
              (this.id = n);
          }
          var e = t.prototype;
          return (
            (e.configure = function (t) {
              (this.transmuxConfig = t),
                this.decrypter && this.decrypter.reset();
            }),
            (e.push = function (t, e, r, i) {
              var n = this,
                a = r.transmuxing;
              a.executeStart = ji();
              var s = new Uint8Array(t),
                o = this.currentTransmuxState,
                l = this.transmuxConfig;
              i && (this.currentTransmuxState = i);
              var u = i || o,
                h = u.contiguous,
                d = u.discontinuity,
                c = u.trackSwitch,
                f = u.accurateTimeOffset,
                g = u.timeOffset,
                v = u.initSegmentChange,
                m = l.audioCodec,
                p = l.videoCodec,
                y = l.defaultInitPts,
                T = l.duration,
                E = l.initSegmentData,
                A = (function (t, e) {
                  var r = null;
                  return (
                    t.byteLength > 0 &&
                      null != e &&
                      null != e.key &&
                      null !== e.iv &&
                      null != e.method &&
                      (r = e),
                    r
                  );
                })(s, e);
              if (A && "AES-128" === A.method) {
                var k = this.getDecrypter();
                if (!k.isSync())
                  return (
                    (this.decryptionPromise = k
                      .webCryptoDecrypt(s, A.key.buffer, A.iv.buffer)
                      .then(function (t) {
                        var e = n.push(t, null, r);
                        return (n.decryptionPromise = null), e;
                      })),
                    this.decryptionPromise
                  );
                var b = k.softwareDecrypt(s, A.key.buffer, A.iv.buffer);
                if ((r.part > -1 && (b = k.flush()), !b))
                  return (a.executeEnd = ji()), Zi(r);
                s = new Uint8Array(b);
              }
              var D = this.needsProbing(d, c);
              if (D) {
                var I = this.configureTransmuxer(s);
                if (I)
                  return (
                    w.warn("[transmuxer] " + I.message),
                    this.observer.emit(S.ERROR, S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: R.FRAG_PARSING_ERROR,
                      fatal: !1,
                      error: I,
                      reason: I.message,
                    }),
                    (a.executeEnd = ji()),
                    Zi(r)
                  );
              }
              (d || c || v || D) && this.resetInitSegment(E, m, p, T, e),
                (d || v || D) && this.resetInitialTimestamp(y),
                h || this.resetContiguity();
              var C = this.transmux(s, A, g, f, r),
                _ = this.currentTransmuxState;
              return (
                (_.contiguous = !0),
                (_.discontinuity = !1),
                (_.trackSwitch = !1),
                (a.executeEnd = ji()),
                C
              );
            }),
            (e.flush = function (t) {
              var e = this,
                r = t.transmuxing;
              r.executeStart = ji();
              var i = this.decrypter,
                n = this.currentTransmuxState,
                a = this.decryptionPromise;
              if (a)
                return a.then(function () {
                  return e.flush(t);
                });
              var s = [],
                o = n.timeOffset;
              if (i) {
                var l = i.flush();
                l && s.push(this.push(l, null, t));
              }
              var u = this.demuxer,
                h = this.remuxer;
              if (!u || !h) return (r.executeEnd = ji()), [Zi(t)];
              var d = u.flush(o);
              return tn(d)
                ? d.then(function (r) {
                    return e.flushRemux(s, r, t), s;
                  })
                : (this.flushRemux(s, d, t), s);
            }),
            (e.flushRemux = function (t, e, r) {
              var i = e.audioTrack,
                n = e.videoTrack,
                a = e.id3Track,
                s = e.textTrack,
                o = this.currentTransmuxState,
                l = o.accurateTimeOffset,
                u = o.timeOffset;
              w.log(
                "[transmuxer.ts]: Flushed fragment " +
                  r.sn +
                  (r.part > -1 ? " p: " + r.part : "") +
                  " of level " +
                  r.level
              );
              var h = this.remuxer.remux(i, n, a, s, u, l, !0, this.id);
              t.push({ remuxResult: h, chunkMeta: r }),
                (r.transmuxing.executeEnd = ji());
            }),
            (e.resetInitialTimestamp = function (t) {
              var e = this.demuxer,
                r = this.remuxer;
              e && r && (e.resetTimeStamp(t), r.resetTimeStamp(t));
            }),
            (e.resetContiguity = function () {
              var t = this.demuxer,
                e = this.remuxer;
              t && e && (t.resetContiguity(), e.resetNextTimestamp());
            }),
            (e.resetInitSegment = function (t, e, r, i, n) {
              var a = this.demuxer,
                s = this.remuxer;
              a &&
                s &&
                (a.resetInitSegment(t, e, r, i),
                s.resetInitSegment(t, e, r, n));
            }),
            (e.destroy = function () {
              this.demuxer && (this.demuxer.destroy(), (this.demuxer = void 0)),
                this.remuxer &&
                  (this.remuxer.destroy(), (this.remuxer = void 0));
            }),
            (e.transmux = function (t, e, r, i, n) {
              return e && "SAMPLE-AES" === e.method
                ? this.transmuxSampleAes(t, e, r, i, n)
                : this.transmuxUnencrypted(t, r, i, n);
            }),
            (e.transmuxUnencrypted = function (t, e, r, i) {
              var n = this.demuxer.demux(t, e, !1, !this.config.progressive),
                a = n.audioTrack,
                s = n.videoTrack,
                o = n.id3Track,
                l = n.textTrack;
              return {
                remuxResult: this.remuxer.remux(a, s, o, l, e, r, !1, this.id),
                chunkMeta: i,
              };
            }),
            (e.transmuxSampleAes = function (t, e, r, i, n) {
              var a = this;
              return this.demuxer.demuxSampleAes(t, e, r).then(function (t) {
                return {
                  remuxResult: a.remuxer.remux(
                    t.audioTrack,
                    t.videoTrack,
                    t.id3Track,
                    t.textTrack,
                    r,
                    i,
                    !1,
                    a.id
                  ),
                  chunkMeta: n,
                };
              });
            }),
            (e.configureTransmuxer = function (t) {
              for (
                var e,
                  r = this.config,
                  i = this.observer,
                  n = this.typeSupported,
                  a = this.vendor,
                  s = 0,
                  o = $i.length;
                s < o;
                s++
              )
                if ($i[s].demux.probe(t)) {
                  e = $i[s];
                  break;
                }
              if (!e)
                return new Error(
                  "Failed to find demuxer by probing fragment data"
                );
              var l = this.demuxer,
                u = this.remuxer,
                h = e.remux,
                d = e.demux;
              (u && u instanceof h) || (this.remuxer = new h(i, r, n, a)),
                (l && l instanceof d) ||
                  ((this.demuxer = new d(i, r, n)), (this.probe = d.probe));
            }),
            (e.needsProbing = function (t, e) {
              return !this.demuxer || !this.remuxer || t || e;
            }),
            (e.getDecrypter = function () {
              var t = this.decrypter;
              return t || (t = this.decrypter = new Ur(this.config)), t;
            }),
            t
          );
        })(),
        Zi = function (t) {
          return { remuxResult: {}, chunkMeta: t };
        };
      function tn(t) {
        return "then" in t && t.then instanceof Function;
      }
      var en = function (t, e, r, i, n) {
          (this.audioCodec = void 0),
            (this.videoCodec = void 0),
            (this.initSegmentData = void 0),
            (this.duration = void 0),
            (this.defaultInitPts = void 0),
            (this.audioCodec = t),
            (this.videoCodec = e),
            (this.initSegmentData = r),
            (this.duration = i),
            (this.defaultInitPts = n || null);
        },
        rn = function (t, e, r, i, n, a) {
          (this.discontinuity = void 0),
            (this.contiguous = void 0),
            (this.accurateTimeOffset = void 0),
            (this.trackSwitch = void 0),
            (this.timeOffset = void 0),
            (this.initSegmentChange = void 0),
            (this.discontinuity = t),
            (this.contiguous = e),
            (this.accurateTimeOffset = r),
            (this.trackSwitch = i),
            (this.timeOffset = n),
            (this.initSegmentChange = a);
        },
        nn = { exports: {} };
      !(function (t) {
        var e = Object.prototype.hasOwnProperty,
          r = "~";
        function i() {}
        function n(t, e, r) {
          (this.fn = t), (this.context = e), (this.once = r || !1);
        }
        function a(t, e, i, a, s) {
          if ("function" != typeof i)
            throw new TypeError("The listener must be a function");
          var o = new n(i, a || t, s),
            l = r ? r + e : e;
          return (
            t._events[l]
              ? t._events[l].fn
                ? (t._events[l] = [t._events[l], o])
                : t._events[l].push(o)
              : ((t._events[l] = o), t._eventsCount++),
            t
          );
        }
        function s(t, e) {
          0 == --t._eventsCount ? (t._events = new i()) : delete t._events[e];
        }
        function o() {
          (this._events = new i()), (this._eventsCount = 0);
        }
        Object.create &&
          ((i.prototype = Object.create(null)), new i().__proto__ || (r = !1)),
          (o.prototype.eventNames = function () {
            var t,
              i,
              n = [];
            if (0 === this._eventsCount) return n;
            for (i in (t = this._events))
              e.call(t, i) && n.push(r ? i.slice(1) : i);
            return Object.getOwnPropertySymbols
              ? n.concat(Object.getOwnPropertySymbols(t))
              : n;
          }),
          (o.prototype.listeners = function (t) {
            var e = r ? r + t : t,
              i = this._events[e];
            if (!i) return [];
            if (i.fn) return [i.fn];
            for (var n = 0, a = i.length, s = new Array(a); n < a; n++)
              s[n] = i[n].fn;
            return s;
          }),
          (o.prototype.listenerCount = function (t) {
            var e = r ? r + t : t,
              i = this._events[e];
            return i ? (i.fn ? 1 : i.length) : 0;
          }),
          (o.prototype.emit = function (t, e, i, n, a, s) {
            var o = r ? r + t : t;
            if (!this._events[o]) return !1;
            var l,
              u,
              h = this._events[o],
              d = arguments.length;
            if (h.fn) {
              switch ((h.once && this.removeListener(t, h.fn, void 0, !0), d)) {
                case 1:
                  return h.fn.call(h.context), !0;
                case 2:
                  return h.fn.call(h.context, e), !0;
                case 3:
                  return h.fn.call(h.context, e, i), !0;
                case 4:
                  return h.fn.call(h.context, e, i, n), !0;
                case 5:
                  return h.fn.call(h.context, e, i, n, a), !0;
                case 6:
                  return h.fn.call(h.context, e, i, n, a, s), !0;
              }
              for (u = 1, l = new Array(d - 1); u < d; u++)
                l[u - 1] = arguments[u];
              h.fn.apply(h.context, l);
            } else {
              var c,
                f = h.length;
              for (u = 0; u < f; u++)
                switch (
                  (h[u].once && this.removeListener(t, h[u].fn, void 0, !0), d)
                ) {
                  case 1:
                    h[u].fn.call(h[u].context);
                    break;
                  case 2:
                    h[u].fn.call(h[u].context, e);
                    break;
                  case 3:
                    h[u].fn.call(h[u].context, e, i);
                    break;
                  case 4:
                    h[u].fn.call(h[u].context, e, i, n);
                    break;
                  default:
                    if (!l)
                      for (c = 1, l = new Array(d - 1); c < d; c++)
                        l[c - 1] = arguments[c];
                    h[u].fn.apply(h[u].context, l);
                }
            }
            return !0;
          }),
          (o.prototype.on = function (t, e, r) {
            return a(this, t, e, r, !1);
          }),
          (o.prototype.once = function (t, e, r) {
            return a(this, t, e, r, !0);
          }),
          (o.prototype.removeListener = function (t, e, i, n) {
            var a = r ? r + t : t;
            if (!this._events[a]) return this;
            if (!e) return s(this, a), this;
            var o = this._events[a];
            if (o.fn)
              o.fn !== e ||
                (n && !o.once) ||
                (i && o.context !== i) ||
                s(this, a);
            else {
              for (var l = 0, u = [], h = o.length; l < h; l++)
                (o[l].fn !== e ||
                  (n && !o[l].once) ||
                  (i && o[l].context !== i)) &&
                  u.push(o[l]);
              u.length
                ? (this._events[a] = 1 === u.length ? u[0] : u)
                : s(this, a);
            }
            return this;
          }),
          (o.prototype.removeAllListeners = function (t) {
            var e;
            return (
              t
                ? ((e = r ? r + t : t), this._events[e] && s(this, e))
                : ((this._events = new i()), (this._eventsCount = 0)),
              this
            );
          }),
          (o.prototype.off = o.prototype.removeListener),
          (o.prototype.addListener = o.prototype.on),
          (o.prefixed = r),
          (o.EventEmitter = o),
          (t.exports = o);
      })(nn);
      var an = p(nn.exports);
      function sn(t, e) {
        if (
          !(
            (r = e.remuxResult).audio ||
            r.video ||
            r.text ||
            r.id3 ||
            r.initSegment
          )
        )
          return !1;
        var r,
          i = [],
          n = e.remuxResult,
          a = n.audio,
          s = n.video;
        return (
          a && on(i, a),
          s && on(i, s),
          t.postMessage({ event: "transmuxComplete", data: e }, i),
          !0
        );
      }
      function on(t, e) {
        e.data1 && t.push(e.data1.buffer), e.data2 && t.push(e.data2.buffer);
      }
      function ln(t, e, r) {
        e.reduce(function (e, r) {
          return sn(t, r) || e;
        }, !1) || t.postMessage({ event: "transmuxComplete", data: e[0] }),
          t.postMessage({ event: "flush", data: r });
      }
      void 0 !== e &&
        e &&
        (function (t) {
          var e = new an(),
            r = function (e, r) {
              t.postMessage({ event: e, data: r });
            };
          e.on(S.FRAG_DECRYPTED, r), e.on(S.ERROR, r);
          var i = function () {
            var t = function (t) {
              var e = function (e) {
                r("workerLog", { logType: t, message: e });
              };
              w[t] = e;
            };
            for (var e in w) t(e);
          };
          t.addEventListener("message", function (n) {
            var a = n.data;
            switch (a.cmd) {
              case "init":
                var s = JSON.parse(a.config);
                (t.transmuxer = new Ji(e, a.typeSupported, s, a.vendor, a.id)),
                  I(s.debug, a.id),
                  i(),
                  r("init", null);
                break;
              case "configure":
                t.transmuxer.configure(a.config);
                break;
              case "demux":
                var o = t.transmuxer.push(
                  a.data,
                  a.decryptdata,
                  a.chunkMeta,
                  a.state
                );
                tn(o)
                  ? ((t.transmuxer.async = !0),
                    o
                      .then(function (e) {
                        sn(t, e);
                      })
                      .catch(function (t) {
                        r(S.ERROR, {
                          type: L.MEDIA_ERROR,
                          details: R.FRAG_PARSING_ERROR,
                          chunkMeta: a.chunkMeta,
                          fatal: !1,
                          error: t,
                          err: t,
                          reason: "transmuxer-worker push error",
                        });
                      }))
                  : ((t.transmuxer.async = !1), sn(t, o));
                break;
              case "flush":
                var l = a.chunkMeta,
                  u = t.transmuxer.flush(l);
                tn(u) || t.transmuxer.async
                  ? (tn(u) || (u = Promise.resolve(u)),
                    u
                      .then(function (e) {
                        ln(t, e, l);
                      })
                      .catch(function (t) {
                        r(S.ERROR, {
                          type: L.MEDIA_ERROR,
                          details: R.FRAG_PARSING_ERROR,
                          chunkMeta: a.chunkMeta,
                          fatal: !1,
                          error: t,
                          err: t,
                          reason: "transmuxer-worker flush error",
                        });
                      }))
                  : ln(t, u, l);
            }
          });
        })(self);
      var un = qt() || {
          isTypeSupported: function () {
            return !1;
          },
        },
        hn = (function () {
          function e(e, r, i, n) {
            var a = this;
            (this.error = null),
              (this.hls = void 0),
              (this.id = void 0),
              (this.observer = void 0),
              (this.frag = null),
              (this.part = null),
              (this.useWorker = void 0),
              (this.workerContext = null),
              (this.onwmsg = void 0),
              (this.transmuxer = null),
              (this.onTransmuxComplete = void 0),
              (this.onFlush = void 0);
            var s = e.config;
            (this.hls = e),
              (this.id = r),
              (this.useWorker = !!s.enableWorker),
              (this.onTransmuxComplete = i),
              (this.onFlush = n);
            var o = function (t, e) {
              ((e = e || {}).frag = a.frag),
                (e.id = a.id),
                t === S.ERROR && (a.error = e.error),
                a.hls.trigger(t, e);
            };
            (this.observer = new an()),
              this.observer.on(S.FRAG_DECRYPTED, o),
              this.observer.on(S.ERROR, o);
            var l,
              u,
              h,
              d,
              c = {
                mp4: un.isTypeSupported("video/mp4"),
                mpeg: un.isTypeSupported("audio/mpeg"),
                mp3: un.isTypeSupported('audio/mp4; codecs="mp3"'),
              },
              f = navigator.vendor;
            if (
              !this.useWorker ||
              "undefined" == typeof Worker ||
              (s.workerPath, 0)
            )
              this.transmuxer = new Ji(this.observer, c, s, f, r);
            else
              try {
                s.workerPath
                  ? (w.log(
                      "loading Web Worker " + s.workerPath + ' for "' + r + '"'
                    ),
                    (this.workerContext =
                      ((h = s.workerPath),
                      (d = new self.URL(h, self.location.href).href),
                      { worker: new self.Worker(d), scriptURL: d })))
                  : (w.log('injecting Web Worker for "' + r + '"'),
                    (this.workerContext =
                      ((l = new self.Blob(
                        [
                          "var exports={};var module={exports:exports};function define(f){f()};define.amd=true;(" +
                            t.toString() +
                            ")(true);",
                        ],
                        { type: "text/javascript" }
                      )),
                      (u = self.URL.createObjectURL(l)),
                      { worker: new self.Worker(u), objectURL: u }))),
                  (this.onwmsg = function (t) {
                    return a.onWorkerMessage(t);
                  });
                var g = this.workerContext.worker;
                g.addEventListener("message", this.onwmsg),
                  (g.onerror = function (t) {
                    var e = new Error(
                      t.message + "  (" + t.filename + ":" + t.lineno + ")"
                    );
                    (s.enableWorker = !1),
                      w.warn(
                        'Error in "' + r + '" Web Worker, fallback to inline'
                      ),
                      a.hls.trigger(S.ERROR, {
                        type: L.OTHER_ERROR,
                        details: R.INTERNAL_EXCEPTION,
                        fatal: !1,
                        event: "demuxerWorker",
                        error: e,
                      });
                  }),
                  g.postMessage({
                    cmd: "init",
                    typeSupported: c,
                    vendor: f,
                    id: r,
                    config: JSON.stringify(s),
                  });
              } catch (t) {
                w.warn(
                  'Error setting up "' + r + '" Web Worker, fallback to inline',
                  t
                ),
                  this.resetWorker(),
                  (this.error = null),
                  (this.transmuxer = new Ji(this.observer, c, s, f, r));
              }
          }
          var r = e.prototype;
          return (
            (r.resetWorker = function () {
              if (this.workerContext) {
                var t = this.workerContext,
                  e = t.worker,
                  r = t.objectURL;
                r && self.URL.revokeObjectURL(r),
                  e.removeEventListener("message", this.onwmsg),
                  (e.onerror = null),
                  e.terminate(),
                  (this.workerContext = null);
              }
            }),
            (r.destroy = function () {
              if (this.workerContext)
                this.resetWorker(), (this.onwmsg = void 0);
              else {
                var t = this.transmuxer;
                t && (t.destroy(), (this.transmuxer = null));
              }
              var e = this.observer;
              e && e.removeAllListeners(),
                (this.frag = null),
                (this.observer = null),
                (this.hls = null);
            }),
            (r.push = function (t, e, r, i, n, a, s, o, l, u) {
              var h,
                d,
                c = this;
              l.transmuxing.start = self.performance.now();
              var f = this.transmuxer,
                g = a ? a.start : n.start,
                v = n.decryptdata,
                m = this.frag,
                p = !(m && n.cc === m.cc),
                y = !(m && l.level === m.level),
                T = m ? l.sn - m.sn : -1,
                E = this.part ? l.part - this.part.index : -1,
                S =
                  0 === T &&
                  l.id > 1 &&
                  l.id === (null == m ? void 0 : m.stats.chunkCount),
                L = !y && (1 === T || (0 === T && (1 === E || (S && E <= 0)))),
                R = self.performance.now();
              (y || T || 0 === n.stats.parsing.start) &&
                (n.stats.parsing.start = R),
                !a || (!E && L) || (a.stats.parsing.start = R);
              var A = !(
                  m &&
                  (null == (h = n.initSegment) ? void 0 : h.url) ===
                    (null == (d = m.initSegment) ? void 0 : d.url)
                ),
                k = new rn(p, L, o, y, g, A);
              if (!L || p || A) {
                w.log(
                  "[transmuxer-interface, " +
                    n.type +
                    "]: Starting new transmux session for sn: " +
                    l.sn +
                    " p: " +
                    l.part +
                    " level: " +
                    l.level +
                    " id: " +
                    l.id +
                    "\n        discontinuity: " +
                    p +
                    "\n        trackSwitch: " +
                    y +
                    "\n        contiguous: " +
                    L +
                    "\n        accurateTimeOffset: " +
                    o +
                    "\n        timeOffset: " +
                    g +
                    "\n        initSegmentChange: " +
                    A
                );
                var b = new en(r, i, e, s, u);
                this.configureTransmuxer(b);
              }
              if (((this.frag = n), (this.part = a), this.workerContext))
                this.workerContext.worker.postMessage(
                  {
                    cmd: "demux",
                    data: t,
                    decryptdata: v,
                    chunkMeta: l,
                    state: k,
                  },
                  t instanceof ArrayBuffer ? [t] : []
                );
              else if (f) {
                var D = f.push(t, v, l, k);
                tn(D)
                  ? ((f.async = !0),
                    D.then(function (t) {
                      c.handleTransmuxComplete(t);
                    }).catch(function (t) {
                      c.transmuxerError(
                        t,
                        l,
                        "transmuxer-interface push error"
                      );
                    }))
                  : ((f.async = !1), this.handleTransmuxComplete(D));
              }
            }),
            (r.flush = function (t) {
              var e = this;
              t.transmuxing.start = self.performance.now();
              var r = this.transmuxer;
              if (this.workerContext)
                this.workerContext.worker.postMessage({
                  cmd: "flush",
                  chunkMeta: t,
                });
              else if (r) {
                var i = r.flush(t);
                tn(i) || r.async
                  ? (tn(i) || (i = Promise.resolve(i)),
                    i
                      .then(function (r) {
                        e.handleFlushResult(r, t);
                      })
                      .catch(function (r) {
                        e.transmuxerError(
                          r,
                          t,
                          "transmuxer-interface flush error"
                        );
                      }))
                  : this.handleFlushResult(i, t);
              }
            }),
            (r.transmuxerError = function (t, e, r) {
              this.hls &&
                ((this.error = t),
                this.hls.trigger(S.ERROR, {
                  type: L.MEDIA_ERROR,
                  details: R.FRAG_PARSING_ERROR,
                  chunkMeta: e,
                  fatal: !1,
                  error: t,
                  err: t,
                  reason: r,
                }));
            }),
            (r.handleFlushResult = function (t, e) {
              var r = this;
              t.forEach(function (t) {
                r.handleTransmuxComplete(t);
              }),
                this.onFlush(e);
            }),
            (r.onWorkerMessage = function (t) {
              var e = t.data,
                r = this.hls;
              switch (e.event) {
                case "init":
                  var i,
                    n = null == (i = this.workerContext) ? void 0 : i.objectURL;
                  n && self.URL.revokeObjectURL(n);
                  break;
                case "transmuxComplete":
                  this.handleTransmuxComplete(e.data);
                  break;
                case "flush":
                  this.onFlush(e.data);
                  break;
                case "workerLog":
                  w[e.data.logType] && w[e.data.logType](e.data.message);
                  break;
                default:
                  (e.data = e.data || {}),
                    (e.data.frag = this.frag),
                    (e.data.id = this.id),
                    r.trigger(e.event, e.data);
              }
            }),
            (r.configureTransmuxer = function (t) {
              var e = this.transmuxer;
              this.workerContext
                ? this.workerContext.worker.postMessage({
                    cmd: "configure",
                    config: t,
                  })
                : e && e.configure(t);
            }),
            (r.handleTransmuxComplete = function (t) {
              (t.chunkMeta.transmuxing.end = self.performance.now()),
                this.onTransmuxComplete(t);
            }),
            e
          );
        })(),
        dn = (function () {
          function t(t, e, r, i) {
            (this.config = void 0),
              (this.media = null),
              (this.fragmentTracker = void 0),
              (this.hls = void 0),
              (this.nudgeRetry = 0),
              (this.stallReported = !1),
              (this.stalled = null),
              (this.moved = !1),
              (this.seeking = !1),
              (this.config = t),
              (this.media = e),
              (this.fragmentTracker = r),
              (this.hls = i);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.media = null), (this.hls = this.fragmentTracker = null);
            }),
            (e.poll = function (t, e) {
              var r = this.config,
                i = this.media,
                n = this.stalled;
              if (null !== i) {
                var a = i.currentTime,
                  s = i.seeking,
                  o = this.seeking && !s,
                  l = !this.seeking && s;
                if (((this.seeking = s), a === t)) {
                  if (l || o) this.stalled = null;
                  else if (
                    !((i.paused && !s) || i.ended || 0 === i.playbackRate) &&
                    Ir.getBuffered(i).length
                  ) {
                    var u = Ir.bufferInfo(i, a, 0),
                      h = u.len > 0,
                      d = u.nextStart || 0;
                    if (h || d) {
                      if (s) {
                        var c = u.len > 2,
                          f =
                            !d ||
                            (e && e.start <= a) ||
                            (d - a > 2 &&
                              !this.fragmentTracker.getPartialFragment(a));
                        if (c || f) return;
                        this.moved = !1;
                      }
                      if (!this.moved && null !== this.stalled) {
                        var g,
                          v = Math.max(d, u.start || 0) - a,
                          m = this.hls.levels
                            ? this.hls.levels[this.hls.currentLevel]
                            : null,
                          p = (
                            null == m || null == (g = m.details)
                              ? void 0
                              : g.live
                          )
                            ? 2 * m.details.targetduration
                            : 2,
                          y = this.fragmentTracker.getPartialFragment(a);
                        if (v > 0 && (v <= p || y))
                          return void this._trySkipBufferHole(y);
                      }
                      var T = self.performance.now();
                      if (null !== n) {
                        var E = T - n;
                        if (
                          s ||
                          !(E >= 250) ||
                          (this._reportStall(u), this.media)
                        ) {
                          var S = Ir.bufferInfo(i, a, r.maxBufferHole);
                          this._tryFixBufferStall(S, E);
                        }
                      } else this.stalled = T;
                    }
                  }
                } else if (((this.moved = !0), null !== n)) {
                  if (this.stallReported) {
                    var L = self.performance.now() - n;
                    w.warn(
                      "playback not stuck anymore @" +
                        a +
                        ", after " +
                        Math.round(L) +
                        "ms"
                    ),
                      (this.stallReported = !1);
                  }
                  (this.stalled = null), (this.nudgeRetry = 0);
                }
              }
            }),
            (e._tryFixBufferStall = function (t, e) {
              var r = this.config,
                i = this.fragmentTracker,
                n = this.media;
              if (null !== n) {
                var a = n.currentTime,
                  s = i.getPartialFragment(a);
                if (s && (this._trySkipBufferHole(s) || !this.media)) return;
                (t.len > r.maxBufferHole ||
                  (t.nextStart && t.nextStart - a < r.maxBufferHole)) &&
                  e > 1e3 * r.highBufferWatchdogPeriod &&
                  (w.warn("Trying to nudge playhead over buffer-hole"),
                  (this.stalled = null),
                  this._tryNudgeBuffer());
              }
            }),
            (e._reportStall = function (t) {
              var e = this.hls,
                r = this.media;
              if (!this.stallReported && r) {
                this.stallReported = !0;
                var i = new Error(
                  "Playback stalling at @" +
                    r.currentTime +
                    " due to low buffer (" +
                    JSON.stringify(t) +
                    ")"
                );
                w.warn(i.message),
                  e.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: R.BUFFER_STALLED_ERROR,
                    fatal: !1,
                    error: i,
                    buffer: t.len,
                  });
              }
            }),
            (e._trySkipBufferHole = function (t) {
              var e = this.config,
                r = this.hls,
                i = this.media;
              if (null === i) return 0;
              var n = i.currentTime,
                a = Ir.bufferInfo(i, n, 0),
                s = n < a.start ? a.start : a.nextStart;
              if (s) {
                var o = a.len <= e.maxBufferHole,
                  l = a.len > 0 && a.len < 1 && i.readyState < 3,
                  u = s - n;
                if (u > 0 && (o || l)) {
                  if (u > e.maxBufferHole) {
                    var h = this.fragmentTracker,
                      d = !1;
                    if (0 === n) {
                      var c = h.getAppendedFrag(0, ge);
                      c && s < c.end && (d = !0);
                    }
                    if (!d) {
                      var f = t || h.getAppendedFrag(n, ge);
                      if (f) {
                        for (var g = !1, v = f.end; v < s; ) {
                          var m = h.getPartialFragment(v);
                          if (!m) {
                            g = !0;
                            break;
                          }
                          v += m.duration;
                        }
                        if (g) return 0;
                      }
                    }
                  }
                  var p = Math.max(s + 0.05, n + 0.1);
                  if (
                    (w.warn(
                      "skipping hole, adjusting currentTime from " +
                        n +
                        " to " +
                        p
                    ),
                    (this.moved = !0),
                    (this.stalled = null),
                    (i.currentTime = p),
                    t && !t.gap)
                  ) {
                    var y = new Error(
                      "fragment loaded with buffer holes, seeking from " +
                        n +
                        " to " +
                        p
                    );
                    r.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: R.BUFFER_SEEK_OVER_HOLE,
                      fatal: !1,
                      error: y,
                      reason: y.message,
                      frag: t,
                    });
                  }
                  return p;
                }
              }
              return 0;
            }),
            (e._tryNudgeBuffer = function () {
              var t = this.config,
                e = this.hls,
                r = this.media,
                i = this.nudgeRetry;
              if (null !== r) {
                var n = r.currentTime;
                if ((this.nudgeRetry++, i < t.nudgeMaxRetry)) {
                  var a = n + (i + 1) * t.nudgeOffset,
                    s = new Error(
                      "Nudging 'currentTime' from " + n + " to " + a
                    );
                  w.warn(s.message),
                    (r.currentTime = a),
                    e.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: R.BUFFER_NUDGE_ON_STALL,
                      error: s,
                      fatal: !1,
                    });
                } else {
                  var o = new Error(
                    "Playhead still not moving while enough data buffered @" +
                      n +
                      " after " +
                      t.nudgeMaxRetry +
                      " nudges"
                  );
                  w.error(o.message),
                    e.trigger(S.ERROR, {
                      type: L.MEDIA_ERROR,
                      details: R.BUFFER_STALLED_ERROR,
                      error: o,
                      fatal: !0,
                    });
                }
              }
            }),
            t
          );
        })(),
        cn = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n =
                t.call(this, e, r, i, "[stream-controller]", ge) ||
                this).audioCodecSwap = !1),
              (n.gapController = null),
              (n.level = -1),
              (n._forceStartLoad = !1),
              (n.altAudio = !1),
              (n.audioOnly = !1),
              (n.fragPlaying = null),
              (n.onvplaying = null),
              (n.onvseeked = null),
              (n.fragLastKbps = 0),
              (n.couldBacktrack = !1),
              (n.backtrackFragment = null),
              (n.audioCodecSwitch = !1),
              (n.videoBuffer = null),
              n._registerListeners(),
              n
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(
                  S.FRAG_LOAD_EMERGENCY_ABORTED,
                  this.onFragLoadEmergencyAborted,
                  this
                ),
                t.on(S.ERROR, this.onError, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(
                  S.FRAG_LOAD_EMERGENCY_ABORTED,
                  this.onFragLoadEmergencyAborted,
                  this
                ),
                t.off(S.ERROR, this.onError, this),
                t.off(
                  S.AUDIO_TRACK_SWITCHING,
                  this.onAudioTrackSwitching,
                  this
                ),
                t.off(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r.onHandlerDestroying = function () {
              this._unregisterListeners(), this.onMediaDetaching();
            }),
            (r.startLoad = function (t) {
              if (this.levels) {
                var e = this.lastCurrentTime,
                  r = this.hls;
                if (
                  (this.stopLoad(),
                  this.setInterval(100),
                  (this.level = -1),
                  !this.startFragRequested)
                ) {
                  var i = r.startLevel;
                  -1 === i &&
                    (r.config.testBandwidth && this.levels.length > 1
                      ? ((i = 0), (this.bitrateTest = !0))
                      : (i = r.nextAutoLevel)),
                    (this.level = r.nextLoadLevel = i),
                    (this.loadedmetadata = !1);
                }
                e > 0 &&
                  -1 === t &&
                  (this.log(
                    "Override startPosition with lastCurrentTime @" +
                      e.toFixed(3)
                  ),
                  (t = e)),
                  (this.state = Kr),
                  (this.nextLoadPosition =
                    this.startPosition =
                    this.lastCurrentTime =
                      t),
                  this.tick();
              } else (this._forceStartLoad = !0), (this.state = Gr);
            }),
            (r.stopLoad = function () {
              (this._forceStartLoad = !1), t.prototype.stopLoad.call(this);
            }),
            (r.doTick = function () {
              switch (this.state) {
                case $r:
                  var t,
                    e = this.levels,
                    r = this.level,
                    i = null == e || null == (t = e[r]) ? void 0 : t.details;
                  if (i && (!i.live || this.levelLastLoaded === this.level)) {
                    if (this.waitForCdnTuneIn(i)) break;
                    this.state = Kr;
                    break;
                  }
                  if (this.hls.nextLoadLevel !== this.level) {
                    this.state = Kr;
                    break;
                  }
                  break;
                case Yr:
                  var n,
                    a = self.performance.now(),
                    s = this.retryDate;
                  (!s || a >= s || (null != (n = this.media) && n.seeking)) &&
                    (this.resetStartWhenNotLoaded(this.level),
                    (this.state = Kr));
              }
              this.state === Kr && this.doTickIdle(), this.onTickEnd();
            }),
            (r.onTickEnd = function () {
              t.prototype.onTickEnd.call(this),
                this.checkBuffer(),
                this.checkFragmentChanged();
            }),
            (r.doTickIdle = function () {
              var t = this.hls,
                e = this.levelLastLoaded,
                r = this.levels,
                i = this.media,
                n = t.config,
                a = t.nextLoadLevel;
              if (
                null !== e &&
                (i || (!this.startFragRequested && n.startFragPrefetch)) &&
                (!this.altAudio || !this.audioOnly) &&
                null != r &&
                r[a]
              ) {
                var s = r[a],
                  o = this.getMainFwdBufferInfo();
                if (null !== o) {
                  var l = this.getLevelDetails();
                  if (l && this._streamEnded(o, l)) {
                    var u = {};
                    return (
                      this.altAudio && (u.type = "video"),
                      this.hls.trigger(S.BUFFER_EOS, u),
                      void (this.state = Xr)
                    );
                  }
                  t.loadLevel !== a &&
                    -1 === t.manualLevel &&
                    this.log(
                      "Adapting to level " + a + " from level " + this.level
                    ),
                    (this.level = t.nextLoadLevel = a);
                  var h = s.details;
                  if (
                    !h ||
                    this.state === $r ||
                    (h.live && this.levelLastLoaded !== a)
                  )
                    return (this.level = a), void (this.state = $r);
                  var d = o.len,
                    c = this.getMaxBufferLength(s.maxBitrate);
                  if (!(d >= c)) {
                    this.backtrackFragment &&
                      this.backtrackFragment.start > o.end &&
                      (this.backtrackFragment = null);
                    var f = this.backtrackFragment
                        ? this.backtrackFragment.start
                        : o.end,
                      g = this.getNextFragment(f, h);
                    if (
                      this.couldBacktrack &&
                      !this.fragPrevious &&
                      g &&
                      "initSegment" !== g.sn &&
                      this.fragmentTracker.getState(g) !== mr
                    ) {
                      var v,
                        m =
                          (null != (v = this.backtrackFragment) ? v : g).sn -
                          h.startSN,
                        p = h.fragments[m - 1];
                      p &&
                        g.cc === p.cc &&
                        ((g = p), this.fragmentTracker.removeFragment(p));
                    } else
                      this.backtrackFragment &&
                        o.len &&
                        (this.backtrackFragment = null);
                    if (g && this.isLoopLoading(g, f)) {
                      if (!g.gap) {
                        var y = this.audioOnly && !this.altAudio ? O : N,
                          T =
                            (y === N ? this.videoBuffer : this.mediaBuffer) ||
                            this.media;
                        T && this.afterBufferFlushed(T, y, ge);
                      }
                      g = this.getNextFragmentLoopLoading(g, h, o, ge, c);
                    }
                    g &&
                      (!g.initSegment ||
                        g.initSegment.data ||
                        this.bitrateTest ||
                        (g = g.initSegment),
                      this.loadFragment(g, s, f));
                  }
                }
              }
            }),
            (r.loadFragment = function (e, r, i) {
              var n = this.fragmentTracker.getState(e);
              (this.fragCurrent = e),
                n === fr || n === vr
                  ? "initSegment" === e.sn
                    ? this._loadInitSegment(e, r)
                    : this.bitrateTest
                    ? (this.log(
                        "Fragment " +
                          e.sn +
                          " of level " +
                          e.level +
                          " is being downloaded to test bitrate and will not be buffered"
                      ),
                      this._loadBitrateTestFrag(e, r))
                    : ((this.startFragRequested = !0),
                      t.prototype.loadFragment.call(this, e, r, i))
                  : this.clearTrackerIfNeeded(e);
            }),
            (r.getBufferedFrag = function (t) {
              return this.fragmentTracker.getBufferedFrag(t, ge);
            }),
            (r.followingBufferedFrag = function (t) {
              return t ? this.getBufferedFrag(t.end + 0.5) : null;
            }),
            (r.immediateLevelSwitch = function () {
              this.abortCurrentFrag(),
                this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
            }),
            (r.nextLevelSwitch = function () {
              var t = this.levels,
                e = this.media;
              if (null != e && e.readyState) {
                var r,
                  i = this.getAppendedFrag(e.currentTime);
                i && i.start > 1 && this.flushMainBuffer(0, i.start - 1);
                var n = this.getLevelDetails();
                if (null != n && n.live) {
                  var a = this.getMainFwdBufferInfo();
                  if (!a || a.len < 2 * n.targetduration) return;
                }
                if (!e.paused && t) {
                  var s = t[this.hls.nextLoadLevel],
                    o = this.fragLastKbps;
                  r =
                    o && this.fragCurrent
                      ? (this.fragCurrent.duration * s.maxBitrate) / (1e3 * o) +
                        1
                      : 0;
                } else r = 0;
                var l = this.getBufferedFrag(e.currentTime + r);
                if (l) {
                  var u = this.followingBufferedFrag(l);
                  if (u) {
                    this.abortCurrentFrag();
                    var h = u.maxStartPTS ? u.maxStartPTS : u.start,
                      d = u.duration,
                      c = Math.max(
                        l.end,
                        h +
                          Math.min(
                            Math.max(
                              d - this.config.maxFragLookUpTolerance,
                              0.5 * d
                            ),
                            0.75 * d
                          )
                      );
                    this.flushMainBuffer(c, Number.POSITIVE_INFINITY);
                  }
                }
              }
            }),
            (r.abortCurrentFrag = function () {
              var t = this.fragCurrent;
              switch (
                ((this.fragCurrent = null),
                (this.backtrackFragment = null),
                t &&
                  (t.abortRequests(), this.fragmentTracker.removeFragment(t)),
                this.state)
              ) {
                case Hr:
                case Vr:
                case Yr:
                case jr:
                case qr:
                  this.state = Kr;
              }
              this.nextLoadPosition = this.getLoadPosition();
            }),
            (r.flushMainBuffer = function (e, r) {
              t.prototype.flushMainBuffer.call(
                this,
                e,
                r,
                this.altAudio ? "video" : null
              );
            }),
            (r.onMediaAttached = function (e, r) {
              t.prototype.onMediaAttached.call(this, e, r);
              var i = r.media;
              (this.onvplaying = this.onMediaPlaying.bind(this)),
                (this.onvseeked = this.onMediaSeeked.bind(this)),
                i.addEventListener("playing", this.onvplaying),
                i.addEventListener("seeked", this.onvseeked),
                (this.gapController = new dn(
                  this.config,
                  i,
                  this.fragmentTracker,
                  this.hls
                ));
            }),
            (r.onMediaDetaching = function () {
              var e = this.media;
              e &&
                this.onvplaying &&
                this.onvseeked &&
                (e.removeEventListener("playing", this.onvplaying),
                e.removeEventListener("seeked", this.onvseeked),
                (this.onvplaying = this.onvseeked = null),
                (this.videoBuffer = null)),
                (this.fragPlaying = null),
                this.gapController &&
                  (this.gapController.destroy(), (this.gapController = null)),
                t.prototype.onMediaDetaching.call(this);
            }),
            (r.onMediaPlaying = function () {
              this.tick();
            }),
            (r.onMediaSeeked = function () {
              var t = this.media,
                e = t ? t.currentTime : null;
              E(e) && this.log("Media seeked to " + e.toFixed(3));
              var r = this.getMainFwdBufferInfo();
              null !== r && 0 !== r.len
                ? this.tick()
                : this.warn(
                    'Main forward buffer length on "seeked" event ' +
                      (r ? r.len : "empty") +
                      ")"
                  );
            }),
            (r.onManifestLoading = function () {
              this.log("Trigger BUFFER_RESET"),
                this.hls.trigger(S.BUFFER_RESET, void 0),
                this.fragmentTracker.removeAllFragments(),
                (this.couldBacktrack = !1),
                (this.startPosition = this.lastCurrentTime = 0),
                (this.levels =
                  this.fragPlaying =
                  this.backtrackFragment =
                    null),
                (this.altAudio = this.audioOnly = !1);
            }),
            (r.onManifestParsed = function (t, e) {
              var r,
                i,
                n,
                a = !1,
                s = !1;
              e.levels.forEach(function (t) {
                (r = t.audioCodec) &&
                  (-1 !== r.indexOf("mp4a.40.2") && (a = !0),
                  -1 !== r.indexOf("mp4a.40.5") && (s = !0));
              }),
                (this.audioCodecSwitch =
                  a &&
                  s &&
                  !(
                    "function" ==
                    typeof (null == (n = Zr()) || null == (i = n.prototype)
                      ? void 0
                      : i.changeType)
                  )),
                this.audioCodecSwitch &&
                  this.log(
                    "Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"
                  ),
                (this.levels = e.levels),
                (this.startFragRequested = !1);
            }),
            (r.onLevelLoading = function (t, e) {
              var r = this.levels;
              if (r && this.state === Kr) {
                var i = r[e.level];
                (!i.details ||
                  (i.details.live && this.levelLastLoaded !== e.level) ||
                  this.waitForCdnTuneIn(i.details)) &&
                  (this.state = $r);
              }
            }),
            (r.onLevelLoaded = function (t, e) {
              var r,
                i = this.levels,
                n = e.level,
                a = e.details,
                s = a.totalduration;
              if (i) {
                this.log(
                  "Level " +
                    n +
                    " loaded [" +
                    a.startSN +
                    "," +
                    a.endSN +
                    "]" +
                    (a.lastPartSn
                      ? "[part-" + a.lastPartSn + "-" + a.lastPartIndex + "]"
                      : "") +
                    ", cc [" +
                    a.startCC +
                    ", " +
                    a.endCC +
                    "] duration:" +
                    s
                );
                var o = i[n],
                  l = this.fragCurrent;
                !l ||
                  (this.state !== Vr && this.state !== Yr) ||
                  (l.level === e.level && l.urlId === o.urlId) ||
                  !l.loader ||
                  this.abortCurrentFrag();
                var u = 0;
                if (a.live || (null != (r = o.details) && r.live)) {
                  if (
                    (a.fragments[0] || (a.deltaUpdateFailed = !0),
                    a.deltaUpdateFailed)
                  )
                    return;
                  u = this.alignPlaylists(a, o.details);
                }
                if (
                  ((o.details = a),
                  (this.levelLastLoaded = n),
                  this.hls.trigger(S.LEVEL_UPDATED, { details: a, level: n }),
                  this.state === $r)
                ) {
                  if (this.waitForCdnTuneIn(a)) return;
                  this.state = Kr;
                }
                this.startFragRequested
                  ? a.live && this.synchronizeToLiveEdge(a)
                  : this.setStartPosition(a, u),
                  this.tick();
              } else this.warn("Levels were reset while loading level " + n);
            }),
            (r._handleFragmentLoadProgress = function (t) {
              var e,
                r = t.frag,
                i = t.part,
                n = t.payload,
                a = this.levels;
              if (a) {
                var s = a[r.level],
                  o = s.details;
                if (!o)
                  return (
                    this.warn(
                      "Dropping fragment " +
                        r.sn +
                        " of level " +
                        r.level +
                        " after level details were reset"
                    ),
                    void this.fragmentTracker.removeFragment(r)
                  );
                var l = s.videoCodec,
                  u = o.PTSKnown || !o.live,
                  h = null == (e = r.initSegment) ? void 0 : e.data,
                  d = this._getAudioCodec(s),
                  c = (this.transmuxer =
                    this.transmuxer ||
                    new hn(
                      this.hls,
                      ge,
                      this._handleTransmuxComplete.bind(this),
                      this._handleTransmuxerFlush.bind(this)
                    )),
                  f = i ? i.index : -1,
                  g = -1 !== f,
                  v = new wr(
                    r.level,
                    r.sn,
                    r.stats.chunkCount,
                    n.byteLength,
                    f,
                    g
                  ),
                  m = this.initPTS[r.cc];
                c.push(n, h, d, l, r, i, o.totalduration, u, v, m);
              } else
                this.warn(
                  "Levels were reset while fragment load was in progress. Fragment " +
                    r.sn +
                    " of level " +
                    r.level +
                    " will not be buffered"
                );
            }),
            (r.onAudioTrackSwitching = function (t, e) {
              var r = this.altAudio;
              if (!e.url) {
                if (this.mediaBuffer !== this.media) {
                  this.log(
                    "Switching on main audio, use media.buffered to schedule main fragment loading"
                  ),
                    (this.mediaBuffer = this.media);
                  var i = this.fragCurrent;
                  i &&
                    (this.log(
                      "Switching to main audio track, cancel main fragment load"
                    ),
                    i.abortRequests(),
                    this.fragmentTracker.removeFragment(i)),
                    this.resetTransmuxer(),
                    this.resetLoadingState();
                } else this.audioOnly && this.resetTransmuxer();
                var n = this.hls;
                r &&
                  (n.trigger(S.BUFFER_FLUSHING, {
                    startOffset: 0,
                    endOffset: Number.POSITIVE_INFINITY,
                    type: null,
                  }),
                  this.fragmentTracker.removeAllFragments()),
                  n.trigger(S.AUDIO_TRACK_SWITCHED, e);
              }
            }),
            (r.onAudioTrackSwitched = function (t, e) {
              var r = e.id,
                i = !!this.hls.audioTracks[r].url;
              if (i) {
                var n = this.videoBuffer;
                n &&
                  this.mediaBuffer !== n &&
                  (this.log(
                    "Switching on alternate audio, use video.buffered to schedule main fragment loading"
                  ),
                  (this.mediaBuffer = n));
              }
              (this.altAudio = i), this.tick();
            }),
            (r.onBufferCreated = function (t, e) {
              var r,
                i,
                n = e.tracks,
                a = !1;
              for (var s in n) {
                var o = n[s];
                if ("main" === o.id) {
                  if (((i = s), (r = o), "video" === s)) {
                    var l = n[s];
                    l && (this.videoBuffer = l.buffer);
                  }
                } else a = !0;
              }
              a && r
                ? (this.log(
                    "Alternate track found, use " +
                      i +
                      ".buffered to schedule main fragment loading"
                  ),
                  (this.mediaBuffer = r.buffer))
                : (this.mediaBuffer = this.media);
            }),
            (r.onFragBuffered = function (t, e) {
              var r = e.frag,
                i = e.part;
              if (!r || r.type === ge) {
                if (this.fragContextChanged(r))
                  return (
                    this.warn(
                      "Fragment " +
                        r.sn +
                        (i ? " p: " + i.index : "") +
                        " of level " +
                        r.level +
                        " finished buffering, but was aborted. state: " +
                        this.state
                    ),
                    void (this.state === qr && (this.state = Kr))
                  );
                var n = i ? i.stats : r.stats;
                (this.fragLastKbps = Math.round(
                  (8 * n.total) / (n.buffering.end - n.loading.first)
                )),
                  "initSegment" !== r.sn && (this.fragPrevious = r),
                  this.fragBufferedComplete(r, i);
              }
            }),
            (r.onError = function (t, e) {
              var r;
              if (e.fatal) this.state = zr;
              else
                switch (e.details) {
                  case R.FRAG_GAP:
                  case R.FRAG_PARSING_ERROR:
                  case R.FRAG_DECRYPT_ERROR:
                  case R.FRAG_LOAD_ERROR:
                  case R.FRAG_LOAD_TIMEOUT:
                  case R.KEY_LOAD_ERROR:
                  case R.KEY_LOAD_TIMEOUT:
                    this.onFragmentOrKeyLoadError(ge, e);
                    break;
                  case R.LEVEL_LOAD_ERROR:
                  case R.LEVEL_LOAD_TIMEOUT:
                  case R.LEVEL_PARSING_ERROR:
                    e.levelRetry ||
                      this.state !== $r ||
                      (null == (r = e.context) ? void 0 : r.type) !== de ||
                      (this.state = Kr);
                    break;
                  case R.BUFFER_FULL_ERROR:
                    if (!e.parent || "main" !== e.parent) return;
                    this.reduceLengthAndFlushBuffer(e) &&
                      this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                    break;
                  case R.INTERNAL_EXCEPTION:
                    this.recoverWorkerError(e);
                }
            }),
            (r.checkBuffer = function () {
              var t = this.media,
                e = this.gapController;
              if (t && e && t.readyState) {
                if (this.loadedmetadata || !Ir.getBuffered(t).length) {
                  var r = this.state !== Kr ? this.fragCurrent : null;
                  e.poll(this.lastCurrentTime, r);
                }
                this.lastCurrentTime = t.currentTime;
              }
            }),
            (r.onFragLoadEmergencyAborted = function () {
              (this.state = Kr),
                this.loadedmetadata ||
                  ((this.startFragRequested = !1),
                  (this.nextLoadPosition = this.startPosition)),
                this.tickImmediate();
            }),
            (r.onBufferFlushed = function (t, e) {
              var r = e.type;
              if (r !== O || (this.audioOnly && !this.altAudio)) {
                var i =
                  (r === N ? this.videoBuffer : this.mediaBuffer) || this.media;
                this.afterBufferFlushed(i, r, ge);
              }
            }),
            (r.onLevelsUpdated = function (t, e) {
              this.levels = e.levels;
            }),
            (r.swapAudioCodec = function () {
              this.audioCodecSwap = !this.audioCodecSwap;
            }),
            (r.seekToStartPos = function () {
              var t = this.media;
              if (t) {
                var e = t.currentTime,
                  r = this.startPosition;
                if (r >= 0 && e < r) {
                  if (t.seeking)
                    return void this.log(
                      "could not seek to " + r + ", already seeking at " + e
                    );
                  var i = Ir.getBuffered(t),
                    n = (i.length ? i.start(0) : 0) - r;
                  n > 0 &&
                    (n < this.config.maxBufferHole ||
                      n < this.config.maxFragLookUpTolerance) &&
                    (this.log(
                      "adjusting start position by " +
                        n +
                        " to match buffer start"
                    ),
                    (r += n),
                    (this.startPosition = r)),
                    this.log(
                      "seek to target start position " +
                        r +
                        " from current time " +
                        e
                    ),
                    (t.currentTime = r);
                }
              }
            }),
            (r._getAudioCodec = function (t) {
              var e = this.config.defaultAudioCodec || t.audioCodec;
              return (
                this.audioCodecSwap &&
                  e &&
                  (this.log("Swapping audio codec"),
                  (e =
                    -1 !== e.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5")),
                e
              );
            }),
            (r._loadBitrateTestFrag = function (t, e) {
              var r = this;
              (t.bitrateTest = !0),
                this._doFragLoad(t, e).then(function (i) {
                  var n = r.hls;
                  if (i && !r.fragContextChanged(t)) {
                    (e.fragmentError = 0),
                      (r.state = Kr),
                      (r.startFragRequested = !1),
                      (r.bitrateTest = !1);
                    var a = t.stats;
                    (a.parsing.start =
                      a.parsing.end =
                      a.buffering.start =
                      a.buffering.end =
                        self.performance.now()),
                      n.trigger(S.FRAG_LOADED, i),
                      (t.bitrateTest = !1);
                  }
                });
            }),
            (r._handleTransmuxComplete = function (t) {
              var e,
                r = "main",
                i = this.hls,
                n = t.remuxResult,
                a = t.chunkMeta,
                s = this.getCurrentContext(a);
              if (s) {
                var o = s.frag,
                  l = s.part,
                  u = s.level,
                  h = n.video,
                  d = n.text,
                  c = n.id3,
                  f = n.initSegment,
                  g = u.details,
                  v = this.altAudio ? void 0 : n.audio;
                if (this.fragContextChanged(o))
                  this.fragmentTracker.removeFragment(o);
                else {
                  if (((this.state = jr), f)) {
                    if (null != f && f.tracks) {
                      var m = o.initSegment || o;
                      this._bufferInitSegment(u, f.tracks, m, a),
                        i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                          frag: m,
                          id: r,
                          tracks: f.tracks,
                        });
                    }
                    var p = f.initPTS,
                      y = f.timescale;
                    E(p) &&
                      ((this.initPTS[o.cc] = { baseTime: p, timescale: y }),
                      i.trigger(S.INIT_PTS_FOUND, {
                        frag: o,
                        id: r,
                        initPTS: p,
                        timescale: y,
                      }));
                  }
                  if (h && g && "initSegment" !== o.sn) {
                    var T = g.fragments[o.sn - 1 - g.startSN],
                      L = o.sn === g.startSN,
                      R = !T || o.cc > T.cc;
                    if (!1 !== n.independent) {
                      var A = h.startPTS,
                        k = h.endPTS,
                        b = h.startDTS,
                        D = h.endDTS;
                      if (l)
                        l.elementaryStreams[h.type] = {
                          startPTS: A,
                          endPTS: k,
                          startDTS: b,
                          endDTS: D,
                        };
                      else if (
                        (h.firstKeyFrame &&
                          h.independent &&
                          1 === a.id &&
                          !R &&
                          (this.couldBacktrack = !0),
                        h.dropped && h.independent)
                      ) {
                        var I = this.getMainFwdBufferInfo(),
                          w =
                            (I ? I.end : this.getLoadPosition()) +
                            this.config.maxBufferHole,
                          C = h.firstKeyFramePTS ? h.firstKeyFramePTS : A;
                        if (!L && w < C - this.config.maxBufferHole && !R)
                          return void this.backtrack(o);
                        R && (o.gap = !0),
                          o.setElementaryStreamInfo(
                            h.type,
                            o.start,
                            k,
                            o.start,
                            D,
                            !0
                          );
                      }
                      o.setElementaryStreamInfo(h.type, A, k, b, D),
                        this.backtrackFragment && (this.backtrackFragment = o),
                        this.bufferFragmentData(h, o, l, a, L || R);
                    } else {
                      if (!L && !R) return void this.backtrack(o);
                      o.gap = !0;
                    }
                  }
                  if (v) {
                    var _ = v.startPTS,
                      P = v.endPTS,
                      x = v.startDTS,
                      F = v.endDTS;
                    l &&
                      (l.elementaryStreams[O] = {
                        startPTS: _,
                        endPTS: P,
                        startDTS: x,
                        endDTS: F,
                      }),
                      o.setElementaryStreamInfo(O, _, P, x, F),
                      this.bufferFragmentData(v, o, l, a);
                  }
                  if (g && null != c && null != (e = c.samples) && e.length) {
                    var M = { id: r, frag: o, details: g, samples: c.samples };
                    i.trigger(S.FRAG_PARSING_METADATA, M);
                  }
                  if (g && d) {
                    var N = { id: r, frag: o, details: g, samples: d.samples };
                    i.trigger(S.FRAG_PARSING_USERDATA, N);
                  }
                }
              } else this.resetWhenMissingContext(a);
            }),
            (r._bufferInitSegment = function (t, e, r, i) {
              var n = this;
              if (this.state === jr) {
                (this.audioOnly = !!e.audio && !e.video),
                  this.altAudio && !this.audioOnly && delete e.audio;
                var a = e.audio,
                  s = e.video,
                  o = e.audiovideo;
                if (a) {
                  var l = t.audioCodec,
                    u = navigator.userAgent.toLowerCase();
                  this.audioCodecSwitch &&
                    (l &&
                      (l =
                        -1 !== l.indexOf("mp4a.40.5")
                          ? "mp4a.40.2"
                          : "mp4a.40.5"),
                    1 !== a.metadata.channelCount &&
                      -1 === u.indexOf("firefox") &&
                      (l = "mp4a.40.5")),
                    -1 !== u.indexOf("android") &&
                      "audio/mpeg" !== a.container &&
                      ((l = "mp4a.40.2"),
                      this.log("Android: force audio codec to " + l)),
                    t.audioCodec &&
                      t.audioCodec !== l &&
                      this.log(
                        'Swapping manifest audio codec "' +
                          t.audioCodec +
                          '" for "' +
                          l +
                          '"'
                      ),
                    (a.levelCodec = l),
                    (a.id = "main"),
                    this.log(
                      "Init audio buffer, container:" +
                        a.container +
                        ", codecs[selected/level/parsed]=[" +
                        (l || "") +
                        "/" +
                        (t.audioCodec || "") +
                        "/" +
                        a.codec +
                        "]"
                    );
                }
                s &&
                  ((s.levelCodec = t.videoCodec),
                  (s.id = "main"),
                  this.log(
                    "Init video buffer, container:" +
                      s.container +
                      ", codecs[level/parsed]=[" +
                      (t.videoCodec || "") +
                      "/" +
                      s.codec +
                      "]"
                  )),
                  o &&
                    this.log(
                      "Init audiovideo buffer, container:" +
                        o.container +
                        ", codecs[level/parsed]=[" +
                        (t.attrs.CODECS || "") +
                        "/" +
                        o.codec +
                        "]"
                    ),
                  this.hls.trigger(S.BUFFER_CODECS, e),
                  Object.keys(e).forEach(function (t) {
                    var a = e[t].initSegment;
                    null != a &&
                      a.byteLength &&
                      n.hls.trigger(S.BUFFER_APPENDING, {
                        type: t,
                        data: a,
                        frag: r,
                        part: null,
                        chunkMeta: i,
                        parent: r.type,
                      });
                  }),
                  this.tick();
              }
            }),
            (r.getMainFwdBufferInfo = function () {
              return this.getFwdBufferInfo(
                this.mediaBuffer ? this.mediaBuffer : this.media,
                ge
              );
            }),
            (r.backtrack = function (t) {
              (this.couldBacktrack = !0),
                (this.backtrackFragment = t),
                this.resetTransmuxer(),
                this.flushBufferGap(t),
                this.fragmentTracker.removeFragment(t),
                (this.fragPrevious = null),
                (this.nextLoadPosition = t.start),
                (this.state = Kr);
            }),
            (r.checkFragmentChanged = function () {
              var t = this.media,
                e = null;
              if (t && t.readyState > 1 && !1 === t.seeking) {
                var r = t.currentTime;
                if (
                  (Ir.isBuffered(t, r)
                    ? (e = this.getAppendedFrag(r))
                    : Ir.isBuffered(t, r + 0.1) &&
                      (e = this.getAppendedFrag(r + 0.1)),
                  e)
                ) {
                  this.backtrackFragment = null;
                  var i = this.fragPlaying,
                    n = e.level;
                  (i &&
                    e.sn === i.sn &&
                    i.level === n &&
                    e.urlId === i.urlId) ||
                    ((this.fragPlaying = e),
                    this.hls.trigger(S.FRAG_CHANGED, { frag: e }),
                    (i && i.level === n) ||
                      this.hls.trigger(S.LEVEL_SWITCHED, { level: n }));
                }
              }
            }),
            a(e, [
              {
                key: "nextLevel",
                get: function () {
                  var t = this.nextBufferedFrag;
                  return t ? t.level : -1;
                },
              },
              {
                key: "currentFrag",
                get: function () {
                  var t = this.media;
                  return t
                    ? this.fragPlaying || this.getAppendedFrag(t.currentTime)
                    : null;
                },
              },
              {
                key: "currentProgramDateTime",
                get: function () {
                  var t = this.media;
                  if (t) {
                    var e = t.currentTime,
                      r = this.currentFrag;
                    if (r && E(e) && E(r.programDateTime)) {
                      var i = r.programDateTime + 1e3 * (e - r.start);
                      return new Date(i);
                    }
                  }
                  return null;
                },
              },
              {
                key: "currentLevel",
                get: function () {
                  var t = this.currentFrag;
                  return t ? t.level : -1;
                },
              },
              {
                key: "nextBufferedFrag",
                get: function () {
                  var t = this.currentFrag;
                  return t ? this.followingBufferedFrag(t) : null;
                },
              },
              {
                key: "forceStartLoad",
                get: function () {
                  return this._forceStartLoad;
                },
              },
            ]),
            e
          );
        })(Jr),
        fn = (function () {
          function t(t, e, r) {
            void 0 === e && (e = 0),
              void 0 === r && (r = 0),
              (this.halfLife = void 0),
              (this.alpha_ = void 0),
              (this.estimate_ = void 0),
              (this.totalWeight_ = void 0),
              (this.halfLife = t),
              (this.alpha_ = t ? Math.exp(Math.log(0.5) / t) : 0),
              (this.estimate_ = e),
              (this.totalWeight_ = r);
          }
          var e = t.prototype;
          return (
            (e.sample = function (t, e) {
              var r = Math.pow(this.alpha_, t);
              (this.estimate_ = e * (1 - r) + r * this.estimate_),
                (this.totalWeight_ += t);
            }),
            (e.getTotalWeight = function () {
              return this.totalWeight_;
            }),
            (e.getEstimate = function () {
              if (this.alpha_) {
                var t = 1 - Math.pow(this.alpha_, this.totalWeight_);
                if (t) return this.estimate_ / t;
              }
              return this.estimate_;
            }),
            t
          );
        })(),
        gn = (function () {
          function t(t, e, r, i) {
            void 0 === i && (i = 100),
              (this.defaultEstimate_ = void 0),
              (this.minWeight_ = void 0),
              (this.minDelayMs_ = void 0),
              (this.slow_ = void 0),
              (this.fast_ = void 0),
              (this.defaultTTFB_ = void 0),
              (this.ttfb_ = void 0),
              (this.defaultEstimate_ = r),
              (this.minWeight_ = 0.001),
              (this.minDelayMs_ = 50),
              (this.slow_ = new fn(t)),
              (this.fast_ = new fn(e)),
              (this.defaultTTFB_ = i),
              (this.ttfb_ = new fn(t));
          }
          var e = t.prototype;
          return (
            (e.update = function (t, e) {
              var r = this.slow_,
                i = this.fast_,
                n = this.ttfb_;
              r.halfLife !== t &&
                (this.slow_ = new fn(t, r.getEstimate(), r.getTotalWeight())),
                i.halfLife !== e &&
                  (this.fast_ = new fn(e, i.getEstimate(), i.getTotalWeight())),
                n.halfLife !== t &&
                  (this.ttfb_ = new fn(t, n.getEstimate(), n.getTotalWeight()));
            }),
            (e.sample = function (t, e) {
              var r = (t = Math.max(t, this.minDelayMs_)) / 1e3,
                i = (8 * e) / r;
              this.fast_.sample(r, i), this.slow_.sample(r, i);
            }),
            (e.sampleTTFB = function (t) {
              var e = t / 1e3,
                r = Math.sqrt(2) * Math.exp(-Math.pow(e, 2) / 2);
              this.ttfb_.sample(r, Math.max(t, 5));
            }),
            (e.canEstimate = function () {
              return this.fast_.getTotalWeight() >= this.minWeight_;
            }),
            (e.getEstimate = function () {
              return this.canEstimate()
                ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate())
                : this.defaultEstimate_;
            }),
            (e.getEstimateTTFB = function () {
              return this.ttfb_.getTotalWeight() >= this.minWeight_
                ? this.ttfb_.getEstimate()
                : this.defaultTTFB_;
            }),
            (e.destroy = function () {}),
            t
          );
        })(),
        vn = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.lastLevelLoadSec = 0),
              (this.lastLoadedFragLevel = 0),
              (this._nextAutoLevel = -1),
              (this.timer = -1),
              (this.onCheck = this._abandonRulesCheck.bind(this)),
              (this.fragCurrent = null),
              (this.partCurrent = null),
              (this.bitrateTestDelay = 0),
              (this.bwEstimator = void 0),
              (this.hls = t);
            var e = t.config;
            (this.bwEstimator = new gn(
              e.abrEwmaSlowVoD,
              e.abrEwmaFastVoD,
              e.abrEwmaDefaultEstimate
            )),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.FRAG_LOADING, this.onFragLoading, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.FRAG_LOADING, this.onFragLoading, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this);
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.clearTimer(),
                (this.hls = this.onCheck = null),
                (this.fragCurrent = this.partCurrent = null);
            }),
            (e.onFragLoading = function (t, e) {
              var r,
                i = e.frag;
              this.ignoreFragment(i) ||
                ((this.fragCurrent = i),
                (this.partCurrent = null != (r = e.part) ? r : null),
                this.clearTimer(),
                (this.timer = self.setInterval(this.onCheck, 100)));
            }),
            (e.onLevelSwitching = function (t, e) {
              this.clearTimer();
            }),
            (e.getTimeToLoadFrag = function (t, e, r, i) {
              return t + r / e + (i ? this.lastLevelLoadSec : 0);
            }),
            (e.onLevelLoaded = function (t, e) {
              var r = this.hls.config,
                i = e.stats,
                n = i.total,
                a = i.bwEstimate;
              E(n) && E(a) && (this.lastLevelLoadSec = (8 * n) / a),
                e.details.live
                  ? this.bwEstimator.update(
                      r.abrEwmaSlowLive,
                      r.abrEwmaFastLive
                    )
                  : this.bwEstimator.update(r.abrEwmaSlowVoD, r.abrEwmaFastVoD);
            }),
            (e._abandonRulesCheck = function () {
              var t = this.fragCurrent,
                e = this.partCurrent,
                r = this.hls,
                i = r.autoLevelEnabled,
                n = r.media;
              if (t && n) {
                var a = performance.now(),
                  s = e ? e.stats : t.stats,
                  o = e ? e.duration : t.duration,
                  l = a - s.loading.start;
                if (
                  s.aborted ||
                  (s.loaded && s.loaded === s.total) ||
                  0 === t.level
                )
                  return this.clearTimer(), void (this._nextAutoLevel = -1);
                if (i && !n.paused && n.playbackRate && n.readyState) {
                  var u = r.mainForwardBufferInfo;
                  if (null !== u) {
                    var h = this.bwEstimator.getEstimateTTFB(),
                      d = Math.abs(n.playbackRate);
                    if (!(l <= Math.max(h, (o / (2 * d)) * 1e3))) {
                      var c = u.len / d;
                      if (!(c >= (2 * o) / d)) {
                        var f = s.loading.first
                            ? s.loading.first - s.loading.start
                            : -1,
                          g = s.loaded && f > -1,
                          v = this.bwEstimator.getEstimate(),
                          m = r.levels,
                          p = r.minAutoLevel,
                          y = m[t.level],
                          T =
                            s.total ||
                            Math.max(
                              s.loaded,
                              Math.round((o * y.maxBitrate) / 8)
                            ),
                          L = l - f;
                        L < 1 && g && (L = Math.min(l, (8 * s.loaded) / v));
                        var R = g ? (1e3 * s.loaded) / L : 0,
                          A = R ? (T - s.loaded) / R : (8 * T) / v + h / 1e3;
                        if (!(A <= c)) {
                          var k,
                            b = R ? 8 * R : v,
                            D = Number.POSITIVE_INFINITY;
                          for (k = t.level - 1; k > p; k--) {
                            var I = m[k].maxBitrate;
                            if (
                              (D = this.getTimeToLoadFrag(
                                h / 1e3,
                                b,
                                o * I,
                                !m[k].details
                              )) < c
                            )
                              break;
                          }
                          D >= A ||
                            D > 10 * o ||
                            ((r.nextLoadLevel = k),
                            g
                              ? this.bwEstimator.sample(
                                  l - Math.min(h, f),
                                  s.loaded
                                )
                              : this.bwEstimator.sampleTTFB(l),
                            this.clearTimer(),
                            w.warn(
                              "[abr] Fragment " +
                                t.sn +
                                (e ? " part " + e.index : "") +
                                " of level " +
                                t.level +
                                " is loading too slowly;\n      Time to underbuffer: " +
                                c.toFixed(3) +
                                " s\n      Estimated load time for current fragment: " +
                                A.toFixed(3) +
                                " s\n      Estimated load time for down switch fragment: " +
                                D.toFixed(3) +
                                " s\n      TTFB estimate: " +
                                f +
                                "\n      Current BW estimate: " +
                                (E(v) ? (v / 1024).toFixed(3) : "Unknown") +
                                " Kb/s\n      New BW estimate: " +
                                (this.bwEstimator.getEstimate() / 1024).toFixed(
                                  3
                                ) +
                                " Kb/s\n      Aborting and switching to level " +
                                k
                            ),
                            t.loader &&
                              ((this.fragCurrent = this.partCurrent = null),
                              t.abortRequests()),
                            r.trigger(S.FRAG_LOAD_EMERGENCY_ABORTED, {
                              frag: t,
                              part: e,
                              stats: s,
                            }));
                        }
                      }
                    }
                  }
                }
              }
            }),
            (e.onFragLoaded = function (t, e) {
              var r = e.frag,
                i = e.part,
                n = i ? i.stats : r.stats;
              if (
                (r.type === ge &&
                  this.bwEstimator.sampleTTFB(
                    n.loading.first - n.loading.start
                  ),
                !this.ignoreFragment(r))
              ) {
                if (
                  (this.clearTimer(),
                  (this.lastLoadedFragLevel = r.level),
                  (this._nextAutoLevel = -1),
                  this.hls.config.abrMaxWithRealBitrate)
                ) {
                  var a = i ? i.duration : r.duration,
                    s = this.hls.levels[r.level],
                    o = (s.loaded ? s.loaded.bytes : 0) + n.loaded,
                    l = (s.loaded ? s.loaded.duration : 0) + a;
                  (s.loaded = { bytes: o, duration: l }),
                    (s.realBitrate = Math.round((8 * o) / l));
                }
                if (r.bitrateTest) {
                  var u = { stats: n, frag: r, part: i, id: r.type };
                  this.onFragBuffered(S.FRAG_BUFFERED, u), (r.bitrateTest = !1);
                }
              }
            }),
            (e.onFragBuffered = function (t, e) {
              var r = e.frag,
                i = e.part,
                n = null != i && i.stats.loaded ? i.stats : r.stats;
              if (!n.aborted && !this.ignoreFragment(r)) {
                var a =
                  n.parsing.end -
                  n.loading.start -
                  Math.min(
                    n.loading.first - n.loading.start,
                    this.bwEstimator.getEstimateTTFB()
                  );
                this.bwEstimator.sample(a, n.loaded),
                  (n.bwEstimate = this.bwEstimator.getEstimate()),
                  r.bitrateTest
                    ? (this.bitrateTestDelay = a / 1e3)
                    : (this.bitrateTestDelay = 0);
              }
            }),
            (e.ignoreFragment = function (t) {
              return t.type !== ge || "initSegment" === t.sn;
            }),
            (e.clearTimer = function () {
              self.clearInterval(this.timer);
            }),
            (e.getNextABRAutoLevel = function () {
              var t = this.fragCurrent,
                e = this.partCurrent,
                r = this.hls,
                i = r.maxAutoLevel,
                n = r.config,
                a = r.minAutoLevel,
                s = r.media,
                o = e ? e.duration : t ? t.duration : 0,
                l = s && 0 !== s.playbackRate ? Math.abs(s.playbackRate) : 1,
                u = this.bwEstimator
                  ? this.bwEstimator.getEstimate()
                  : n.abrEwmaDefaultEstimate,
                h = r.mainForwardBufferInfo,
                d = (h ? h.len : 0) / l,
                c = this.findBestLevel(
                  u,
                  a,
                  i,
                  d,
                  n.abrBandWidthFactor,
                  n.abrBandWidthUpFactor
                );
              if (c >= 0) return c;
              w.trace(
                "[abr] " +
                  (d ? "rebuffering expected" : "buffer is empty") +
                  ", finding optimal quality level"
              );
              var f = o
                  ? Math.min(o, n.maxStarvationDelay)
                  : n.maxStarvationDelay,
                g = n.abrBandWidthFactor,
                v = n.abrBandWidthUpFactor;
              if (!d) {
                var m = this.bitrateTestDelay;
                m &&
                  ((f =
                    (o ? Math.min(o, n.maxLoadingDelay) : n.maxLoadingDelay) -
                    m),
                  w.trace(
                    "[abr] bitrate test took " +
                      Math.round(1e3 * m) +
                      "ms, set first fragment max fetchDuration to " +
                      Math.round(1e3 * f) +
                      " ms"
                  ),
                  (g = v = 1));
              }
              return (
                (c = this.findBestLevel(u, a, i, d + f, g, v)), Math.max(c, 0)
              );
            }),
            (e.findBestLevel = function (t, e, r, i, n, a) {
              for (
                var s,
                  o = this.fragCurrent,
                  l = this.partCurrent,
                  u = this.lastLoadedFragLevel,
                  h = this.hls.levels,
                  d = h[u],
                  c = !(null == d || null == (s = d.details) || !s.live),
                  f = null == d ? void 0 : d.codecSet,
                  g = l ? l.duration : o ? o.duration : 0,
                  v = this.bwEstimator.getEstimateTTFB() / 1e3,
                  m = e,
                  p = -1,
                  y = r;
                y >= e;
                y--
              ) {
                var T = h[y];
                if (!T || (f && T.codecSet !== f))
                  T && ((m = Math.min(y, m)), (p = Math.max(y, p)));
                else {
                  -1 !== p &&
                    w.trace(
                      "[abr] Skipped level(s) " +
                        m +
                        "-" +
                        p +
                        ' with CODECS:"' +
                        h[p].attrs.CODECS +
                        '"; not compatible with "' +
                        d.attrs.CODECS +
                        '"'
                    );
                  var S = T.details,
                    L =
                      (l
                        ? null == S
                          ? void 0
                          : S.partTarget
                        : null == S
                        ? void 0
                        : S.averagetargetduration) || g,
                    R = void 0;
                  R = y <= u ? n * t : a * t;
                  var A = h[y].maxBitrate,
                    k = this.getTimeToLoadFrag(v, R, A * L, void 0 === S);
                  if (
                    (w.trace(
                      "[abr] level:" +
                        y +
                        " adjustedbw-bitrate:" +
                        Math.round(R - A) +
                        " avgDuration:" +
                        L.toFixed(1) +
                        " maxFetchDuration:" +
                        i.toFixed(1) +
                        " fetchDuration:" +
                        k.toFixed(1)
                    ),
                    R > A &&
                      (0 === k ||
                        !E(k) ||
                        (c && !this.bitrateTestDelay) ||
                        k < i))
                  )
                    return y;
                }
              }
              return -1;
            }),
            a(t, [
              {
                key: "nextAutoLevel",
                get: function () {
                  var t = this._nextAutoLevel,
                    e = this.bwEstimator;
                  if (-1 !== t && !e.canEstimate()) return t;
                  var r = this.getNextABRAutoLevel();
                  if (-1 !== t) {
                    var i = this.hls.levels;
                    if (
                      i.length > Math.max(t, r) &&
                      i[t].loadError <= i[r].loadError
                    )
                      return t;
                  }
                  return -1 !== t && (r = Math.min(t, r)), r;
                },
                set: function (t) {
                  this._nextAutoLevel = t;
                },
              },
            ]),
            t
          );
        })(),
        mn = (function () {
          function t() {
            (this.chunks = []), (this.dataLength = 0);
          }
          var e = t.prototype;
          return (
            (e.push = function (t) {
              this.chunks.push(t), (this.dataLength += t.length);
            }),
            (e.flush = function () {
              var t,
                e = this.chunks,
                r = this.dataLength;
              return e.length
                ? ((t =
                    1 === e.length
                      ? e[0]
                      : (function (t, e) {
                          for (
                            var r = new Uint8Array(e), i = 0, n = 0;
                            n < t.length;
                            n++
                          ) {
                            var a = t[n];
                            r.set(a, i), (i += a.length);
                          }
                          return r;
                        })(e, r)),
                  this.reset(),
                  t)
                : new Uint8Array(0);
            }),
            (e.reset = function () {
              (this.chunks.length = 0), (this.dataLength = 0);
            }),
            t
          );
        })(),
        pn = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n =
                t.call(this, e, r, i, "[audio-stream-controller]", ve) ||
                this).videoBuffer = null),
              (n.videoTrackCC = -1),
              (n.waitingVideoCC = -1),
              (n.bufferedTrack = null),
              (n.switchingTrack = null),
              (n.trackId = -1),
              (n.waitingData = null),
              (n.mainDetails = null),
              (n.bufferFlushed = !1),
              (n.cachedTrackLoadedData = null),
              n._registerListeners(),
              n
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.onHandlerDestroying = function () {
              this._unregisterListeners(),
                (this.mainDetails = null),
                (this.bufferedTrack = null),
                (this.switchingTrack = null);
            }),
            (r._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.off(
                  S.AUDIO_TRACK_SWITCHING,
                  this.onAudioTrackSwitching,
                  this
                ),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r.onInitPtsFound = function (t, e) {
              var r = e.frag,
                i = e.id,
                n = e.initPTS,
                a = e.timescale;
              if ("main" === i) {
                var s = r.cc;
                (this.initPTS[r.cc] = { baseTime: n, timescale: a }),
                  this.log("InitPTS for cc: " + s + " found from main: " + n),
                  (this.videoTrackCC = s),
                  this.state === Qr && this.tick();
              }
            }),
            (r.startLoad = function (t) {
              if (!this.levels)
                return (this.startPosition = t), void (this.state = Gr);
              var e = this.lastCurrentTime;
              this.stopLoad(),
                this.setInterval(100),
                e > 0 && -1 === t
                  ? (this.log(
                      "Override startPosition with lastCurrentTime @" +
                        e.toFixed(3)
                    ),
                    (t = e),
                    (this.state = Kr))
                  : ((this.loadedmetadata = !1), (this.state = Wr)),
                (this.nextLoadPosition =
                  this.startPosition =
                  this.lastCurrentTime =
                    t),
                this.tick();
            }),
            (r.doTick = function () {
              switch (this.state) {
                case Kr:
                  this.doTickIdle();
                  break;
                case Wr:
                  var e,
                    r = this.levels,
                    i = this.trackId,
                    n = null == r || null == (e = r[i]) ? void 0 : e.details;
                  if (n) {
                    if (this.waitForCdnTuneIn(n)) break;
                    this.state = Qr;
                  }
                  break;
                case Yr:
                  var a,
                    s = performance.now(),
                    o = this.retryDate;
                  (!o || s >= o || (null != (a = this.media) && a.seeking)) &&
                    (this.log("RetryDate reached, switch back to IDLE state"),
                    this.resetStartWhenNotLoaded(this.trackId),
                    (this.state = Kr));
                  break;
                case Qr:
                  var l = this.waitingData;
                  if (l) {
                    var u = l.frag,
                      h = l.part,
                      d = l.cache,
                      c = l.complete;
                    if (void 0 !== this.initPTS[u.cc]) {
                      (this.waitingData = null),
                        (this.waitingVideoCC = -1),
                        (this.state = Vr);
                      var f = {
                        frag: u,
                        part: h,
                        payload: d.flush(),
                        networkDetails: null,
                      };
                      this._handleFragmentLoadProgress(f),
                        c &&
                          t.prototype._handleFragmentLoadComplete.call(this, f);
                    } else if (this.videoTrackCC !== this.waitingVideoCC)
                      this.log(
                        "Waiting fragment cc (" +
                          u.cc +
                          ") cancelled because video is at cc " +
                          this.videoTrackCC
                      ),
                        this.clearWaitingFragment();
                    else {
                      var g = this.getLoadPosition(),
                        v = Ir.bufferInfo(
                          this.mediaBuffer,
                          g,
                          this.config.maxBufferHole
                        );
                      Je(v.end, this.config.maxFragLookUpTolerance, u) < 0 &&
                        (this.log(
                          "Waiting fragment cc (" +
                            u.cc +
                            ") @ " +
                            u.start +
                            " cancelled because another fragment at " +
                            v.end +
                            " is needed"
                        ),
                        this.clearWaitingFragment());
                    }
                  } else this.state = Kr;
              }
              this.onTickEnd();
            }),
            (r.clearWaitingFragment = function () {
              var t = this.waitingData;
              t &&
                (this.fragmentTracker.removeFragment(t.frag),
                (this.waitingData = null),
                (this.waitingVideoCC = -1),
                (this.state = Kr));
            }),
            (r.resetLoadingState = function () {
              this.clearWaitingFragment(),
                t.prototype.resetLoadingState.call(this);
            }),
            (r.onTickEnd = function () {
              var t = this.media;
              null != t &&
                t.readyState &&
                (this.lastCurrentTime = t.currentTime);
            }),
            (r.doTickIdle = function () {
              var t = this.hls,
                e = this.levels,
                r = this.media,
                i = this.trackId,
                n = t.config;
              if (
                null != e &&
                e[i] &&
                (r || (!this.startFragRequested && n.startFragPrefetch))
              ) {
                var a = e[i],
                  s = a.details;
                if (
                  !s ||
                  (s.live && this.levelLastLoaded !== i) ||
                  this.waitForCdnTuneIn(s)
                )
                  this.state = Wr;
                else {
                  var o = this.mediaBuffer ? this.mediaBuffer : this.media;
                  this.bufferFlushed &&
                    o &&
                    ((this.bufferFlushed = !1),
                    this.afterBufferFlushed(o, O, ve));
                  var l = this.getFwdBufferInfo(o, ve);
                  if (null !== l) {
                    var u = this.bufferedTrack,
                      h = this.switchingTrack;
                    if (!h && this._streamEnded(l, s))
                      return (
                        t.trigger(S.BUFFER_EOS, { type: "audio" }),
                        void (this.state = Xr)
                      );
                    var d = this.getFwdBufferInfo(
                        this.videoBuffer ? this.videoBuffer : this.media,
                        ge
                      ),
                      c = l.len,
                      f = this.getMaxBufferLength(null == d ? void 0 : d.len);
                    if (!(c >= f) || h) {
                      var g = s.fragments[0].start,
                        v = l.end;
                      if (h && r) {
                        var m = this.getLoadPosition();
                        u && h.attrs !== u.attrs && (v = m),
                          s.PTSKnown &&
                            m < g &&
                            (l.end > g || l.nextStart) &&
                            (this.log(
                              "Alt audio track ahead of main track, seek to start of alt audio track"
                            ),
                            (r.currentTime = g + 0.05));
                      }
                      var p = this.getNextFragment(v, s),
                        y = !1;
                      if (
                        (p &&
                          this.isLoopLoading(p, v) &&
                          ((y = !!p.gap),
                          (p = this.getNextFragmentLoopLoading(
                            p,
                            s,
                            l,
                            ge,
                            f
                          ))),
                        p)
                      ) {
                        var T = d && p.start > d.end + s.targetduration;
                        if (T || ((null == d || !d.len) && l.len)) {
                          var E = this.getAppendedFrag(p.start, ge);
                          if (null === E) return;
                          if (
                            (y || (y = !!E.gap || (!!T && 0 === d.len)),
                            (T && !y) ||
                              (y && l.nextStart && l.nextStart < E.end))
                          )
                            return;
                        }
                        this.loadFragment(p, a, v);
                      } else this.bufferFlushed = !0;
                    }
                  }
                }
              }
            }),
            (r.getMaxBufferLength = function (e) {
              var r = t.prototype.getMaxBufferLength.call(this);
              return e
                ? Math.min(Math.max(r, e), this.config.maxMaxBufferLength)
                : r;
            }),
            (r.onMediaDetaching = function () {
              (this.videoBuffer = null),
                t.prototype.onMediaDetaching.call(this);
            }),
            (r.onAudioTracksUpdated = function (t, e) {
              var r = e.audioTracks;
              this.resetTransmuxer(),
                (this.levels = r.map(function (t) {
                  return new Ne(t);
                }));
            }),
            (r.onAudioTrackSwitching = function (t, e) {
              var r = !!e.url;
              this.trackId = e.id;
              var i = this.fragCurrent;
              i && (i.abortRequests(), this.removeUnbufferedFrags(i.start)),
                this.resetLoadingState(),
                r ? this.setInterval(100) : this.resetTransmuxer(),
                r
                  ? ((this.switchingTrack = e), (this.state = Kr))
                  : ((this.switchingTrack = null),
                    (this.bufferedTrack = e),
                    (this.state = Gr)),
                this.tick();
            }),
            (r.onManifestLoading = function () {
              this.fragmentTracker.removeAllFragments(),
                (this.startPosition = this.lastCurrentTime = 0),
                (this.bufferFlushed = !1),
                (this.levels =
                  this.mainDetails =
                  this.waitingData =
                  this.bufferedTrack =
                  this.cachedTrackLoadedData =
                  this.switchingTrack =
                    null),
                (this.startFragRequested = !1),
                (this.trackId = this.videoTrackCC = this.waitingVideoCC = -1);
            }),
            (r.onLevelLoaded = function (t, e) {
              (this.mainDetails = e.details),
                null !== this.cachedTrackLoadedData &&
                  (this.hls.trigger(
                    S.AUDIO_TRACK_LOADED,
                    this.cachedTrackLoadedData
                  ),
                  (this.cachedTrackLoadedData = null));
            }),
            (r.onAudioTrackLoaded = function (t, e) {
              var r;
              if (null != this.mainDetails) {
                var i = this.levels,
                  n = e.details,
                  a = e.id;
                if (i) {
                  this.log(
                    "Track " +
                      a +
                      " loaded [" +
                      n.startSN +
                      "," +
                      n.endSN +
                      "]" +
                      (n.lastPartSn
                        ? "[part-" + n.lastPartSn + "-" + n.lastPartIndex + "]"
                        : "") +
                      ",duration:" +
                      n.totalduration
                  );
                  var s = i[a],
                    o = 0;
                  if (n.live || (null != (r = s.details) && r.live)) {
                    var l = this.mainDetails;
                    if (
                      (n.fragments[0] || (n.deltaUpdateFailed = !0),
                      n.deltaUpdateFailed || !l)
                    )
                      return;
                    !s.details && n.hasProgramDateTime && l.hasProgramDateTime
                      ? (Fr(n, l), (o = n.fragments[0].start))
                      : (o = this.alignPlaylists(n, s.details));
                  }
                  (s.details = n),
                    (this.levelLastLoaded = a),
                    this.startFragRequested ||
                      (!this.mainDetails && n.live) ||
                      this.setStartPosition(s.details, o),
                    this.state !== Wr ||
                      this.waitForCdnTuneIn(n) ||
                      (this.state = Kr),
                    this.tick();
                } else
                  this.warn("Audio tracks were reset while loading level " + a);
              } else this.cachedTrackLoadedData = e;
            }),
            (r._handleFragmentLoadProgress = function (t) {
              var e,
                r = t.frag,
                i = t.part,
                n = t.payload,
                a = this.config,
                s = this.trackId,
                o = this.levels;
              if (o) {
                var l = o[s];
                if (l) {
                  var u = l.details;
                  if (!u)
                    return (
                      this.warn(
                        "Audio track details undefined on fragment load progress"
                      ),
                      void this.removeUnbufferedFrags(r.start)
                    );
                  var h = a.defaultAudioCodec || l.audioCodec || "mp4a.40.2",
                    d = this.transmuxer;
                  d ||
                    (d = this.transmuxer =
                      new hn(
                        this.hls,
                        ve,
                        this._handleTransmuxComplete.bind(this),
                        this._handleTransmuxerFlush.bind(this)
                      ));
                  var c = this.initPTS[r.cc],
                    f = null == (e = r.initSegment) ? void 0 : e.data;
                  if (void 0 !== c) {
                    var g = i ? i.index : -1,
                      v = -1 !== g,
                      m = new wr(
                        r.level,
                        r.sn,
                        r.stats.chunkCount,
                        n.byteLength,
                        g,
                        v
                      );
                    d.push(n, f, h, "", r, i, u.totalduration, !1, m, c);
                  } else
                    this.log(
                      "Unknown video PTS for cc " +
                        r.cc +
                        ", waiting for video PTS before demuxing audio frag " +
                        r.sn +
                        " of [" +
                        u.startSN +
                        " ," +
                        u.endSN +
                        "],track " +
                        s
                    ),
                      (this.waitingData = this.waitingData || {
                        frag: r,
                        part: i,
                        cache: new mn(),
                        complete: !1,
                      }).cache.push(new Uint8Array(n)),
                      (this.waitingVideoCC = this.videoTrackCC),
                      (this.state = Qr);
                } else
                  this.warn(
                    "Audio track is undefined on fragment load progress"
                  );
              } else
                this.warn(
                  "Audio tracks were reset while fragment load was in progress. Fragment " +
                    r.sn +
                    " of level " +
                    r.level +
                    " will not be buffered"
                );
            }),
            (r._handleFragmentLoadComplete = function (e) {
              this.waitingData
                ? (this.waitingData.complete = !0)
                : t.prototype._handleFragmentLoadComplete.call(this, e);
            }),
            (r.onBufferReset = function () {
              (this.mediaBuffer = this.videoBuffer = null),
                (this.loadedmetadata = !1);
            }),
            (r.onBufferCreated = function (t, e) {
              var r = e.tracks.audio;
              r && (this.mediaBuffer = r.buffer || null),
                e.tracks.video &&
                  (this.videoBuffer = e.tracks.video.buffer || null);
            }),
            (r.onFragBuffered = function (t, e) {
              var r = e.frag,
                n = e.part;
              if (r.type === ve)
                if (this.fragContextChanged(r))
                  this.warn(
                    "Fragment " +
                      r.sn +
                      (n ? " p: " + n.index : "") +
                      " of level " +
                      r.level +
                      " finished buffering, but was aborted. state: " +
                      this.state +
                      ", audioSwitch: " +
                      (this.switchingTrack ? this.switchingTrack.name : "false")
                  );
                else {
                  if ("initSegment" !== r.sn) {
                    this.fragPrevious = r;
                    var a = this.switchingTrack;
                    a &&
                      ((this.bufferedTrack = a),
                      (this.switchingTrack = null),
                      this.hls.trigger(S.AUDIO_TRACK_SWITCHED, i({}, a)));
                  }
                  this.fragBufferedComplete(r, n);
                }
              else if (!this.loadedmetadata && r.type === ge) {
                var s = this.videoBuffer || this.media;
                s && Ir.getBuffered(s).length && (this.loadedmetadata = !0);
              }
            }),
            (r.onError = function (e, r) {
              var i;
              if (r.fatal) this.state = zr;
              else
                switch (r.details) {
                  case R.FRAG_GAP:
                  case R.FRAG_PARSING_ERROR:
                  case R.FRAG_DECRYPT_ERROR:
                  case R.FRAG_LOAD_ERROR:
                  case R.FRAG_LOAD_TIMEOUT:
                  case R.KEY_LOAD_ERROR:
                  case R.KEY_LOAD_TIMEOUT:
                    this.onFragmentOrKeyLoadError(ve, r);
                    break;
                  case R.AUDIO_TRACK_LOAD_ERROR:
                  case R.AUDIO_TRACK_LOAD_TIMEOUT:
                  case R.LEVEL_PARSING_ERROR:
                    r.levelRetry ||
                      this.state !== Wr ||
                      (null == (i = r.context) ? void 0 : i.type) !== ce ||
                      (this.state = Kr);
                    break;
                  case R.BUFFER_FULL_ERROR:
                    if (!r.parent || "audio" !== r.parent) return;
                    this.reduceLengthAndFlushBuffer(r) &&
                      ((this.bufferedTrack = null),
                      t.prototype.flushMainBuffer.call(
                        this,
                        0,
                        Number.POSITIVE_INFINITY,
                        "audio"
                      ));
                    break;
                  case R.INTERNAL_EXCEPTION:
                    this.recoverWorkerError(r);
                }
            }),
            (r.onBufferFlushed = function (t, e) {
              e.type === O &&
                ((this.bufferFlushed = !0),
                this.state === Xr && (this.state = Kr));
            }),
            (r._handleTransmuxComplete = function (t) {
              var e,
                r = "audio",
                i = this.hls,
                n = t.remuxResult,
                a = t.chunkMeta,
                s = this.getCurrentContext(a);
              if (s) {
                var l = s.frag,
                  u = s.part,
                  h = s.level.details,
                  d = n.audio,
                  c = n.text,
                  f = n.id3,
                  g = n.initSegment;
                if (!this.fragContextChanged(l) && h) {
                  if (
                    ((this.state = jr),
                    this.switchingTrack &&
                      d &&
                      this.completeAudioSwitch(this.switchingTrack),
                    null != g && g.tracks)
                  ) {
                    var v = l.initSegment || l;
                    this._bufferInitSegment(g.tracks, v, a),
                      i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                        frag: v,
                        id: r,
                        tracks: g.tracks,
                      });
                  }
                  if (d) {
                    var m = d.startPTS,
                      p = d.endPTS,
                      y = d.startDTS,
                      T = d.endDTS;
                    u &&
                      (u.elementaryStreams[O] = {
                        startPTS: m,
                        endPTS: p,
                        startDTS: y,
                        endDTS: T,
                      }),
                      l.setElementaryStreamInfo(O, m, p, y, T),
                      this.bufferFragmentData(d, l, u, a);
                  }
                  if (null != f && null != (e = f.samples) && e.length) {
                    var E = o({ id: r, frag: l, details: h }, f);
                    i.trigger(S.FRAG_PARSING_METADATA, E);
                  }
                  if (c) {
                    var L = o({ id: r, frag: l, details: h }, c);
                    i.trigger(S.FRAG_PARSING_USERDATA, L);
                  }
                } else this.fragmentTracker.removeFragment(l);
              } else this.resetWhenMissingContext(a);
            }),
            (r._bufferInitSegment = function (t, e, r) {
              if (this.state === jr) {
                t.video && delete t.video;
                var i = t.audio;
                if (i) {
                  (i.levelCodec = i.codec),
                    (i.id = "audio"),
                    this.log(
                      "Init audio buffer, container:" +
                        i.container +
                        ", codecs[parsed]=[" +
                        i.codec +
                        "]"
                    ),
                    this.hls.trigger(S.BUFFER_CODECS, t);
                  var n = i.initSegment;
                  if (null != n && n.byteLength) {
                    var a = {
                      type: "audio",
                      frag: e,
                      part: null,
                      chunkMeta: r,
                      parent: e.type,
                      data: n,
                    };
                    this.hls.trigger(S.BUFFER_APPENDING, a);
                  }
                  this.tick();
                }
              }
            }),
            (r.loadFragment = function (e, r, i) {
              var n,
                a = this.fragmentTracker.getState(e);
              (this.fragCurrent = e),
                this.switchingTrack || a === fr || a === vr
                  ? "initSegment" === e.sn
                    ? this._loadInitSegment(e, r)
                    : null != (n = r.details) && n.live && !this.initPTS[e.cc]
                    ? (this.log(
                        "Waiting for video PTS in continuity counter " +
                          e.cc +
                          " of live stream before loading audio fragment " +
                          e.sn +
                          " of level " +
                          this.trackId
                      ),
                      (this.state = Qr))
                    : ((this.startFragRequested = !0),
                      t.prototype.loadFragment.call(this, e, r, i))
                  : this.clearTrackerIfNeeded(e);
            }),
            (r.completeAudioSwitch = function (e) {
              var r = this.hls,
                n = this.media,
                a = this.bufferedTrack,
                s = null == a ? void 0 : a.attrs,
                o = e.attrs;
              n &&
                s &&
                (s.CHANNELS !== o.CHANNELS ||
                  s.NAME !== o.NAME ||
                  s.LANGUAGE !== o.LANGUAGE) &&
                (this.log("Switching audio track : flushing all audio"),
                t.prototype.flushMainBuffer.call(
                  this,
                  0,
                  Number.POSITIVE_INFINITY,
                  "audio"
                )),
                (this.bufferedTrack = e),
                (this.switchingTrack = null),
                r.trigger(S.AUDIO_TRACK_SWITCHED, i({}, e));
            }),
            e
          );
        })(Jr),
        yn = (function (t) {
          function e(e) {
            var r;
            return (
              ((r =
                t.call(this, e, "[audio-track-controller]") || this).tracks =
                []),
              (r.groupId = null),
              (r.tracksInGroup = []),
              (r.trackId = -1),
              (r.currentTrack = null),
              (r.selectDefaultTrack = !0),
              r.registerListeners(),
              r
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.registerListeners = function () {
              var t = this.hls;
              t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this);
            }),
            (r.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this);
            }),
            (r.destroy = function () {
              this.unregisterListeners(),
                (this.tracks.length = 0),
                (this.tracksInGroup.length = 0),
                (this.currentTrack = null),
                t.prototype.destroy.call(this);
            }),
            (r.onManifestLoading = function () {
              (this.tracks = []),
                (this.groupId = null),
                (this.tracksInGroup = []),
                (this.trackId = -1),
                (this.currentTrack = null),
                (this.selectDefaultTrack = !0);
            }),
            (r.onManifestParsed = function (t, e) {
              this.tracks = e.audioTracks || [];
            }),
            (r.onAudioTrackLoaded = function (t, e) {
              var r = e.id,
                i = e.groupId,
                n = e.details,
                a = this.tracksInGroup[r];
              if (a && a.groupId === i) {
                var s = a.details;
                (a.details = e.details),
                  this.log(
                    "audio-track " +
                      r +
                      ' "' +
                      a.name +
                      '" lang:' +
                      a.lang +
                      " group:" +
                      i +
                      " loaded [" +
                      n.startSN +
                      "-" +
                      n.endSN +
                      "]"
                  ),
                  r === this.trackId && this.playlistLoaded(r, e, s);
              } else
                this.warn(
                  "Track with id:" +
                    r +
                    " and group:" +
                    i +
                    " not found in active group " +
                    a.groupId
                );
            }),
            (r.onLevelLoading = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.onLevelSwitching = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.switchLevel = function (t) {
              var e = this.hls.levels[t];
              if (null != e && e.audioGroupIds) {
                var r = e.audioGroupIds[e.urlId];
                if (this.groupId !== r) {
                  this.groupId = r || null;
                  var i = this.tracks.filter(function (t) {
                    return !r || t.groupId === r;
                  });
                  this.selectDefaultTrack &&
                    !i.some(function (t) {
                      return t.default;
                    }) &&
                    (this.selectDefaultTrack = !1),
                    (this.tracksInGroup = i);
                  var n = { audioTracks: i };
                  this.log(
                    "Updating audio tracks, " +
                      i.length +
                      " track(s) found in group:" +
                      r
                  ),
                    this.hls.trigger(S.AUDIO_TRACKS_UPDATED, n),
                    this.selectInitialTrack();
                } else
                  this.shouldReloadPlaylist(this.currentTrack) &&
                    this.setAudioTrack(this.trackId);
              }
            }),
            (r.onError = function (t, e) {
              !e.fatal &&
                e.context &&
                e.context.type === ce &&
                e.context.id === this.trackId &&
                e.context.groupId === this.groupId &&
                ((this.requestScheduled = -1), this.checkRetry(e));
            }),
            (r.setAudioTrack = function (t) {
              var e = this.tracksInGroup;
              if (t < 0 || t >= e.length)
                this.warn("Invalid id passed to audio-track controller");
              else {
                this.clearTimer();
                var r = this.currentTrack;
                e[this.trackId];
                var n = e[t],
                  a = n.groupId,
                  s = n.name;
                if (
                  (this.log(
                    "Switching to audio-track " +
                      t +
                      ' "' +
                      s +
                      '" lang:' +
                      n.lang +
                      " group:" +
                      a
                  ),
                  (this.trackId = t),
                  (this.currentTrack = n),
                  (this.selectDefaultTrack = !1),
                  this.hls.trigger(S.AUDIO_TRACK_SWITCHING, i({}, n)),
                  !n.details || n.details.live)
                ) {
                  var o = this.switchParams(
                    n.url,
                    null == r ? void 0 : r.details
                  );
                  this.loadPlaylist(o);
                }
              }
            }),
            (r.selectInitialTrack = function () {
              var t = this.tracksInGroup,
                e =
                  this.findTrackId(this.currentTrack) | this.findTrackId(null);
              if (-1 !== e) this.setAudioTrack(e);
              else {
                var r = new Error(
                  "No track found for running audio group-ID: " +
                    this.groupId +
                    " track count: " +
                    t.length
                );
                this.warn(r.message),
                  this.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: R.AUDIO_TRACK_LOAD_ERROR,
                    fatal: !0,
                    error: r,
                  });
              }
            }),
            (r.findTrackId = function (t) {
              for (var e = this.tracksInGroup, r = 0; r < e.length; r++) {
                var i = e[r];
                if (!this.selectDefaultTrack || i.default) {
                  if (
                    !t ||
                    (void 0 !== t.attrs["STABLE-RENDITION-ID"] &&
                      t.attrs["STABLE-RENDITION-ID"] ===
                        i.attrs["STABLE-RENDITION-ID"])
                  )
                    return i.id;
                  if (t.name === i.name && t.lang === i.lang) return i.id;
                }
              }
              return -1;
            }),
            (r.loadPlaylist = function (e) {
              t.prototype.loadPlaylist.call(this);
              var r = this.tracksInGroup[this.trackId];
              if (this.shouldLoadPlaylist(r)) {
                var i = r.id,
                  n = r.groupId,
                  a = r.url;
                if (e)
                  try {
                    a = e.addDirectives(a);
                  } catch (t) {
                    this.warn(
                      "Could not construct new URL with HLS Delivery Directives: " +
                        t
                    );
                  }
                this.log(
                  "loading audio-track playlist " +
                    i +
                    ' "' +
                    r.name +
                    '" lang:' +
                    r.lang +
                    " group:" +
                    n
                ),
                  this.clearTimer(),
                  this.hls.trigger(S.AUDIO_TRACK_LOADING, {
                    url: a,
                    id: i,
                    groupId: n,
                    deliveryDirectives: e || null,
                  });
              }
            }),
            a(e, [
              {
                key: "audioTracks",
                get: function () {
                  return this.tracksInGroup;
                },
              },
              {
                key: "audioTrack",
                get: function () {
                  return this.trackId;
                },
                set: function (t) {
                  (this.selectDefaultTrack = !1), this.setAudioTrack(t);
                },
              },
            ]),
            e
          );
        })(ur);
      function Tn(t, e) {
        if (t.length !== e.length) return !1;
        for (var r = 0; r < t.length; r++)
          if (!En(t[r].attrs, e[r].attrs)) return !1;
        return !0;
      }
      function En(t, e) {
        var r = t["STABLE-RENDITION-ID"];
        return r
          ? r === e["STABLE-RENDITION-ID"]
          : ![
              "LANGUAGE",
              "NAME",
              "CHARACTERISTICS",
              "AUTOSELECT",
              "DEFAULT",
              "FORCED",
            ].some(function (r) {
              return t[r] !== e[r];
            });
      }
      var Sn = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n =
                t.call(this, e, r, i, "[subtitle-stream-controller]", me) ||
                this).levels = []),
              (n.currentTrackId = -1),
              (n.tracksBuffered = []),
              (n.mainDetails = null),
              n._registerListeners(),
              n
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.onHandlerDestroying = function () {
              this._unregisterListeners(), (this.mainDetails = null);
            }),
            (r._registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(
                  S.SUBTITLE_TRACKS_UPDATED,
                  this.onSubtitleTracksUpdated,
                  this
                ),
                t.on(S.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(
                  S.SUBTITLE_FRAG_PROCESSED,
                  this.onSubtitleFragProcessed,
                  this
                ),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r._unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(
                  S.SUBTITLE_TRACKS_UPDATED,
                  this.onSubtitleTracksUpdated,
                  this
                ),
                t.off(
                  S.SUBTITLE_TRACK_SWITCH,
                  this.onSubtitleTrackSwitch,
                  this
                ),
                t.off(
                  S.SUBTITLE_TRACK_LOADED,
                  this.onSubtitleTrackLoaded,
                  this
                ),
                t.off(
                  S.SUBTITLE_FRAG_PROCESSED,
                  this.onSubtitleFragProcessed,
                  this
                ),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this);
            }),
            (r.startLoad = function (t) {
              this.stopLoad(),
                (this.state = Kr),
                this.setInterval(500),
                (this.nextLoadPosition =
                  this.startPosition =
                  this.lastCurrentTime =
                    t),
                this.tick();
            }),
            (r.onManifestLoading = function () {
              (this.mainDetails = null),
                this.fragmentTracker.removeAllFragments();
            }),
            (r.onMediaDetaching = function () {
              (this.tracksBuffered = []),
                t.prototype.onMediaDetaching.call(this);
            }),
            (r.onLevelLoaded = function (t, e) {
              this.mainDetails = e.details;
            }),
            (r.onSubtitleFragProcessed = function (t, e) {
              var r = e.frag,
                i = e.success;
              if (((this.fragPrevious = r), (this.state = Kr), i)) {
                var n = this.tracksBuffered[this.currentTrackId];
                if (n) {
                  for (var a, s = r.start, o = 0; o < n.length; o++)
                    if (s >= n[o].start && s <= n[o].end) {
                      a = n[o];
                      break;
                    }
                  var l = r.start + r.duration;
                  a ? (a.end = l) : ((a = { start: s, end: l }), n.push(a)),
                    this.fragmentTracker.fragBuffered(r);
                }
              }
            }),
            (r.onBufferFlushing = function (t, e) {
              var r = e.startOffset,
                i = e.endOffset;
              if (0 === r && i !== Number.POSITIVE_INFINITY) {
                var n = i - 1;
                if (n <= 0) return;
                (e.endOffsetSubtitles = Math.max(0, n)),
                  this.tracksBuffered.forEach(function (t) {
                    for (var e = 0; e < t.length; )
                      if (t[e].end <= n) t.shift();
                      else {
                        if (!(t[e].start < n)) break;
                        (t[e].start = n), e++;
                      }
                  }),
                  this.fragmentTracker.removeFragmentsInRange(r, n, me);
              }
            }),
            (r.onFragBuffered = function (t, e) {
              var r;
              this.loadedmetadata ||
                e.frag.type !== ge ||
                (null != (r = this.media) &&
                  r.buffered.length &&
                  (this.loadedmetadata = !0));
            }),
            (r.onError = function (t, e) {
              var r = e.frag;
              (null == r ? void 0 : r.type) === me &&
                (this.fragCurrent && this.fragCurrent.abortRequests(),
                this.state !== Gr && (this.state = Kr));
            }),
            (r.onSubtitleTracksUpdated = function (t, e) {
              var r = this,
                i = e.subtitleTracks;
              Tn(this.levels, i)
                ? (this.levels = i.map(function (t) {
                    return new Ne(t);
                  }))
                : ((this.tracksBuffered = []),
                  (this.levels = i.map(function (t) {
                    var e = new Ne(t);
                    return (r.tracksBuffered[e.id] = []), e;
                  })),
                  this.fragmentTracker.removeFragmentsInRange(
                    0,
                    Number.POSITIVE_INFINITY,
                    me
                  ),
                  (this.fragPrevious = null),
                  (this.mediaBuffer = null));
            }),
            (r.onSubtitleTrackSwitch = function (t, e) {
              if (
                ((this.currentTrackId = e.id),
                this.levels.length && -1 !== this.currentTrackId)
              ) {
                var r = this.levels[this.currentTrackId];
                null != r && r.details
                  ? (this.mediaBuffer = this.mediaBufferTimeRanges)
                  : (this.mediaBuffer = null),
                  r && this.setInterval(500);
              } else this.clearInterval();
            }),
            (r.onSubtitleTrackLoaded = function (t, e) {
              var r,
                i = e.details,
                n = e.id,
                a = this.currentTrackId,
                s = this.levels;
              if (s.length) {
                var o = s[a];
                if (!(n >= s.length || n !== a) && o) {
                  this.mediaBuffer = this.mediaBufferTimeRanges;
                  var l = 0;
                  if (i.live || (null != (r = o.details) && r.live)) {
                    var u = this.mainDetails;
                    if (i.deltaUpdateFailed || !u) return;
                    var h = u.fragments[0];
                    o.details
                      ? 0 === (l = this.alignPlaylists(i, o.details)) &&
                        h &&
                        He(i, (l = h.start))
                      : i.hasProgramDateTime && u.hasProgramDateTime
                      ? (Fr(i, u), (l = i.fragments[0].start))
                      : h && He(i, (l = h.start));
                  }
                  (o.details = i),
                    (this.levelLastLoaded = n),
                    this.startFragRequested ||
                      (!this.mainDetails && i.live) ||
                      this.setStartPosition(o.details, l),
                    this.tick(),
                    i.live &&
                      !this.fragCurrent &&
                      this.media &&
                      this.state === Kr &&
                      ($e(null, i.fragments, this.media.currentTime, 0) ||
                        (this.warn(
                          "Subtitle playlist not aligned with playback"
                        ),
                        (o.details = void 0)));
                }
              }
            }),
            (r._handleFragmentLoadComplete = function (t) {
              var e = this,
                r = t.frag,
                i = t.payload,
                n = r.decryptdata,
                a = this.hls;
              if (
                !this.fragContextChanged(r) &&
                i &&
                i.byteLength > 0 &&
                n &&
                n.key &&
                n.iv &&
                "AES-128" === n.method
              ) {
                var s = performance.now();
                this.decrypter
                  .decrypt(new Uint8Array(i), n.key.buffer, n.iv.buffer)
                  .catch(function (t) {
                    throw (
                      (a.trigger(S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: R.FRAG_DECRYPT_ERROR,
                        fatal: !1,
                        error: t,
                        reason: t.message,
                        frag: r,
                      }),
                      t)
                    );
                  })
                  .then(function (t) {
                    var e = performance.now();
                    a.trigger(S.FRAG_DECRYPTED, {
                      frag: r,
                      payload: t,
                      stats: { tstart: s, tdecrypt: e },
                    });
                  })
                  .catch(function (t) {
                    e.warn(t.name + ": " + t.message), (e.state = Kr);
                  });
              }
            }),
            (r.doTick = function () {
              if (this.media) {
                if (this.state === Kr) {
                  var t = this.currentTrackId,
                    e = this.levels,
                    r = e[t];
                  if (!e.length || !r || !r.details) return;
                  var i = this.config,
                    n = this.getLoadPosition(),
                    a = Ir.bufferedInfo(
                      this.tracksBuffered[this.currentTrackId] || [],
                      n,
                      i.maxBufferHole
                    ),
                    s = a.end,
                    o = a.len,
                    l = this.getFwdBufferInfo(this.media, ge),
                    u = r.details;
                  if (
                    o >
                    this.getMaxBufferLength(null == l ? void 0 : l.len) +
                      u.levelTargetDuration
                  )
                    return;
                  var h = u.fragments,
                    d = h.length,
                    c = u.edge,
                    f = null,
                    g = this.fragPrevious;
                  if (s < c) {
                    var v = i.maxFragLookUpTolerance,
                      m = s > c - v ? 0 : v;
                    !(f = $e(g, h, Math.max(h[0].start, s), m)) &&
                      g &&
                      g.start < h[0].start &&
                      (f = h[0]);
                  } else f = h[d - 1];
                  if (!f) return;
                  if (
                    "initSegment" !== (f = this.mapToInitFragWhenRequired(f)).sn
                  ) {
                    var p = h[f.sn - u.startSN - 1];
                    p &&
                      p.cc === f.cc &&
                      this.fragmentTracker.getState(p) === fr &&
                      (f = p);
                  }
                  this.fragmentTracker.getState(f) === fr &&
                    this.loadFragment(f, r, s);
                }
              } else this.state = Kr;
            }),
            (r.getMaxBufferLength = function (e) {
              var r = t.prototype.getMaxBufferLength.call(this);
              return e ? Math.max(r, e) : r;
            }),
            (r.loadFragment = function (e, r, i) {
              (this.fragCurrent = e),
                "initSegment" === e.sn
                  ? this._loadInitSegment(e, r)
                  : ((this.startFragRequested = !0),
                    t.prototype.loadFragment.call(this, e, r, i));
            }),
            a(e, [
              {
                key: "mediaBufferTimeRanges",
                get: function () {
                  return new Ln(this.tracksBuffered[this.currentTrackId] || []);
                },
              },
            ]),
            e
          );
        })(Jr),
        Ln = function (t) {
          this.buffered = void 0;
          var e = function (e, r, i) {
            if ((r >>>= 0) > i - 1)
              throw new DOMException(
                "Failed to execute '" +
                  e +
                  "' on 'TimeRanges': The index provided (" +
                  r +
                  ") is greater than the maximum bound (" +
                  i +
                  ")"
              );
            return t[r][e];
          };
          this.buffered = {
            get length() {
              return t.length;
            },
            end: function (r) {
              return e("end", r, t.length);
            },
            start: function (r) {
              return e("start", r, t.length);
            },
          };
        },
        Rn = (function (t) {
          function e(e) {
            var r;
            return (
              ((r =
                t.call(this, e, "[subtitle-track-controller]") || this).media =
                null),
              (r.tracks = []),
              (r.groupId = null),
              (r.tracksInGroup = []),
              (r.trackId = -1),
              (r.selectDefaultTrack = !0),
              (r.queuedDefaultTrack = -1),
              (r.trackChangeListener = function () {
                return r.onTextTracksChanged();
              }),
              (r.asyncPollTrackChange = function () {
                return r.pollTrackChange(0);
              }),
              (r.useTextTrackPolling = !1),
              (r.subtitlePollingInterval = -1),
              (r._subtitleDisplay = !0),
              r.registerListeners(),
              r
            );
          }
          l(e, t);
          var r = e.prototype;
          return (
            (r.destroy = function () {
              this.unregisterListeners(),
                (this.tracks.length = 0),
                (this.tracksInGroup.length = 0),
                (this.trackChangeListener = this.asyncPollTrackChange = null),
                t.prototype.destroy.call(this);
            }),
            (r.registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(S.ERROR, this.onError, this);
            }),
            (r.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(
                  S.SUBTITLE_TRACK_LOADED,
                  this.onSubtitleTrackLoaded,
                  this
                ),
                t.off(S.ERROR, this.onError, this);
            }),
            (r.onMediaAttached = function (t, e) {
              (this.media = e.media),
                this.media &&
                  (this.queuedDefaultTrack > -1 &&
                    ((this.subtitleTrack = this.queuedDefaultTrack),
                    (this.queuedDefaultTrack = -1)),
                  (this.useTextTrackPolling = !(
                    this.media.textTracks && "onchange" in this.media.textTracks
                  )),
                  this.useTextTrackPolling
                    ? this.pollTrackChange(500)
                    : this.media.textTracks.addEventListener(
                        "change",
                        this.asyncPollTrackChange
                      ));
            }),
            (r.pollTrackChange = function (t) {
              self.clearInterval(this.subtitlePollingInterval),
                (this.subtitlePollingInterval = self.setInterval(
                  this.trackChangeListener,
                  t
                ));
            }),
            (r.onMediaDetaching = function () {
              this.media &&
                (self.clearInterval(this.subtitlePollingInterval),
                this.useTextTrackPolling ||
                  this.media.textTracks.removeEventListener(
                    "change",
                    this.asyncPollTrackChange
                  ),
                this.trackId > -1 && (this.queuedDefaultTrack = this.trackId),
                An(this.media.textTracks).forEach(function (t) {
                  Le(t);
                }),
                (this.subtitleTrack = -1),
                (this.media = null));
            }),
            (r.onManifestLoading = function () {
              (this.tracks = []),
                (this.groupId = null),
                (this.tracksInGroup = []),
                (this.trackId = -1),
                (this.selectDefaultTrack = !0);
            }),
            (r.onManifestParsed = function (t, e) {
              this.tracks = e.subtitleTracks;
            }),
            (r.onSubtitleTrackLoaded = function (t, e) {
              var r = e.id,
                i = e.details,
                n = this.trackId,
                a = this.tracksInGroup[n];
              if (a) {
                var s = a.details;
                (a.details = e.details),
                  this.log(
                    "subtitle track " +
                      r +
                      " loaded [" +
                      i.startSN +
                      "-" +
                      i.endSN +
                      "]"
                  ),
                  r === this.trackId && this.playlistLoaded(r, e, s);
              } else this.warn("Invalid subtitle track id " + r);
            }),
            (r.onLevelLoading = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.onLevelSwitching = function (t, e) {
              this.switchLevel(e.level);
            }),
            (r.switchLevel = function (t) {
              var e = this.hls.levels[t];
              if (null != e && e.textGroupIds) {
                var r = e.textGroupIds[e.urlId],
                  i = this.tracksInGroup
                    ? this.tracksInGroup[this.trackId]
                    : void 0;
                if (this.groupId !== r) {
                  var n = this.tracks.filter(function (t) {
                    return !r || t.groupId === r;
                  });
                  this.tracksInGroup = n;
                  var a =
                    this.findTrackId(null == i ? void 0 : i.name) ||
                    this.findTrackId();
                  this.groupId = r || null;
                  var s = { subtitleTracks: n };
                  this.log(
                    "Updating subtitle tracks, " +
                      n.length +
                      ' track(s) found in "' +
                      r +
                      '" group-id'
                  ),
                    this.hls.trigger(S.SUBTITLE_TRACKS_UPDATED, s),
                    -1 !== a && this.setSubtitleTrack(a, i);
                } else
                  this.shouldReloadPlaylist(i) &&
                    this.setSubtitleTrack(this.trackId, i);
              }
            }),
            (r.findTrackId = function (t) {
              for (var e = this.tracksInGroup, r = 0; r < e.length; r++) {
                var i = e[r];
                if (
                  (!this.selectDefaultTrack || i.default) &&
                  (!t || t === i.name)
                )
                  return i.id;
              }
              return -1;
            }),
            (r.onError = function (t, e) {
              !e.fatal &&
                e.context &&
                e.context.type === fe &&
                e.context.id === this.trackId &&
                e.context.groupId === this.groupId &&
                this.checkRetry(e);
            }),
            (r.loadPlaylist = function (e) {
              t.prototype.loadPlaylist.call(this);
              var r = this.tracksInGroup[this.trackId];
              if (this.shouldLoadPlaylist(r)) {
                var i = r.id,
                  n = r.groupId,
                  a = r.url;
                if (e)
                  try {
                    a = e.addDirectives(a);
                  } catch (t) {
                    this.warn(
                      "Could not construct new URL with HLS Delivery Directives: " +
                        t
                    );
                  }
                this.log("Loading subtitle playlist for id " + i),
                  this.hls.trigger(S.SUBTITLE_TRACK_LOADING, {
                    url: a,
                    id: i,
                    groupId: n,
                    deliveryDirectives: e || null,
                  });
              }
            }),
            (r.toggleTrackModes = function (t) {
              var e = this,
                r = this.media,
                i = this.trackId;
              if (r) {
                var n = An(r.textTracks),
                  a = n.filter(function (t) {
                    return t.groupId === e.groupId;
                  });
                if (-1 === t)
                  [].slice.call(n).forEach(function (t) {
                    t.mode = "disabled";
                  });
                else {
                  var s = a[i];
                  s && (s.mode = "disabled");
                }
                var o = a[t];
                o && (o.mode = this.subtitleDisplay ? "showing" : "hidden");
              }
            }),
            (r.setSubtitleTrack = function (t, e) {
              var r,
                i = this.tracksInGroup;
              if (this.media) {
                if (
                  (this.trackId !== t && this.toggleTrackModes(t),
                  !(
                    (this.trackId === t &&
                      (-1 === t || (null != (r = i[t]) && r.details))) ||
                    t < -1 ||
                    t >= i.length
                  ))
                ) {
                  this.clearTimer();
                  var n = i[t];
                  if (
                    (this.log(
                      "Switching to subtitle-track " +
                        t +
                        (n
                          ? ' "' +
                            n.name +
                            '" lang:' +
                            n.lang +
                            " group:" +
                            n.groupId
                          : "")
                    ),
                    (this.trackId = t),
                    n)
                  ) {
                    var a = n.id,
                      s = n.groupId,
                      o = void 0 === s ? "" : s,
                      l = n.name,
                      u = n.type,
                      h = n.url;
                    this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, {
                      id: a,
                      groupId: o,
                      name: l,
                      type: u,
                      url: h,
                    });
                    var d = this.switchParams(
                      n.url,
                      null == e ? void 0 : e.details
                    );
                    this.loadPlaylist(d);
                  } else this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, { id: t });
                }
              } else this.queuedDefaultTrack = t;
            }),
            (r.onTextTracksChanged = function () {
              if (
                (this.useTextTrackPolling ||
                  self.clearInterval(this.subtitlePollingInterval),
                this.media && this.hls.config.renderTextTracksNatively)
              ) {
                for (
                  var t = -1, e = An(this.media.textTracks), r = 0;
                  r < e.length;
                  r++
                )
                  if ("hidden" === e[r].mode) t = r;
                  else if ("showing" === e[r].mode) {
                    t = r;
                    break;
                  }
                this.subtitleTrack !== t && (this.subtitleTrack = t);
              }
            }),
            a(e, [
              {
                key: "subtitleDisplay",
                get: function () {
                  return this._subtitleDisplay;
                },
                set: function (t) {
                  (this._subtitleDisplay = t),
                    this.trackId > -1 && this.toggleTrackModes(this.trackId);
                },
              },
              {
                key: "subtitleTracks",
                get: function () {
                  return this.tracksInGroup;
                },
              },
              {
                key: "subtitleTrack",
                get: function () {
                  return this.trackId;
                },
                set: function (t) {
                  this.selectDefaultTrack = !1;
                  var e = this.tracksInGroup
                    ? this.tracksInGroup[this.trackId]
                    : void 0;
                  this.setSubtitleTrack(t, e);
                },
              },
            ]),
            e
          );
        })(ur);
      function An(t) {
        for (var e = [], r = 0; r < t.length; r++) {
          var i = t[r];
          ("subtitles" !== i.kind && "captions" !== i.kind) ||
            !i.label ||
            e.push(t[r]);
        }
        return e;
      }
      var kn = (function () {
          function t(t) {
            (this.buffers = void 0),
              (this.queues = { video: [], audio: [], audiovideo: [] }),
              (this.buffers = t);
          }
          var e = t.prototype;
          return (
            (e.append = function (t, e) {
              var r = this.queues[e];
              r.push(t),
                1 === r.length && this.buffers[e] && this.executeNext(e);
            }),
            (e.insertAbort = function (t, e) {
              this.queues[e].unshift(t), this.executeNext(e);
            }),
            (e.appendBlocker = function (t) {
              var e,
                r = new Promise(function (t) {
                  e = t;
                }),
                i = {
                  execute: e,
                  onStart: function () {},
                  onComplete: function () {},
                  onError: function () {},
                };
              return this.append(i, t), r;
            }),
            (e.executeNext = function (t) {
              var e = this.buffers,
                r = this.queues,
                i = e[t],
                n = r[t];
              if (n.length) {
                var a = n[0];
                try {
                  a.execute();
                } catch (e) {
                  w.warn(
                    "[buffer-operation-queue]: Unhandled exception executing the current operation"
                  ),
                    a.onError(e),
                    (null != i && i.updating) ||
                      (n.shift(), this.executeNext(t));
                }
              }
            }),
            (e.shiftAndExecuteNext = function (t) {
              this.queues[t].shift(), this.executeNext(t);
            }),
            (e.current = function (t) {
              return this.queues[t][0];
            }),
            t
          );
        })(),
        bn = qt(),
        Dn = /([ha]vc.)(?:\.[^.,]+)+/,
        In = (function () {
          function t(t) {
            var e = this;
            (this.details = null),
              (this._objectUrl = null),
              (this.operationQueue = void 0),
              (this.listeners = void 0),
              (this.hls = void 0),
              (this.bufferCodecEventsExpected = 0),
              (this._bufferCodecEventsTotal = 0),
              (this.media = null),
              (this.mediaSource = null),
              (this.lastMpegAudioChunk = null),
              (this.appendError = 0),
              (this.tracks = {}),
              (this.pendingTracks = {}),
              (this.sourceBuffer = void 0),
              (this._onMediaSourceOpen = function () {
                var t = e.media,
                  r = e.mediaSource;
                w.log("[buffer-controller]: Media source opened"),
                  t &&
                    (t.removeEventListener("emptied", e._onMediaEmptied),
                    e.updateMediaElementDuration(),
                    e.hls.trigger(S.MEDIA_ATTACHED, { media: t })),
                  r &&
                    r.removeEventListener("sourceopen", e._onMediaSourceOpen),
                  e.checkPendingTracks();
              }),
              (this._onMediaSourceClose = function () {
                w.log("[buffer-controller]: Media source closed");
              }),
              (this._onMediaSourceEnded = function () {
                w.log("[buffer-controller]: Media source ended");
              }),
              (this._onMediaEmptied = function () {
                var t = e.media,
                  r = e._objectUrl;
                t &&
                  t.src !== r &&
                  w.error(
                    "Media element src was set while attaching MediaSource (" +
                      r +
                      " > " +
                      t.src +
                      ")"
                  );
              }),
              (this.hls = t),
              this._initSourceBuffer(),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.hasSourceTypes = function () {
              return (
                this.getSourceBufferTypes().length > 0 ||
                Object.keys(this.pendingTracks).length > 0
              );
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                (this.details = null),
                (this.lastMpegAudioChunk = null);
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.BUFFER_EOS, this.onBufferEos, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.on(S.FRAG_PARSED, this.onFragParsed, this),
                t.on(S.FRAG_CHANGED, this.onFragChanged, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.BUFFER_EOS, this.onBufferEos, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.off(S.FRAG_PARSED, this.onFragParsed, this),
                t.off(S.FRAG_CHANGED, this.onFragChanged, this);
            }),
            (e._initSourceBuffer = function () {
              (this.sourceBuffer = {}),
                (this.operationQueue = new kn(this.sourceBuffer)),
                (this.listeners = { audio: [], video: [], audiovideo: [] }),
                (this.lastMpegAudioChunk = null);
            }),
            (e.onManifestLoading = function () {
              (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal =
                0),
                (this.details = null);
            }),
            (e.onManifestParsed = function (t, e) {
              var r = 2;
              ((e.audio && !e.video) || !e.altAudio) && (r = 1),
                (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal =
                  r),
                w.log(
                  this.bufferCodecEventsExpected +
                    " bufferCodec event(s) expected"
                );
            }),
            (e.onMediaAttaching = function (t, e) {
              var r = (this.media = e.media);
              if (r && bn) {
                var i = (this.mediaSource = new bn());
                i.addEventListener("sourceopen", this._onMediaSourceOpen),
                  i.addEventListener("sourceended", this._onMediaSourceEnded),
                  i.addEventListener("sourceclose", this._onMediaSourceClose),
                  (r.src = self.URL.createObjectURL(i)),
                  (this._objectUrl = r.src),
                  r.addEventListener("emptied", this._onMediaEmptied);
              }
            }),
            (e.onMediaDetaching = function () {
              var t = this.media,
                e = this.mediaSource,
                r = this._objectUrl;
              if (e) {
                if (
                  (w.log("[buffer-controller]: media source detaching"),
                  "open" === e.readyState)
                )
                  try {
                    e.endOfStream();
                  } catch (t) {
                    w.warn(
                      "[buffer-controller]: onMediaDetaching: " +
                        t.message +
                        " while calling endOfStream"
                    );
                  }
                this.onBufferReset(),
                  e.removeEventListener("sourceopen", this._onMediaSourceOpen),
                  e.removeEventListener(
                    "sourceended",
                    this._onMediaSourceEnded
                  ),
                  e.removeEventListener(
                    "sourceclose",
                    this._onMediaSourceClose
                  ),
                  t &&
                    (t.removeEventListener("emptied", this._onMediaEmptied),
                    r && self.URL.revokeObjectURL(r),
                    t.src === r
                      ? (t.removeAttribute("src"), t.load())
                      : w.warn(
                          "[buffer-controller]: media.src was changed by a third party - skip cleanup"
                        )),
                  (this.mediaSource = null),
                  (this.media = null),
                  (this._objectUrl = null),
                  (this.bufferCodecEventsExpected =
                    this._bufferCodecEventsTotal),
                  (this.pendingTracks = {}),
                  (this.tracks = {});
              }
              this.hls.trigger(S.MEDIA_DETACHED, void 0);
            }),
            (e.onBufferReset = function () {
              var t = this;
              this.getSourceBufferTypes().forEach(function (e) {
                var r = t.sourceBuffer[e];
                try {
                  r &&
                    (t.removeBufferListeners(e),
                    t.mediaSource && t.mediaSource.removeSourceBuffer(r),
                    (t.sourceBuffer[e] = void 0));
                } catch (t) {
                  w.warn(
                    "[buffer-controller]: Failed to reset the " + e + " buffer",
                    t
                  );
                }
              }),
                this._initSourceBuffer();
            }),
            (e.onBufferCodecs = function (t, e) {
              var r = this,
                i = this.getSourceBufferTypes().length;
              Object.keys(e).forEach(function (t) {
                if (i) {
                  var n = r.tracks[t];
                  if (n && "function" == typeof n.buffer.changeType) {
                    var a = e[t],
                      s = a.id,
                      o = a.codec,
                      l = a.levelCodec,
                      u = a.container,
                      h = a.metadata,
                      d = (n.levelCodec || n.codec).replace(Dn, "$1"),
                      c = (l || o).replace(Dn, "$1");
                    if (d !== c) {
                      var f = u + ";codecs=" + (l || o);
                      r.appendChangeType(t, f),
                        w.log(
                          "[buffer-controller]: switching codec " +
                            d +
                            " to " +
                            c
                        ),
                        (r.tracks[t] = {
                          buffer: n.buffer,
                          codec: o,
                          container: u,
                          levelCodec: l,
                          metadata: h,
                          id: s,
                        });
                    }
                  }
                } else r.pendingTracks[t] = e[t];
              }),
                i ||
                  ((this.bufferCodecEventsExpected = Math.max(
                    this.bufferCodecEventsExpected - 1,
                    0
                  )),
                  this.mediaSource &&
                    "open" === this.mediaSource.readyState &&
                    this.checkPendingTracks());
            }),
            (e.appendChangeType = function (t, e) {
              var r = this,
                i = this.operationQueue,
                n = {
                  execute: function () {
                    var n = r.sourceBuffer[t];
                    n &&
                      (w.log(
                        "[buffer-controller]: changing " +
                          t +
                          " sourceBuffer type to " +
                          e
                      ),
                      n.changeType(e)),
                      i.shiftAndExecuteNext(t);
                  },
                  onStart: function () {},
                  onComplete: function () {},
                  onError: function (e) {
                    w.warn(
                      "[buffer-controller]: Failed to change " +
                        t +
                        " SourceBuffer type",
                      e
                    );
                  },
                };
              i.append(n, t);
            }),
            (e.onBufferAppending = function (t, e) {
              var r = this,
                i = this.hls,
                n = this.operationQueue,
                a = this.tracks,
                s = e.data,
                o = e.type,
                l = e.frag,
                u = e.part,
                h = e.chunkMeta,
                d = h.buffering[o],
                c = self.performance.now();
              d.start = c;
              var f = l.stats.buffering,
                g = u ? u.stats.buffering : null;
              0 === f.start && (f.start = c),
                g && 0 === g.start && (g.start = c);
              var v = a.audio,
                m = !1;
              "audio" === o &&
                "audio/mpeg" === (null == v ? void 0 : v.container) &&
                ((m =
                  !this.lastMpegAudioChunk ||
                  1 === h.id ||
                  this.lastMpegAudioChunk.sn !== h.sn),
                (this.lastMpegAudioChunk = h));
              var p = l.start,
                y = {
                  execute: function () {
                    if (((d.executeStart = self.performance.now()), m)) {
                      var t = r.sourceBuffer[o];
                      if (t) {
                        var e = p - t.timestampOffset;
                        Math.abs(e) >= 0.1 &&
                          (w.log(
                            "[buffer-controller]: Updating audio SourceBuffer timestampOffset to " +
                              p +
                              " (delta: " +
                              e +
                              ") sn: " +
                              l.sn +
                              ")"
                          ),
                          (t.timestampOffset = p));
                      }
                    }
                    r.appendExecutor(s, o);
                  },
                  onStart: function () {},
                  onComplete: function () {
                    var t = self.performance.now();
                    (d.executeEnd = d.end = t),
                      0 === f.first && (f.first = t),
                      g && 0 === g.first && (g.first = t);
                    var e = r.sourceBuffer,
                      i = {};
                    for (var n in e) i[n] = Ir.getBuffered(e[n]);
                    (r.appendError = 0),
                      r.hls.trigger(S.BUFFER_APPENDED, {
                        type: o,
                        frag: l,
                        part: u,
                        chunkMeta: h,
                        parent: l.type,
                        timeRanges: i,
                      });
                  },
                  onError: function (t) {
                    w.error(
                      "[buffer-controller]: Error encountered while trying to append to the " +
                        o +
                        " SourceBuffer",
                      t
                    );
                    var e = {
                      type: L.MEDIA_ERROR,
                      parent: l.type,
                      details: R.BUFFER_APPEND_ERROR,
                      frag: l,
                      part: u,
                      chunkMeta: h,
                      error: t,
                      err: t,
                      fatal: !1,
                    };
                    t.code === DOMException.QUOTA_EXCEEDED_ERR
                      ? (e.details = R.BUFFER_FULL_ERROR)
                      : (r.appendError++,
                        (e.details = R.BUFFER_APPEND_ERROR),
                        r.appendError > i.config.appendErrorMaxRetry &&
                          (w.error(
                            "[buffer-controller]: Failed " +
                              i.config.appendErrorMaxRetry +
                              " times to append segment in sourceBuffer"
                          ),
                          (e.fatal = !0))),
                      i.trigger(S.ERROR, e);
                  },
                };
              n.append(y, o);
            }),
            (e.onBufferFlushing = function (t, e) {
              var r = this,
                i = this.operationQueue,
                n = function (t) {
                  return {
                    execute: r.removeExecutor.bind(
                      r,
                      t,
                      e.startOffset,
                      e.endOffset
                    ),
                    onStart: function () {},
                    onComplete: function () {
                      r.hls.trigger(S.BUFFER_FLUSHED, { type: t });
                    },
                    onError: function (e) {
                      w.warn(
                        "[buffer-controller]: Failed to remove from " +
                          t +
                          " SourceBuffer",
                        e
                      );
                    },
                  };
                };
              e.type
                ? i.append(n(e.type), e.type)
                : this.getSourceBufferTypes().forEach(function (t) {
                    i.append(n(t), t);
                  });
            }),
            (e.onFragParsed = function (t, e) {
              var r = this,
                i = e.frag,
                n = e.part,
                a = [],
                s = n ? n.elementaryStreams : i.elementaryStreams;
              s[U]
                ? a.push("audiovideo")
                : (s[O] && a.push("audio"), s[N] && a.push("video")),
                0 === a.length &&
                  w.warn(
                    "Fragments must have at least one ElementaryStreamType set. type: " +
                      i.type +
                      " level: " +
                      i.level +
                      " sn: " +
                      i.sn
                  ),
                this.blockBuffers(function () {
                  var t = self.performance.now();
                  (i.stats.buffering.end = t), n && (n.stats.buffering.end = t);
                  var e = n ? n.stats : i.stats;
                  r.hls.trigger(S.FRAG_BUFFERED, {
                    frag: i,
                    part: n,
                    stats: e,
                    id: i.type,
                  });
                }, a);
            }),
            (e.onFragChanged = function (t, e) {
              this.flushBackBuffer();
            }),
            (e.onBufferEos = function (t, e) {
              var r = this;
              this.getSourceBufferTypes().reduce(function (t, i) {
                var n = r.sourceBuffer[i];
                return (
                  !n ||
                    (e.type && e.type !== i) ||
                    ((n.ending = !0),
                    n.ended ||
                      ((n.ended = !0),
                      w.log(
                        "[buffer-controller]: " + i + " sourceBuffer now EOS"
                      ))),
                  t && !(n && !n.ended)
                );
              }, !0) &&
                (w.log(
                  "[buffer-controller]: Queueing mediaSource.endOfStream()"
                ),
                this.blockBuffers(function () {
                  r.getSourceBufferTypes().forEach(function (t) {
                    var e = r.sourceBuffer[t];
                    e && (e.ending = !1);
                  });
                  var t = r.mediaSource;
                  t && "open" === t.readyState
                    ? (w.log(
                        "[buffer-controller]: Calling mediaSource.endOfStream()"
                      ),
                      t.endOfStream())
                    : t &&
                      w.info(
                        "[buffer-controller]: Could not call mediaSource.endOfStream(). mediaSource.readyState: " +
                          t.readyState
                      );
                }));
            }),
            (e.onLevelUpdated = function (t, e) {
              var r = e.details;
              r.fragments.length &&
                ((this.details = r),
                this.getSourceBufferTypes().length
                  ? this.blockBuffers(
                      this.updateMediaElementDuration.bind(this)
                    )
                  : this.updateMediaElementDuration());
            }),
            (e.flushBackBuffer = function () {
              var t = this.hls,
                e = this.details,
                r = this.media,
                i = this.sourceBuffer;
              if (r && null !== e) {
                var n = this.getSourceBufferTypes();
                if (n.length) {
                  var a =
                    e.live && null !== t.config.liveBackBufferLength
                      ? t.config.liveBackBufferLength
                      : t.config.backBufferLength;
                  if (E(a) && !(a < 0)) {
                    var s = r.currentTime,
                      o = e.levelTargetDuration,
                      l = Math.max(a, o),
                      u = Math.floor(s / o) * o - l;
                    n.forEach(function (r) {
                      var n = i[r];
                      if (n) {
                        var a = Ir.getBuffered(n);
                        if (a.length > 0 && u > a.start(0)) {
                          if (
                            (t.trigger(S.BACK_BUFFER_REACHED, { bufferEnd: u }),
                            e.live)
                          )
                            t.trigger(S.LIVE_BACK_BUFFER_REACHED, {
                              bufferEnd: u,
                            });
                          else if (n.ended && a.end(a.length - 1) - s < 2 * o)
                            return void w.info(
                              "[buffer-controller]: Cannot flush " +
                                r +
                                " back buffer while SourceBuffer is in ended state"
                            );
                          t.trigger(S.BUFFER_FLUSHING, {
                            startOffset: 0,
                            endOffset: u,
                            type: r,
                          });
                        }
                      }
                    });
                  }
                }
              }
            }),
            (e.updateMediaElementDuration = function () {
              if (
                this.details &&
                this.media &&
                this.mediaSource &&
                "open" === this.mediaSource.readyState
              ) {
                var t = this.details,
                  e = this.hls,
                  r = this.media,
                  i = this.mediaSource,
                  n = t.fragments[0].start + t.totalduration,
                  a = r.duration,
                  s = E(i.duration) ? i.duration : 0;
                t.live && e.config.liveDurationInfinity
                  ? (w.log(
                      "[buffer-controller]: Media Source duration is set to Infinity"
                    ),
                    (i.duration = 1 / 0),
                    this.updateSeekableRange(t))
                  : ((n > s && n > a) || !E(a)) &&
                    (w.log(
                      "[buffer-controller]: Updating Media Source duration to " +
                        n.toFixed(3)
                    ),
                    (i.duration = n));
              }
            }),
            (e.updateSeekableRange = function (t) {
              var e = this.mediaSource,
                r = t.fragments;
              if (r.length && t.live && null != e && e.setLiveSeekableRange) {
                var i = Math.max(0, r[0].start),
                  n = Math.max(i, i + t.totalduration);
                e.setLiveSeekableRange(i, n);
              }
            }),
            (e.checkPendingTracks = function () {
              var t = this.bufferCodecEventsExpected,
                e = this.operationQueue,
                r = this.pendingTracks,
                i = Object.keys(r).length;
              if ((i && !t) || 2 === i) {
                this.createSourceBuffers(r), (this.pendingTracks = {});
                var n = this.getSourceBufferTypes();
                if (n.length)
                  this.hls.trigger(S.BUFFER_CREATED, { tracks: this.tracks }),
                    n.forEach(function (t) {
                      e.executeNext(t);
                    });
                else {
                  var a = new Error(
                    "could not create source buffer for media codec(s)"
                  );
                  this.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: R.BUFFER_INCOMPATIBLE_CODECS_ERROR,
                    fatal: !0,
                    error: a,
                    reason: a.message,
                  });
                }
              }
            }),
            (e.createSourceBuffers = function (t) {
              var e = this.sourceBuffer,
                r = this.mediaSource;
              if (!r)
                throw Error(
                  "createSourceBuffers called when mediaSource was null"
                );
              for (var i in t)
                if (!e[i]) {
                  var n = t[i];
                  if (!n)
                    throw Error(
                      "source buffer exists for track " +
                        i +
                        ", however track does not"
                    );
                  var a = n.levelCodec || n.codec,
                    s = n.container + ";codecs=" + a;
                  w.log(
                    "[buffer-controller]: creating sourceBuffer(" + s + ")"
                  );
                  try {
                    var o = (e[i] = r.addSourceBuffer(s)),
                      l = i;
                    this.addBufferListener(
                      l,
                      "updatestart",
                      this._onSBUpdateStart
                    ),
                      this.addBufferListener(
                        l,
                        "updateend",
                        this._onSBUpdateEnd
                      ),
                      this.addBufferListener(l, "error", this._onSBUpdateError),
                      (this.tracks[i] = {
                        buffer: o,
                        codec: a,
                        container: n.container,
                        levelCodec: n.levelCodec,
                        metadata: n.metadata,
                        id: n.id,
                      });
                  } catch (t) {
                    w.error(
                      "[buffer-controller]: error while trying to add sourceBuffer: " +
                        t.message
                    ),
                      this.hls.trigger(S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: R.BUFFER_ADD_CODEC_ERROR,
                        fatal: !1,
                        error: t,
                        mimeType: s,
                      });
                  }
                }
            }),
            (e._onSBUpdateStart = function (t) {
              this.operationQueue.current(t).onStart();
            }),
            (e._onSBUpdateEnd = function (t) {
              var e = this.operationQueue;
              e.current(t).onComplete(), e.shiftAndExecuteNext(t);
            }),
            (e._onSBUpdateError = function (t, e) {
              var r = new Error(t + " SourceBuffer error");
              w.error("[buffer-controller]: " + r, e),
                this.hls.trigger(S.ERROR, {
                  type: L.MEDIA_ERROR,
                  details: R.BUFFER_APPENDING_ERROR,
                  error: r,
                  fatal: !1,
                });
              var i = this.operationQueue.current(t);
              i && i.onError(e);
            }),
            (e.removeExecutor = function (t, e, r) {
              var i = this.media,
                n = this.mediaSource,
                a = this.operationQueue,
                s = this.sourceBuffer[t];
              if (!i || !n || !s)
                return (
                  w.warn(
                    "[buffer-controller]: Attempting to remove from the " +
                      t +
                      " SourceBuffer, but it does not exist"
                  ),
                  void a.shiftAndExecuteNext(t)
                );
              var o = E(i.duration) ? i.duration : 1 / 0,
                l = E(n.duration) ? n.duration : 1 / 0,
                u = Math.max(0, e),
                h = Math.min(r, o, l);
              h > u && !s.ending
                ? ((s.ended = !1),
                  w.log(
                    "[buffer-controller]: Removing [" +
                      u +
                      "," +
                      h +
                      "] from the " +
                      t +
                      " SourceBuffer"
                  ),
                  s.remove(u, h))
                : a.shiftAndExecuteNext(t);
            }),
            (e.appendExecutor = function (t, e) {
              var r = this.operationQueue,
                i = this.sourceBuffer[e];
              if (!i)
                return (
                  w.warn(
                    "[buffer-controller]: Attempting to append to the " +
                      e +
                      " SourceBuffer, but it does not exist"
                  ),
                  void r.shiftAndExecuteNext(e)
                );
              (i.ended = !1), i.appendBuffer(t);
            }),
            (e.blockBuffers = function (t, e) {
              var r = this;
              if (
                (void 0 === e && (e = this.getSourceBufferTypes()), !e.length)
              )
                return (
                  w.log(
                    "[buffer-controller]: Blocking operation requested, but no SourceBuffers exist"
                  ),
                  void Promise.resolve().then(t)
                );
              var i = this.operationQueue,
                n = e.map(function (t) {
                  return i.appendBlocker(t);
                });
              Promise.all(n).then(function () {
                t(),
                  e.forEach(function (t) {
                    var e = r.sourceBuffer[t];
                    (null != e && e.updating) || i.shiftAndExecuteNext(t);
                  });
              });
            }),
            (e.getSourceBufferTypes = function () {
              return Object.keys(this.sourceBuffer);
            }),
            (e.addBufferListener = function (t, e, r) {
              var i = this.sourceBuffer[t];
              if (i) {
                var n = r.bind(this, t);
                this.listeners[t].push({ event: e, listener: n }),
                  i.addEventListener(e, n);
              }
            }),
            (e.removeBufferListeners = function (t) {
              var e = this.sourceBuffer[t];
              e &&
                this.listeners[t].forEach(function (t) {
                  e.removeEventListener(t.event, t.listener);
                });
            }),
            t
          );
        })(),
        wn = {
          42: 225,
          92: 233,
          94: 237,
          95: 243,
          96: 250,
          123: 231,
          124: 247,
          125: 209,
          126: 241,
          127: 9608,
          128: 174,
          129: 176,
          130: 189,
          131: 191,
          132: 8482,
          133: 162,
          134: 163,
          135: 9834,
          136: 224,
          137: 32,
          138: 232,
          139: 226,
          140: 234,
          141: 238,
          142: 244,
          143: 251,
          144: 193,
          145: 201,
          146: 211,
          147: 218,
          148: 220,
          149: 252,
          150: 8216,
          151: 161,
          152: 42,
          153: 8217,
          154: 9473,
          155: 169,
          156: 8480,
          157: 8226,
          158: 8220,
          159: 8221,
          160: 192,
          161: 194,
          162: 199,
          163: 200,
          164: 202,
          165: 203,
          166: 235,
          167: 206,
          168: 207,
          169: 239,
          170: 212,
          171: 217,
          172: 249,
          173: 219,
          174: 171,
          175: 187,
          176: 195,
          177: 227,
          178: 205,
          179: 204,
          180: 236,
          181: 210,
          182: 242,
          183: 213,
          184: 245,
          185: 123,
          186: 125,
          187: 92,
          188: 94,
          189: 95,
          190: 124,
          191: 8764,
          192: 196,
          193: 228,
          194: 214,
          195: 246,
          196: 223,
          197: 165,
          198: 164,
          199: 9475,
          200: 197,
          201: 229,
          202: 216,
          203: 248,
          204: 9487,
          205: 9491,
          206: 9495,
          207: 9499,
        },
        Cn = function (t) {
          var e = t;
          return wn.hasOwnProperty(t) && (e = wn[t]), String.fromCharCode(e);
        },
        _n = 15,
        Pn = 100,
        xn = { 17: 1, 18: 3, 21: 5, 22: 7, 23: 9, 16: 11, 19: 12, 20: 14 },
        Fn = { 17: 2, 18: 4, 21: 6, 22: 8, 23: 10, 19: 13, 20: 15 },
        Mn = { 25: 1, 26: 3, 29: 5, 30: 7, 31: 9, 24: 11, 27: 12, 28: 14 },
        On = { 25: 2, 26: 4, 29: 6, 30: 8, 31: 10, 27: 13, 28: 15 },
        Nn = [
          "white",
          "green",
          "blue",
          "cyan",
          "red",
          "yellow",
          "magenta",
          "black",
          "transparent",
        ],
        Un = (function () {
          function t() {
            (this.time = null), (this.verboseLevel = 0);
          }
          return (
            (t.prototype.log = function (t, e) {
              if (this.verboseLevel >= t) {
                var r = "function" == typeof e ? e() : e;
                w.log(this.time + " [" + t + "] " + r);
              }
            }),
            t
          );
        })(),
        Bn = function (t) {
          for (var e = [], r = 0; r < t.length; r++) e.push(t[r].toString(16));
          return e;
        },
        Gn = (function () {
          function t(t, e, r, i, n) {
            (this.foreground = void 0),
              (this.underline = void 0),
              (this.italics = void 0),
              (this.background = void 0),
              (this.flash = void 0),
              (this.foreground = t || "white"),
              (this.underline = e || !1),
              (this.italics = r || !1),
              (this.background = i || "black"),
              (this.flash = n || !1);
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              (this.foreground = "white"),
                (this.underline = !1),
                (this.italics = !1),
                (this.background = "black"),
                (this.flash = !1);
            }),
            (e.setStyles = function (t) {
              for (
                var e = [
                    "foreground",
                    "underline",
                    "italics",
                    "background",
                    "flash",
                  ],
                  r = 0;
                r < e.length;
                r++
              ) {
                var i = e[r];
                t.hasOwnProperty(i) && (this[i] = t[i]);
              }
            }),
            (e.isDefault = function () {
              return (
                "white" === this.foreground &&
                !this.underline &&
                !this.italics &&
                "black" === this.background &&
                !this.flash
              );
            }),
            (e.equals = function (t) {
              return (
                this.foreground === t.foreground &&
                this.underline === t.underline &&
                this.italics === t.italics &&
                this.background === t.background &&
                this.flash === t.flash
              );
            }),
            (e.copy = function (t) {
              (this.foreground = t.foreground),
                (this.underline = t.underline),
                (this.italics = t.italics),
                (this.background = t.background),
                (this.flash = t.flash);
            }),
            (e.toString = function () {
              return (
                "color=" +
                this.foreground +
                ", underline=" +
                this.underline +
                ", italics=" +
                this.italics +
                ", background=" +
                this.background +
                ", flash=" +
                this.flash
              );
            }),
            t
          );
        })(),
        Kn = (function () {
          function t(t, e, r, i, n, a) {
            (this.uchar = void 0),
              (this.penState = void 0),
              (this.uchar = t || " "),
              (this.penState = new Gn(e, r, i, n, a));
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              (this.uchar = " "), this.penState.reset();
            }),
            (e.setChar = function (t, e) {
              (this.uchar = t), this.penState.copy(e);
            }),
            (e.setPenState = function (t) {
              this.penState.copy(t);
            }),
            (e.equals = function (t) {
              return this.uchar === t.uchar && this.penState.equals(t.penState);
            }),
            (e.copy = function (t) {
              (this.uchar = t.uchar), this.penState.copy(t.penState);
            }),
            (e.isEmpty = function () {
              return " " === this.uchar && this.penState.isDefault();
            }),
            t
          );
        })(),
        Hn = (function () {
          function t(t) {
            (this.chars = void 0),
              (this.pos = void 0),
              (this.currPenState = void 0),
              (this.cueStartTime = void 0),
              (this.logger = void 0),
              (this.chars = []);
            for (var e = 0; e < Pn; e++) this.chars.push(new Kn());
            (this.logger = t), (this.pos = 0), (this.currPenState = new Gn());
          }
          var e = t.prototype;
          return (
            (e.equals = function (t) {
              for (var e = !0, r = 0; r < Pn; r++)
                if (!this.chars[r].equals(t.chars[r])) {
                  e = !1;
                  break;
                }
              return e;
            }),
            (e.copy = function (t) {
              for (var e = 0; e < Pn; e++) this.chars[e].copy(t.chars[e]);
            }),
            (e.isEmpty = function () {
              for (var t = !0, e = 0; e < Pn; e++)
                if (!this.chars[e].isEmpty()) {
                  t = !1;
                  break;
                }
              return t;
            }),
            (e.setCursor = function (t) {
              this.pos !== t && (this.pos = t),
                this.pos < 0
                  ? (this.logger.log(3, "Negative cursor position " + this.pos),
                    (this.pos = 0))
                  : this.pos > Pn &&
                    (this.logger.log(
                      3,
                      "Too large cursor position " + this.pos
                    ),
                    (this.pos = Pn));
            }),
            (e.moveCursor = function (t) {
              var e = this.pos + t;
              if (t > 1)
                for (var r = this.pos + 1; r < e + 1; r++)
                  this.chars[r].setPenState(this.currPenState);
              this.setCursor(e);
            }),
            (e.backSpace = function () {
              this.moveCursor(-1),
                this.chars[this.pos].setChar(" ", this.currPenState);
            }),
            (e.insertChar = function (t) {
              var e = this;
              t >= 144 && this.backSpace();
              var r = Cn(t);
              this.pos >= Pn
                ? this.logger.log(0, function () {
                    return (
                      "Cannot insert " +
                      t.toString(16) +
                      " (" +
                      r +
                      ") at position " +
                      e.pos +
                      ". Skipping it!"
                    );
                  })
                : (this.chars[this.pos].setChar(r, this.currPenState),
                  this.moveCursor(1));
            }),
            (e.clearFromPos = function (t) {
              var e;
              for (e = t; e < Pn; e++) this.chars[e].reset();
            }),
            (e.clear = function () {
              this.clearFromPos(0), (this.pos = 0), this.currPenState.reset();
            }),
            (e.clearToEndOfRow = function () {
              this.clearFromPos(this.pos);
            }),
            (e.getTextString = function () {
              for (var t = [], e = !0, r = 0; r < Pn; r++) {
                var i = this.chars[r].uchar;
                " " !== i && (e = !1), t.push(i);
              }
              return e ? "" : t.join("");
            }),
            (e.setPenStyles = function (t) {
              this.currPenState.setStyles(t),
                this.chars[this.pos].setPenState(this.currPenState);
            }),
            t
          );
        })(),
        Vn = (function () {
          function t(t) {
            (this.rows = void 0),
              (this.currRow = void 0),
              (this.nrRollUpRows = void 0),
              (this.lastOutputScreen = void 0),
              (this.logger = void 0),
              (this.rows = []);
            for (var e = 0; e < _n; e++) this.rows.push(new Hn(t));
            (this.logger = t),
              (this.currRow = 14),
              (this.nrRollUpRows = null),
              (this.lastOutputScreen = null),
              this.reset();
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              for (var t = 0; t < _n; t++) this.rows[t].clear();
              this.currRow = 14;
            }),
            (e.equals = function (t) {
              for (var e = !0, r = 0; r < _n; r++)
                if (!this.rows[r].equals(t.rows[r])) {
                  e = !1;
                  break;
                }
              return e;
            }),
            (e.copy = function (t) {
              for (var e = 0; e < _n; e++) this.rows[e].copy(t.rows[e]);
            }),
            (e.isEmpty = function () {
              for (var t = !0, e = 0; e < _n; e++)
                if (!this.rows[e].isEmpty()) {
                  t = !1;
                  break;
                }
              return t;
            }),
            (e.backSpace = function () {
              this.rows[this.currRow].backSpace();
            }),
            (e.clearToEndOfRow = function () {
              this.rows[this.currRow].clearToEndOfRow();
            }),
            (e.insertChar = function (t) {
              this.rows[this.currRow].insertChar(t);
            }),
            (e.setPen = function (t) {
              this.rows[this.currRow].setPenStyles(t);
            }),
            (e.moveCursor = function (t) {
              this.rows[this.currRow].moveCursor(t);
            }),
            (e.setCursor = function (t) {
              this.logger.log(2, "setCursor: " + t),
                this.rows[this.currRow].setCursor(t);
            }),
            (e.setPAC = function (t) {
              this.logger.log(2, function () {
                return "pacData = " + JSON.stringify(t);
              });
              var e = t.row - 1;
              if (
                (this.nrRollUpRows &&
                  e < this.nrRollUpRows - 1 &&
                  (e = this.nrRollUpRows - 1),
                this.nrRollUpRows && this.currRow !== e)
              ) {
                for (var r = 0; r < _n; r++) this.rows[r].clear();
                var i = this.currRow + 1 - this.nrRollUpRows,
                  n = this.lastOutputScreen;
                if (n) {
                  var a = n.rows[i].cueStartTime,
                    s = this.logger.time;
                  if (a && null !== s && a < s)
                    for (var o = 0; o < this.nrRollUpRows; o++)
                      this.rows[e - this.nrRollUpRows + o + 1].copy(
                        n.rows[i + o]
                      );
                }
              }
              this.currRow = e;
              var l = this.rows[this.currRow];
              if (null !== t.indent) {
                var u = t.indent,
                  h = Math.max(u - 1, 0);
                l.setCursor(t.indent),
                  (t.color = l.chars[h].penState.foreground);
              }
              var d = {
                foreground: t.color,
                underline: t.underline,
                italics: t.italics,
                background: "black",
                flash: !1,
              };
              this.setPen(d);
            }),
            (e.setBkgData = function (t) {
              this.logger.log(2, function () {
                return "bkgData = " + JSON.stringify(t);
              }),
                this.backSpace(),
                this.setPen(t),
                this.insertChar(32);
            }),
            (e.setRollUpRows = function (t) {
              this.nrRollUpRows = t;
            }),
            (e.rollUp = function () {
              var t = this;
              if (null !== this.nrRollUpRows) {
                this.logger.log(1, function () {
                  return t.getDisplayText();
                });
                var e = this.currRow + 1 - this.nrRollUpRows,
                  r = this.rows.splice(e, 1)[0];
                r.clear(),
                  this.rows.splice(this.currRow, 0, r),
                  this.logger.log(2, "Rolling up");
              } else this.logger.log(3, "roll_up but nrRollUpRows not set yet");
            }),
            (e.getDisplayText = function (t) {
              t = t || !1;
              for (var e = [], r = "", i = -1, n = 0; n < _n; n++) {
                var a = this.rows[n].getTextString();
                a &&
                  ((i = n + 1),
                  t ? e.push("Row " + i + ": '" + a + "'") : e.push(a.trim()));
              }
              return (
                e.length > 0 &&
                  (r = t ? "[" + e.join(" | ") + "]" : e.join("\n")),
                r
              );
            }),
            (e.getTextAndFormat = function () {
              return this.rows;
            }),
            t
          );
        })(),
        Yn = (function () {
          function t(t, e, r) {
            (this.chNr = void 0),
              (this.outputFilter = void 0),
              (this.mode = void 0),
              (this.verbose = void 0),
              (this.displayedMemory = void 0),
              (this.nonDisplayedMemory = void 0),
              (this.lastOutputScreen = void 0),
              (this.currRollUpRow = void 0),
              (this.writeScreen = void 0),
              (this.cueStartTime = void 0),
              (this.logger = void 0),
              (this.chNr = t),
              (this.outputFilter = e),
              (this.mode = null),
              (this.verbose = 0),
              (this.displayedMemory = new Vn(r)),
              (this.nonDisplayedMemory = new Vn(r)),
              (this.lastOutputScreen = new Vn(r)),
              (this.currRollUpRow = this.displayedMemory.rows[14]),
              (this.writeScreen = this.displayedMemory),
              (this.mode = null),
              (this.cueStartTime = null),
              (this.logger = r);
          }
          var e = t.prototype;
          return (
            (e.reset = function () {
              (this.mode = null),
                this.displayedMemory.reset(),
                this.nonDisplayedMemory.reset(),
                this.lastOutputScreen.reset(),
                this.outputFilter.reset(),
                (this.currRollUpRow = this.displayedMemory.rows[14]),
                (this.writeScreen = this.displayedMemory),
                (this.mode = null),
                (this.cueStartTime = null);
            }),
            (e.getHandler = function () {
              return this.outputFilter;
            }),
            (e.setHandler = function (t) {
              this.outputFilter = t;
            }),
            (e.setPAC = function (t) {
              this.writeScreen.setPAC(t);
            }),
            (e.setBkgData = function (t) {
              this.writeScreen.setBkgData(t);
            }),
            (e.setMode = function (t) {
              t !== this.mode &&
                ((this.mode = t),
                this.logger.log(2, function () {
                  return "MODE=" + t;
                }),
                "MODE_POP-ON" === this.mode
                  ? (this.writeScreen = this.nonDisplayedMemory)
                  : ((this.writeScreen = this.displayedMemory),
                    this.writeScreen.reset()),
                "MODE_ROLL-UP" !== this.mode &&
                  ((this.displayedMemory.nrRollUpRows = null),
                  (this.nonDisplayedMemory.nrRollUpRows = null)),
                (this.mode = t));
            }),
            (e.insertChars = function (t) {
              for (var e = this, r = 0; r < t.length; r++)
                this.writeScreen.insertChar(t[r]);
              var i =
                this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
              this.logger.log(2, function () {
                return i + ": " + e.writeScreen.getDisplayText(!0);
              }),
                ("MODE_PAINT-ON" !== this.mode &&
                  "MODE_ROLL-UP" !== this.mode) ||
                  (this.logger.log(1, function () {
                    return "DISPLAYED: " + e.displayedMemory.getDisplayText(!0);
                  }),
                  this.outputDataUpdate());
            }),
            (e.ccRCL = function () {
              this.logger.log(2, "RCL - Resume Caption Loading"),
                this.setMode("MODE_POP-ON");
            }),
            (e.ccBS = function () {
              this.logger.log(2, "BS - BackSpace"),
                "MODE_TEXT" !== this.mode &&
                  (this.writeScreen.backSpace(),
                  this.writeScreen === this.displayedMemory &&
                    this.outputDataUpdate());
            }),
            (e.ccAOF = function () {}),
            (e.ccAON = function () {}),
            (e.ccDER = function () {
              this.logger.log(2, "DER- Delete to End of Row"),
                this.writeScreen.clearToEndOfRow(),
                this.outputDataUpdate();
            }),
            (e.ccRU = function (t) {
              this.logger.log(2, "RU(" + t + ") - Roll Up"),
                (this.writeScreen = this.displayedMemory),
                this.setMode("MODE_ROLL-UP"),
                this.writeScreen.setRollUpRows(t);
            }),
            (e.ccFON = function () {
              this.logger.log(2, "FON - Flash On"),
                this.writeScreen.setPen({ flash: !0 });
            }),
            (e.ccRDC = function () {
              this.logger.log(2, "RDC - Resume Direct Captioning"),
                this.setMode("MODE_PAINT-ON");
            }),
            (e.ccTR = function () {
              this.logger.log(2, "TR"), this.setMode("MODE_TEXT");
            }),
            (e.ccRTD = function () {
              this.logger.log(2, "RTD"), this.setMode("MODE_TEXT");
            }),
            (e.ccEDM = function () {
              this.logger.log(2, "EDM - Erase Displayed Memory"),
                this.displayedMemory.reset(),
                this.outputDataUpdate(!0);
            }),
            (e.ccCR = function () {
              this.logger.log(2, "CR - Carriage Return"),
                this.writeScreen.rollUp(),
                this.outputDataUpdate(!0);
            }),
            (e.ccENM = function () {
              this.logger.log(2, "ENM - Erase Non-displayed Memory"),
                this.nonDisplayedMemory.reset();
            }),
            (e.ccEOC = function () {
              var t = this;
              if (
                (this.logger.log(2, "EOC - End Of Caption"),
                "MODE_POP-ON" === this.mode)
              ) {
                var e = this.displayedMemory;
                (this.displayedMemory = this.nonDisplayedMemory),
                  (this.nonDisplayedMemory = e),
                  (this.writeScreen = this.nonDisplayedMemory),
                  this.logger.log(1, function () {
                    return "DISP: " + t.displayedMemory.getDisplayText();
                  });
              }
              this.outputDataUpdate(!0);
            }),
            (e.ccTO = function (t) {
              this.logger.log(2, "TO(" + t + ") - Tab Offset"),
                this.writeScreen.moveCursor(t);
            }),
            (e.ccMIDROW = function (t) {
              var e = { flash: !1 };
              if (
                ((e.underline = t % 2 == 1), (e.italics = t >= 46), e.italics)
              )
                e.foreground = "white";
              else {
                var r = Math.floor(t / 2) - 16;
                e.foreground = [
                  "white",
                  "green",
                  "blue",
                  "cyan",
                  "red",
                  "yellow",
                  "magenta",
                ][r];
              }
              this.logger.log(2, "MIDROW: " + JSON.stringify(e)),
                this.writeScreen.setPen(e);
            }),
            (e.outputDataUpdate = function (t) {
              void 0 === t && (t = !1);
              var e = this.logger.time;
              null !== e &&
                this.outputFilter &&
                (null !== this.cueStartTime || this.displayedMemory.isEmpty()
                  ? this.displayedMemory.equals(this.lastOutputScreen) ||
                    (this.outputFilter.newCue(
                      this.cueStartTime,
                      e,
                      this.lastOutputScreen
                    ),
                    t &&
                      this.outputFilter.dispatchCue &&
                      this.outputFilter.dispatchCue(),
                    (this.cueStartTime = this.displayedMemory.isEmpty()
                      ? null
                      : e))
                  : (this.cueStartTime = e),
                this.lastOutputScreen.copy(this.displayedMemory));
            }),
            (e.cueSplitAtTime = function (t) {
              this.outputFilter &&
                (this.displayedMemory.isEmpty() ||
                  (this.outputFilter.newCue &&
                    this.outputFilter.newCue(
                      this.cueStartTime,
                      t,
                      this.displayedMemory
                    ),
                  (this.cueStartTime = t)));
            }),
            t
          );
        })(),
        Wn = (function () {
          function t(t, e, r) {
            (this.channels = void 0),
              (this.currentChannel = 0),
              (this.cmdHistory = void 0),
              (this.logger = void 0);
            var i = new Un();
            (this.channels = [null, new Yn(t, e, i), new Yn(t + 1, r, i)]),
              (this.cmdHistory = { a: null, b: null }),
              (this.logger = i);
          }
          var e = t.prototype;
          return (
            (e.getHandler = function (t) {
              return this.channels[t].getHandler();
            }),
            (e.setHandler = function (t, e) {
              this.channels[t].setHandler(e);
            }),
            (e.addData = function (t, e) {
              var r,
                i,
                n,
                a = !1;
              this.logger.time = t;
              for (var s = 0; s < e.length; s += 2)
                if (
                  ((i = 127 & e[s]), (n = 127 & e[s + 1]), 0 !== i || 0 !== n)
                ) {
                  if (
                    (this.logger.log(
                      3,
                      "[" + Bn([e[s], e[s + 1]]) + "] -> (" + Bn([i, n]) + ")"
                    ),
                    (r = this.parseCmd(i, n)) || (r = this.parseMidrow(i, n)),
                    r || (r = this.parsePAC(i, n)),
                    r || (r = this.parseBackgroundAttributes(i, n)),
                    !r && (a = this.parseChars(i, n)))
                  ) {
                    var o = this.currentChannel;
                    o && o > 0
                      ? this.channels[o].insertChars(a)
                      : this.logger.log(2, "No channel found yet. TEXT-MODE?");
                  }
                  r ||
                    a ||
                    this.logger.log(
                      2,
                      "Couldn't parse cleaned data " +
                        Bn([i, n]) +
                        " orig: " +
                        Bn([e[s], e[s + 1]])
                    );
                }
            }),
            (e.parseCmd = function (t, e) {
              var r = this.cmdHistory;
              if (
                !(
                  ((20 === t || 28 === t || 21 === t || 29 === t) &&
                    e >= 32 &&
                    e <= 47) ||
                  ((23 === t || 31 === t) && e >= 33 && e <= 35)
                )
              )
                return !1;
              if (qn(t, e, r))
                return (
                  jn(null, null, r),
                  this.logger.log(
                    3,
                    "Repeated command (" + Bn([t, e]) + ") is dropped"
                  ),
                  !0
                );
              var i = 20 === t || 21 === t || 23 === t ? 1 : 2,
                n = this.channels[i];
              return (
                20 === t || 21 === t || 28 === t || 29 === t
                  ? 32 === e
                    ? n.ccRCL()
                    : 33 === e
                    ? n.ccBS()
                    : 34 === e
                    ? n.ccAOF()
                    : 35 === e
                    ? n.ccAON()
                    : 36 === e
                    ? n.ccDER()
                    : 37 === e
                    ? n.ccRU(2)
                    : 38 === e
                    ? n.ccRU(3)
                    : 39 === e
                    ? n.ccRU(4)
                    : 40 === e
                    ? n.ccFON()
                    : 41 === e
                    ? n.ccRDC()
                    : 42 === e
                    ? n.ccTR()
                    : 43 === e
                    ? n.ccRTD()
                    : 44 === e
                    ? n.ccEDM()
                    : 45 === e
                    ? n.ccCR()
                    : 46 === e
                    ? n.ccENM()
                    : 47 === e && n.ccEOC()
                  : n.ccTO(e - 32),
                jn(t, e, r),
                (this.currentChannel = i),
                !0
              );
            }),
            (e.parseMidrow = function (t, e) {
              var r = 0;
              if ((17 === t || 25 === t) && e >= 32 && e <= 47) {
                if ((r = 17 === t ? 1 : 2) !== this.currentChannel)
                  return (
                    this.logger.log(0, "Mismatch channel in midrow parsing"), !1
                  );
                var i = this.channels[r];
                return (
                  !!i &&
                  (i.ccMIDROW(e),
                  this.logger.log(3, "MIDROW (" + Bn([t, e]) + ")"),
                  !0)
                );
              }
              return !1;
            }),
            (e.parsePAC = function (t, e) {
              var r,
                i = this.cmdHistory;
              if (
                !(
                  (((t >= 17 && t <= 23) || (t >= 25 && t <= 31)) &&
                    e >= 64 &&
                    e <= 127) ||
                  ((16 === t || 24 === t) && e >= 64 && e <= 95)
                )
              )
                return !1;
              if (qn(t, e, i)) return jn(null, null, i), !0;
              var n = t <= 23 ? 1 : 2;
              r =
                e >= 64 && e <= 95
                  ? 1 === n
                    ? xn[t]
                    : Mn[t]
                  : 1 === n
                  ? Fn[t]
                  : On[t];
              var a = this.channels[n];
              return (
                !!a &&
                (a.setPAC(this.interpretPAC(r, e)),
                jn(t, e, i),
                (this.currentChannel = n),
                !0)
              );
            }),
            (e.interpretPAC = function (t, e) {
              var r,
                i = {
                  color: null,
                  italics: !1,
                  indent: null,
                  underline: !1,
                  row: t,
                };
              return (
                (r = e > 95 ? e - 96 : e - 64),
                (i.underline = 1 == (1 & r)),
                r <= 13
                  ? (i.color = [
                      "white",
                      "green",
                      "blue",
                      "cyan",
                      "red",
                      "yellow",
                      "magenta",
                      "white",
                    ][Math.floor(r / 2)])
                  : r <= 15
                  ? ((i.italics = !0), (i.color = "white"))
                  : (i.indent = 4 * Math.floor((r - 16) / 2)),
                i
              );
            }),
            (e.parseChars = function (t, e) {
              var r,
                i,
                n = null,
                a = null;
              if (
                (t >= 25 ? ((r = 2), (a = t - 8)) : ((r = 1), (a = t)),
                a >= 17 && a <= 19
                  ? ((i = 17 === a ? e + 80 : 18 === a ? e + 112 : e + 144),
                    this.logger.log(
                      2,
                      "Special char '" + Cn(i) + "' in channel " + r
                    ),
                    (n = [i]))
                  : t >= 32 && t <= 127 && (n = 0 === e ? [t] : [t, e]),
                n)
              ) {
                var s = Bn(n);
                this.logger.log(3, "Char codes =  " + s.join(",")),
                  jn(t, e, this.cmdHistory);
              }
              return n;
            }),
            (e.parseBackgroundAttributes = function (t, e) {
              var r;
              if (
                !(
                  ((16 === t || 24 === t) && e >= 32 && e <= 47) ||
                  ((23 === t || 31 === t) && e >= 45 && e <= 47)
                )
              )
                return !1;
              var i = {};
              16 === t || 24 === t
                ? ((r = Math.floor((e - 32) / 2)),
                  (i.background = Nn[r]),
                  e % 2 == 1 && (i.background = i.background + "_semi"))
                : 45 === e
                ? (i.background = "transparent")
                : ((i.foreground = "black"), 47 === e && (i.underline = !0));
              var n = t <= 23 ? 1 : 2;
              return (
                this.channels[n].setBkgData(i), jn(t, e, this.cmdHistory), !0
              );
            }),
            (e.reset = function () {
              for (var t = 0; t < Object.keys(this.channels).length; t++) {
                var e = this.channels[t];
                e && e.reset();
              }
              this.cmdHistory = { a: null, b: null };
            }),
            (e.cueSplitAtTime = function (t) {
              for (var e = 0; e < this.channels.length; e++) {
                var r = this.channels[e];
                r && r.cueSplitAtTime(t);
              }
            }),
            t
          );
        })();
      function jn(t, e, r) {
        (r.a = t), (r.b = e);
      }
      function qn(t, e, r) {
        return r.a === t && r.b === e;
      }
      var Xn = (function () {
          function t(t, e) {
            (this.timelineController = void 0),
              (this.cueRanges = []),
              (this.trackName = void 0),
              (this.startTime = null),
              (this.endTime = null),
              (this.screen = null),
              (this.timelineController = t),
              (this.trackName = e);
          }
          var e = t.prototype;
          return (
            (e.dispatchCue = function () {
              null !== this.startTime &&
                (this.timelineController.addCues(
                  this.trackName,
                  this.startTime,
                  this.endTime,
                  this.screen,
                  this.cueRanges
                ),
                (this.startTime = null));
            }),
            (e.newCue = function (t, e, r) {
              (null === this.startTime || this.startTime > t) &&
                (this.startTime = t),
                (this.endTime = e),
                (this.screen = r),
                this.timelineController.createCaptionsTrack(this.trackName);
            }),
            (e.reset = function () {
              (this.cueRanges = []), (this.startTime = null);
            }),
            t
          );
        })(),
        zn = (function () {
          if ("undefined" != typeof self && self.VTTCue) return self.VTTCue;
          var t = ["", "lr", "rl"],
            e = ["start", "middle", "end", "left", "right"];
          function r(t, e) {
            if ("string" != typeof e) return !1;
            if (!Array.isArray(t)) return !1;
            var r = e.toLowerCase();
            return !!~t.indexOf(r) && r;
          }
          function i(t) {
            return r(e, t);
          }
          function n(t) {
            for (
              var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1;
              i < e;
              i++
            )
              r[i - 1] = arguments[i];
            for (var n = 1; n < arguments.length; n++) {
              var a = arguments[n];
              for (var s in a) t[s] = a[s];
            }
            return t;
          }
          function a(e, a, s) {
            var o = this,
              l = { enumerable: !0 };
            o.hasBeenReset = !1;
            var u = "",
              h = !1,
              d = e,
              c = a,
              f = s,
              g = null,
              v = "",
              m = !0,
              p = "auto",
              y = "start",
              T = 50,
              E = "middle",
              S = 50,
              L = "middle";
            Object.defineProperty(
              o,
              "id",
              n({}, l, {
                get: function () {
                  return u;
                },
                set: function (t) {
                  u = "" + t;
                },
              })
            ),
              Object.defineProperty(
                o,
                "pauseOnExit",
                n({}, l, {
                  get: function () {
                    return h;
                  },
                  set: function (t) {
                    h = !!t;
                  },
                })
              ),
              Object.defineProperty(
                o,
                "startTime",
                n({}, l, {
                  get: function () {
                    return d;
                  },
                  set: function (t) {
                    if ("number" != typeof t)
                      throw new TypeError(
                        "Start time must be set to a number."
                      );
                    (d = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "endTime",
                n({}, l, {
                  get: function () {
                    return c;
                  },
                  set: function (t) {
                    if ("number" != typeof t)
                      throw new TypeError("End time must be set to a number.");
                    (c = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "text",
                n({}, l, {
                  get: function () {
                    return f;
                  },
                  set: function (t) {
                    (f = "" + t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "region",
                n({}, l, {
                  get: function () {
                    return g;
                  },
                  set: function (t) {
                    (g = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "vertical",
                n({}, l, {
                  get: function () {
                    return v;
                  },
                  set: function (e) {
                    var i = (function (e) {
                      return r(t, e);
                    })(e);
                    if (!1 === i)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (v = i), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "snapToLines",
                n({}, l, {
                  get: function () {
                    return m;
                  },
                  set: function (t) {
                    (m = !!t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "line",
                n({}, l, {
                  get: function () {
                    return p;
                  },
                  set: function (t) {
                    if ("number" != typeof t && "auto" !== t)
                      throw new SyntaxError(
                        "An invalid number or illegal string was specified."
                      );
                    (p = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "lineAlign",
                n({}, l, {
                  get: function () {
                    return y;
                  },
                  set: function (t) {
                    var e = i(t);
                    if (!e)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (y = e), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "position",
                n({}, l, {
                  get: function () {
                    return T;
                  },
                  set: function (t) {
                    if (t < 0 || t > 100)
                      throw new Error("Position must be between 0 and 100.");
                    (T = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "positionAlign",
                n({}, l, {
                  get: function () {
                    return E;
                  },
                  set: function (t) {
                    var e = i(t);
                    if (!e)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (E = e), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "size",
                n({}, l, {
                  get: function () {
                    return S;
                  },
                  set: function (t) {
                    if (t < 0 || t > 100)
                      throw new Error("Size must be between 0 and 100.");
                    (S = t), (this.hasBeenReset = !0);
                  },
                })
              ),
              Object.defineProperty(
                o,
                "align",
                n({}, l, {
                  get: function () {
                    return L;
                  },
                  set: function (t) {
                    var e = i(t);
                    if (!e)
                      throw new SyntaxError(
                        "An invalid or illegal string was specified."
                      );
                    (L = e), (this.hasBeenReset = !0);
                  },
                })
              ),
              (o.displayState = void 0);
          }
          return (
            (a.prototype.getCueAsHTML = function () {
              return self.WebVTT.convertCueToDOMTree(self, this.text);
            }),
            a
          );
        })(),
        Qn = (function () {
          function t() {}
          return (
            (t.prototype.decode = function (t, e) {
              if (!t) return "";
              if ("string" != typeof t)
                throw new Error("Error - expected string data.");
              return decodeURIComponent(encodeURIComponent(t));
            }),
            t
          );
        })();
      function $n(t) {
        function e(t, e, r, i) {
          return 3600 * (0 | t) + 60 * (0 | e) + (0 | r) + parseFloat(i || 0);
        }
        var r = t.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/);
        return r
          ? parseFloat(r[2]) > 59
            ? e(r[2], r[3], 0, r[4])
            : e(r[1], r[2], r[3], r[4])
          : null;
      }
      var Jn = (function () {
        function t() {
          this.values = Object.create(null);
        }
        var e = t.prototype;
        return (
          (e.set = function (t, e) {
            this.get(t) || "" === e || (this.values[t] = e);
          }),
          (e.get = function (t, e, r) {
            return r
              ? this.has(t)
                ? this.values[t]
                : e[r]
              : this.has(t)
              ? this.values[t]
              : e;
          }),
          (e.has = function (t) {
            return t in this.values;
          }),
          (e.alt = function (t, e, r) {
            for (var i = 0; i < r.length; ++i)
              if (e === r[i]) {
                this.set(t, e);
                break;
              }
          }),
          (e.integer = function (t, e) {
            /^-?\d+$/.test(e) && this.set(t, parseInt(e, 10));
          }),
          (e.percent = function (t, e) {
            if (/^([\d]{1,3})(\.[\d]*)?%$/.test(e)) {
              var r = parseFloat(e);
              if (r >= 0 && r <= 100) return this.set(t, r), !0;
            }
            return !1;
          }),
          t
        );
      })();
      function Zn(t, e, r, i) {
        var n = i ? t.split(i) : [t];
        for (var a in n)
          if ("string" == typeof n[a]) {
            var s = n[a].split(r);
            2 === s.length && e(s[0], s[1]);
          }
      }
      var ta = new zn(0, 0, ""),
        ea = "middle" === ta.align ? "middle" : "center";
      function ra(t, e, r) {
        var i = t;
        function n() {
          var e = $n(t);
          if (null === e) throw new Error("Malformed timestamp: " + i);
          return (t = t.replace(/^[^\sa-zA-Z-]+/, "")), e;
        }
        function a() {
          t = t.replace(/^\s+/, "");
        }
        if ((a(), (e.startTime = n()), a(), "--\x3e" !== t.slice(0, 3)))
          throw new Error(
            "Malformed time stamp (time stamps must be separated by '--\x3e'): " +
              i
          );
        (t = t.slice(3)),
          a(),
          (e.endTime = n()),
          a(),
          (function (t, e) {
            var i = new Jn();
            Zn(
              t,
              function (t, e) {
                var n;
                switch (t) {
                  case "region":
                    for (var a = r.length - 1; a >= 0; a--)
                      if (r[a].id === e) {
                        i.set(t, r[a].region);
                        break;
                      }
                    break;
                  case "vertical":
                    i.alt(t, e, ["rl", "lr"]);
                    break;
                  case "line":
                    (n = e.split(",")),
                      i.integer(t, n[0]),
                      i.percent(t, n[0]) && i.set("snapToLines", !1),
                      i.alt(t, n[0], ["auto"]),
                      2 === n.length &&
                        i.alt("lineAlign", n[1], ["start", ea, "end"]);
                    break;
                  case "position":
                    (n = e.split(",")),
                      i.percent(t, n[0]),
                      2 === n.length &&
                        i.alt("positionAlign", n[1], [
                          "start",
                          ea,
                          "end",
                          "line-left",
                          "line-right",
                          "auto",
                        ]);
                    break;
                  case "size":
                    i.percent(t, e);
                    break;
                  case "align":
                    i.alt(t, e, ["start", ea, "end", "left", "right"]);
                }
              },
              /:/,
              /\s/
            ),
              (e.region = i.get("region", null)),
              (e.vertical = i.get("vertical", ""));
            var n = i.get("line", "auto");
            "auto" === n && -1 === ta.line && (n = -1),
              (e.line = n),
              (e.lineAlign = i.get("lineAlign", "start")),
              (e.snapToLines = i.get("snapToLines", !0)),
              (e.size = i.get("size", 100)),
              (e.align = i.get("align", ea));
            var a = i.get("position", "auto");
            "auto" === a &&
              50 === ta.position &&
              (a =
                "start" === e.align || "left" === e.align
                  ? 0
                  : "end" === e.align || "right" === e.align
                  ? 100
                  : 50),
              (e.position = a);
          })(t, e);
      }
      function ia(t) {
        return t.replace(/<br(?: \/)?>/gi, "\n");
      }
      var na = (function () {
          function t() {
            (this.state = "INITIAL"),
              (this.buffer = ""),
              (this.decoder = new Qn()),
              (this.regionList = []),
              (this.cue = null),
              (this.oncue = void 0),
              (this.onparsingerror = void 0),
              (this.onflush = void 0);
          }
          var e = t.prototype;
          return (
            (e.parse = function (t) {
              var e = this;
              function r() {
                var t = e.buffer,
                  r = 0;
                for (
                  t = ia(t);
                  r < t.length && "\r" !== t[r] && "\n" !== t[r];

                )
                  ++r;
                var i = t.slice(0, r);
                return (
                  "\r" === t[r] && ++r,
                  "\n" === t[r] && ++r,
                  (e.buffer = t.slice(r)),
                  i
                );
              }
              t && (e.buffer += e.decoder.decode(t, { stream: !0 }));
              try {
                var i = "";
                if ("INITIAL" === e.state) {
                  if (!/\r\n|\n/.test(e.buffer)) return this;
                  var n = (i = r()).match(/^(Ã¯Â»Â¿)?WEBVTT([ \t].*)?$/);
                  if (null == n || !n[0])
                    throw new Error("Malformed WebVTT signature.");
                  e.state = "HEADER";
                }
                for (var a = !1; e.buffer; ) {
                  if (!/\r\n|\n/.test(e.buffer)) return this;
                  switch ((a ? (a = !1) : (i = r()), e.state)) {
                    case "HEADER":
                      /:/.test(i)
                        ? Zn(i, function (t, e) {}, /:/)
                        : i || (e.state = "ID");
                      continue;
                    case "NOTE":
                      i || (e.state = "ID");
                      continue;
                    case "ID":
                      if (/^NOTE($|[ \t])/.test(i)) {
                        e.state = "NOTE";
                        break;
                      }
                      if (!i) continue;
                      if (
                        ((e.cue = new zn(0, 0, "")),
                        (e.state = "CUE"),
                        -1 === i.indexOf("--\x3e"))
                      ) {
                        e.cue.id = i;
                        continue;
                      }
                    case "CUE":
                      if (!e.cue) {
                        e.state = "BADCUE";
                        continue;
                      }
                      try {
                        ra(i, e.cue, e.regionList);
                      } catch (t) {
                        (e.cue = null), (e.state = "BADCUE");
                        continue;
                      }
                      e.state = "CUETEXT";
                      continue;
                    case "CUETEXT":
                      var s = -1 !== i.indexOf("--\x3e");
                      if (!i || (s && (a = !0))) {
                        e.oncue && e.cue && e.oncue(e.cue),
                          (e.cue = null),
                          (e.state = "ID");
                        continue;
                      }
                      if (null === e.cue) continue;
                      e.cue.text && (e.cue.text += "\n"), (e.cue.text += i);
                      continue;
                    case "BADCUE":
                      i || (e.state = "ID");
                  }
                }
              } catch (t) {
                "CUETEXT" === e.state && e.cue && e.oncue && e.oncue(e.cue),
                  (e.cue = null),
                  (e.state = "INITIAL" === e.state ? "BADWEBVTT" : "BADCUE");
              }
              return this;
            }),
            (e.flush = function () {
              var t = this;
              try {
                if (
                  ((t.cue || "HEADER" === t.state) &&
                    ((t.buffer += "\n\n"), t.parse()),
                  "INITIAL" === t.state || "BADWEBVTT" === t.state)
                )
                  throw new Error("Malformed WebVTT signature.");
              } catch (e) {
                t.onparsingerror && t.onparsingerror(e);
              }
              return t.onflush && t.onflush(), this;
            }),
            t
          );
        })(),
        aa = /\r\n|\n\r|\n|\r/g,
        sa = function (t, e, r) {
          return void 0 === r && (r = 0), t.slice(r, r + e.length) === e;
        },
        oa = function (t) {
          for (var e = 5381, r = t.length; r; )
            e = (33 * e) ^ t.charCodeAt(--r);
          return (e >>> 0).toString();
        };
      function la(t, e, r) {
        return oa(t.toString()) + oa(e.toString()) + oa(r);
      }
      function ua(t, e, r, i, n, a, s) {
        var o,
          l,
          u,
          h = new na(),
          d = pt(new Uint8Array(t)).trim().replace(aa, "\n").split("\n"),
          c = [],
          f = e
            ? ((o = e.baseTime),
              void 0 === (l = e.timescale) && (l = 1),
              Ui(o, 9e4, 1 / l))
            : 0,
          g = "00:00.000",
          v = 0,
          m = 0,
          p = !0;
        (h.oncue = function (t) {
          var a = r[i],
            s = r.ccOffset,
            o = (v - f) / 9e4;
          if (
            (null != a &&
              a.new &&
              (void 0 !== m
                ? (s = r.ccOffset = a.start)
                : (function (t, e, r) {
                    var i = t[e],
                      n = t[i.prevCC];
                    if (!n || (!n.new && i.new))
                      return (
                        (t.ccOffset = t.presentationOffset = i.start),
                        void (i.new = !1)
                      );
                    for (; null != (a = n) && a.new; ) {
                      var a;
                      (t.ccOffset += i.start - n.start),
                        (i.new = !1),
                        (n = t[(i = n).prevCC]);
                    }
                    t.presentationOffset = r;
                  })(r, i, o)),
            o)
          ) {
            if (!e)
              return void (u = new Error("Missing initPTS for VTT MPEGTS"));
            s = o - r.presentationOffset;
          }
          var l = t.endTime - t.startTime,
            h = Vi(9e4 * (t.startTime + s - m), 9e4 * n) / 9e4;
          (t.startTime = Math.max(h, 0)), (t.endTime = Math.max(h + l, 0));
          var d = t.text.trim();
          (t.text = decodeURIComponent(encodeURIComponent(d))),
            t.id || (t.id = la(t.startTime, t.endTime, d)),
            t.endTime > 0 && c.push(t);
        }),
          (h.onparsingerror = function (t) {
            u = t;
          }),
          (h.onflush = function () {
            u ? s(u) : a(c);
          }),
          d.forEach(function (t) {
            if (p) {
              if (sa(t, "X-TIMESTAMP-MAP=")) {
                (p = !1),
                  t
                    .slice(16)
                    .split(",")
                    .forEach(function (t) {
                      sa(t, "LOCAL:")
                        ? (g = t.slice(6))
                        : sa(t, "MPEGTS:") && (v = parseInt(t.slice(7)));
                    });
                try {
                  m =
                    (function (t) {
                      var e = parseInt(t.slice(-3)),
                        r = parseInt(t.slice(-6, -4)),
                        i = parseInt(t.slice(-9, -7)),
                        n =
                          t.length > 9
                            ? parseInt(t.substring(0, t.indexOf(":")))
                            : 0;
                      if (!(E(e) && E(r) && E(i) && E(n)))
                        throw Error("Malformed X-TIMESTAMP-MAP: Local:" + t);
                      return (e += 1e3 * r), (e += 6e4 * i) + 36e5 * n;
                    })(g) / 1e3;
                } catch (t) {
                  u = t;
                }
                return;
              }
              "" === t && (p = !1);
            }
            h.parse(t + "\n");
          }),
          h.flush();
      }
      var ha = "stpp.ttml.im1t",
        da = /^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/,
        ca = /^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/,
        fa = {
          left: "start",
          center: "center",
          right: "end",
          start: "start",
          end: "end",
        };
      function ga(t, e, r, i) {
        var n = It(new Uint8Array(t), ["mdat"]);
        if (0 !== n.length) {
          var a,
            s,
            l,
            u,
            h = n.map(function (t) {
              return pt(t);
            }),
            d =
              ((a = e.baseTime),
              (s = 1),
              void 0 === (l = e.timescale) && (l = 1),
              void 0 === u && (u = !1),
              Ui(a, s, 1 / l, u));
          try {
            h.forEach(function (t) {
              return r(
                (function (t, e) {
                  var r = new DOMParser()
                    .parseFromString(t, "text/xml")
                    .getElementsByTagName("tt")[0];
                  if (!r) throw new Error("Invalid ttml");
                  var i = {
                      frameRate: 30,
                      subFrameRate: 1,
                      frameRateMultiplier: 0,
                      tickRate: 0,
                    },
                    n = Object.keys(i).reduce(function (t, e) {
                      return (t[e] = r.getAttribute("ttp:" + e) || i[e]), t;
                    }, {}),
                    a = "preserve" !== r.getAttribute("xml:space"),
                    s = ma(va(r, "styling", "style")),
                    l = ma(va(r, "layout", "region")),
                    u = va(r, "body", "[begin]");
                  return [].map
                    .call(u, function (t) {
                      var r = pa(t, a);
                      if (!r || !t.hasAttribute("begin")) return null;
                      var i = Ea(t.getAttribute("begin"), n),
                        u = Ea(t.getAttribute("dur"), n),
                        h = Ea(t.getAttribute("end"), n);
                      if (null === i) throw Ta(t);
                      if (null === h) {
                        if (null === u) throw Ta(t);
                        h = i + u;
                      }
                      var d = new zn(i - e, h - e, r);
                      d.id = la(d.startTime, d.endTime, d.text);
                      var c = (function (t, e, r) {
                          var i = "http://www.w3.org/ns/ttml#styling",
                            n = null,
                            a = [
                              "displayAlign",
                              "textAlign",
                              "color",
                              "backgroundColor",
                              "fontSize",
                              "fontFamily",
                            ],
                            s =
                              null != t && t.hasAttribute("style")
                                ? t.getAttribute("style")
                                : null;
                          return (
                            s && r.hasOwnProperty(s) && (n = r[s]),
                            a.reduce(function (r, a) {
                              var s = ya(e, i, a) || ya(t, i, a) || ya(n, i, a);
                              return s && (r[a] = s), r;
                            }, {})
                          );
                        })(
                          l[t.getAttribute("region")],
                          s[t.getAttribute("style")],
                          s
                        ),
                        f = c.textAlign;
                      if (f) {
                        var g = fa[f];
                        g && (d.lineAlign = g), (d.align = f);
                      }
                      return o(d, c), d;
                    })
                    .filter(function (t) {
                      return null !== t;
                    });
                })(t, d)
              );
            });
          } catch (t) {
            i(t);
          }
        } else i(new Error("Could not parse IMSC1 mdat"));
      }
      function va(t, e, r) {
        var i = t.getElementsByTagName(e)[0];
        return i ? [].slice.call(i.querySelectorAll(r)) : [];
      }
      function ma(t) {
        return t.reduce(function (t, e) {
          var r = e.getAttribute("xml:id");
          return r && (t[r] = e), t;
        }, {});
      }
      function pa(t, e) {
        return [].slice.call(t.childNodes).reduce(function (t, r, i) {
          var n;
          return "br" === r.nodeName && i
            ? t + "\n"
            : null != (n = r.childNodes) && n.length
            ? pa(r, e)
            : e
            ? t + r.textContent.trim().replace(/\s+/g, " ")
            : t + r.textContent;
        }, "");
      }
      function ya(t, e, r) {
        return t && t.hasAttributeNS(e, r) ? t.getAttributeNS(e, r) : null;
      }
      function Ta(t) {
        return new Error("Could not parse ttml timestamp " + t);
      }
      function Ea(t, e) {
        if (!t) return null;
        var r = $n(t);
        return (
          null === r &&
            (da.test(t)
              ? (r = (function (t, e) {
                  var r = da.exec(t),
                    i = (0 | r[4]) + (0 | r[5]) / e.subFrameRate;
                  return (
                    3600 * (0 | r[1]) +
                    60 * (0 | r[2]) +
                    (0 | r[3]) +
                    i / e.frameRate
                  );
                })(t, e))
              : ca.test(t) &&
                (r = (function (t, e) {
                  var r = ca.exec(t),
                    i = Number(r[1]);
                  switch (r[2]) {
                    case "h":
                      return 3600 * i;
                    case "m":
                      return 60 * i;
                    case "ms":
                      return 1e3 * i;
                    case "f":
                      return i / e.frameRate;
                    case "t":
                      return i / e.tickRate;
                  }
                  return i;
                })(t, e))),
          r
        );
      }
      var Sa = (function () {
        function t(t) {
          if (
            ((this.hls = void 0),
            (this.media = null),
            (this.config = void 0),
            (this.enabled = !0),
            (this.Cues = void 0),
            (this.textTracks = []),
            (this.tracks = []),
            (this.initPTS = []),
            (this.unparsedVttFrags = []),
            (this.captionsTracks = {}),
            (this.nonNativeCaptionsTracks = {}),
            (this.cea608Parser1 = void 0),
            (this.cea608Parser2 = void 0),
            (this.lastSn = -1),
            (this.lastPartIndex = -1),
            (this.prevCC = -1),
            (this.vttCCs = {
              ccOffset: 0,
              presentationOffset: 0,
              0: { start: 0, prevCC: -1, new: !0 },
            }),
            (this.captionsProperties = void 0),
            (this.hls = t),
            (this.config = t.config),
            (this.Cues = t.config.cueHandler),
            (this.captionsProperties = {
              textTrack1: {
                label: this.config.captionsTextTrack1Label,
                languageCode: this.config.captionsTextTrack1LanguageCode,
              },
              textTrack2: {
                label: this.config.captionsTextTrack2Label,
                languageCode: this.config.captionsTextTrack2LanguageCode,
              },
              textTrack3: {
                label: this.config.captionsTextTrack3Label,
                languageCode: this.config.captionsTextTrack3LanguageCode,
              },
              textTrack4: {
                label: this.config.captionsTextTrack4Label,
                languageCode: this.config.captionsTextTrack4LanguageCode,
              },
            }),
            this.config.enableCEA708Captions)
          ) {
            var e = new Xn(this, "textTrack1"),
              r = new Xn(this, "textTrack2"),
              i = new Xn(this, "textTrack3"),
              n = new Xn(this, "textTrack4");
            (this.cea608Parser1 = new Wn(1, e, r)),
              (this.cea608Parser2 = new Wn(3, i, n));
          }
          t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
            t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
            t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
            t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
            t.on(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
            t.on(S.FRAG_LOADING, this.onFragLoading, this),
            t.on(S.FRAG_LOADED, this.onFragLoaded, this),
            t.on(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
            t.on(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
            t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
            t.on(S.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
            t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this);
        }
        var e = t.prototype;
        return (
          (e.destroy = function () {
            var t = this.hls;
            t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
              t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
              t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
              t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
              t.off(
                S.SUBTITLE_TRACKS_UPDATED,
                this.onSubtitleTracksUpdated,
                this
              ),
              t.off(S.FRAG_LOADING, this.onFragLoading, this),
              t.off(S.FRAG_LOADED, this.onFragLoaded, this),
              t.off(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
              t.off(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
              t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
              t.off(
                S.SUBTITLE_TRACKS_CLEARED,
                this.onSubtitleTracksCleared,
                this
              ),
              t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
              (this.hls =
                this.config =
                this.cea608Parser1 =
                this.cea608Parser2 =
                  null);
          }),
          (e.addCues = function (t, e, r, i, n) {
            for (var a, s, o, l, u = !1, h = n.length; h--; ) {
              var d = n[h],
                c =
                  ((a = d[0]),
                  (s = d[1]),
                  (o = e),
                  (l = r),
                  Math.min(s, l) - Math.max(a, o));
              if (
                c >= 0 &&
                ((d[0] = Math.min(d[0], e)),
                (d[1] = Math.max(d[1], r)),
                (u = !0),
                c / (r - e) > 0.5)
              )
                return;
            }
            if ((u || n.push([e, r]), this.config.renderTextTracksNatively)) {
              var f = this.captionsTracks[t];
              this.Cues.newCue(f, e, r, i);
            } else {
              var g = this.Cues.newCue(null, e, r, i);
              this.hls.trigger(S.CUES_PARSED, {
                type: "captions",
                cues: g,
                track: t,
              });
            }
          }),
          (e.onInitPtsFound = function (t, e) {
            var r = this,
              i = e.frag,
              n = e.id,
              a = e.initPTS,
              s = e.timescale,
              o = this.unparsedVttFrags;
            "main" === n &&
              (this.initPTS[i.cc] = { baseTime: a, timescale: s }),
              o.length &&
                ((this.unparsedVttFrags = []),
                o.forEach(function (t) {
                  r.onFragLoaded(S.FRAG_LOADED, t);
                }));
          }),
          (e.getExistingTrack = function (t) {
            var e = this.media;
            if (e)
              for (var r = 0; r < e.textTracks.length; r++) {
                var i = e.textTracks[r];
                if (i[t]) return i;
              }
            return null;
          }),
          (e.createCaptionsTrack = function (t) {
            this.config.renderTextTracksNatively
              ? this.createNativeTrack(t)
              : this.createNonNativeTrack(t);
          }),
          (e.createNativeTrack = function (t) {
            if (!this.captionsTracks[t]) {
              var e = this.captionsProperties,
                r = this.captionsTracks,
                i = this.media,
                n = e[t],
                a = n.label,
                s = n.languageCode,
                o = this.getExistingTrack(t);
              if (o) (r[t] = o), Le(r[t]), Ee(r[t], i);
              else {
                var l = this.createTextTrack("captions", a, s);
                l && ((l[t] = !0), (r[t] = l));
              }
            }
          }),
          (e.createNonNativeTrack = function (t) {
            if (!this.nonNativeCaptionsTracks[t]) {
              var e = this.captionsProperties[t];
              if (e) {
                var r = {
                  _id: t,
                  label: e.label,
                  kind: "captions",
                  default: !!e.media && !!e.media.default,
                  closedCaptions: e.media,
                };
                (this.nonNativeCaptionsTracks[t] = r),
                  this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, {
                    tracks: [r],
                  });
              }
            }
          }),
          (e.createTextTrack = function (t, e, r) {
            var i = this.media;
            if (i) return i.addTextTrack(t, e, r);
          }),
          (e.onMediaAttaching = function (t, e) {
            (this.media = e.media), this._cleanTracks();
          }),
          (e.onMediaDetaching = function () {
            var t = this.captionsTracks;
            Object.keys(t).forEach(function (e) {
              Le(t[e]), delete t[e];
            }),
              (this.nonNativeCaptionsTracks = {});
          }),
          (e.onManifestLoading = function () {
            (this.lastSn = -1),
              (this.lastPartIndex = -1),
              (this.prevCC = -1),
              (this.vttCCs = {
                ccOffset: 0,
                presentationOffset: 0,
                0: { start: 0, prevCC: -1, new: !0 },
              }),
              this._cleanTracks(),
              (this.tracks = []),
              (this.captionsTracks = {}),
              (this.nonNativeCaptionsTracks = {}),
              (this.textTracks = []),
              (this.unparsedVttFrags = []),
              (this.initPTS = []),
              this.cea608Parser1 &&
                this.cea608Parser2 &&
                (this.cea608Parser1.reset(), this.cea608Parser2.reset());
          }),
          (e._cleanTracks = function () {
            var t = this.media;
            if (t) {
              var e = t.textTracks;
              if (e) for (var r = 0; r < e.length; r++) Le(e[r]);
            }
          }),
          (e.onSubtitleTracksUpdated = function (t, e) {
            var r = this,
              i = e.subtitleTracks || [],
              n = i.some(function (t) {
                return t.textCodec === ha;
              });
            if (this.config.enableWebVTT || (n && this.config.enableIMSC1)) {
              if (Tn(this.tracks, i)) return void (this.tracks = i);
              if (
                ((this.textTracks = []),
                (this.tracks = i),
                this.config.renderTextTracksNatively)
              ) {
                var a = this.media ? this.media.textTracks : null;
                this.tracks.forEach(function (t, e) {
                  var i;
                  if (a && e < a.length) {
                    for (var n = null, s = 0; s < a.length; s++)
                      if (La(a[s], t)) {
                        n = a[s];
                        break;
                      }
                    n && (i = n);
                  }
                  if (i) Le(i);
                  else {
                    var o = r._captionsOrSubtitlesFromCharacteristics(t);
                    (i = r.createTextTrack(o, t.name, t.lang)) &&
                      (i.mode = "disabled");
                  }
                  i && ((i.groupId = t.groupId), r.textTracks.push(i));
                });
              } else if (this.tracks.length) {
                var s = this.tracks.map(function (t) {
                  return {
                    label: t.name,
                    kind: t.type.toLowerCase(),
                    default: t.default,
                    subtitleTrack: t,
                  };
                });
                this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, { tracks: s });
              }
            }
          }),
          (e._captionsOrSubtitlesFromCharacteristics = function (t) {
            if (t.attrs.CHARACTERISTICS) {
              var e = /transcribes-spoken-dialog/gi.test(
                  t.attrs.CHARACTERISTICS
                ),
                r = /describes-music-and-sound/gi.test(t.attrs.CHARACTERISTICS);
              if (e && r) return "captions";
            }
            return "subtitles";
          }),
          (e.onManifestLoaded = function (t, e) {
            var r = this;
            this.config.enableCEA708Captions &&
              e.captions &&
              e.captions.forEach(function (t) {
                var e = /(?:CC|SERVICE)([1-4])/.exec(t.instreamId);
                if (e) {
                  var i = "textTrack" + e[1],
                    n = r.captionsProperties[i];
                  n &&
                    ((n.label = t.name),
                    t.lang && (n.languageCode = t.lang),
                    (n.media = t));
                }
              });
          }),
          (e.closedCaptionsForLevel = function (t) {
            var e = this.hls.levels[t.level];
            return null == e ? void 0 : e.attrs["CLOSED-CAPTIONS"];
          }),
          (e.onFragLoading = function (t, e) {
            var r = this.cea608Parser1,
              i = this.cea608Parser2,
              n = this.lastSn,
              a = this.lastPartIndex;
            if (this.enabled && r && i && e.frag.type === ge) {
              var s,
                o,
                l = e.frag.sn,
                u =
                  null !=
                  (s = null == e || null == (o = e.part) ? void 0 : o.index)
                    ? s
                    : -1;
              l === n + 1 || (l === n && u === a + 1) || (r.reset(), i.reset()),
                (this.lastSn = l),
                (this.lastPartIndex = u);
            }
          }),
          (e.onFragLoaded = function (t, e) {
            var r = e.frag,
              i = e.payload;
            if (r.type === me)
              if (i.byteLength) {
                var n = r.decryptdata,
                  a = "stats" in e;
                if (null == n || !n.encrypted || a) {
                  var s = this.tracks[r.level],
                    o = this.vttCCs;
                  o[r.cc] ||
                    ((o[r.cc] = {
                      start: r.start,
                      prevCC: this.prevCC,
                      new: !0,
                    }),
                    (this.prevCC = r.cc)),
                    s && s.textCodec === ha
                      ? this._parseIMSC1(r, i)
                      : this._parseVTTs(e);
                }
              } else
                this.hls.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                  success: !1,
                  frag: r,
                  error: new Error("Empty subtitle payload"),
                });
          }),
          (e._parseIMSC1 = function (t, e) {
            var r = this,
              i = this.hls;
            ga(
              e,
              this.initPTS[t.cc],
              function (e) {
                r._appendCues(e, t.level),
                  i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                    success: !0,
                    frag: t,
                  });
              },
              function (e) {
                w.log("Failed to parse IMSC1: " + e),
                  i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                    success: !1,
                    frag: t,
                    error: e,
                  });
              }
            );
          }),
          (e._parseVTTs = function (t) {
            var e,
              r = this,
              i = t.frag,
              n = t.payload,
              a = this.initPTS,
              s = this.unparsedVttFrags,
              o = a.length - 1;
            if (a[i.cc] || -1 !== o) {
              var l = this.hls;
              ua(
                null != (e = i.initSegment) && e.data
                  ? xt(i.initSegment.data, new Uint8Array(n))
                  : n,
                this.initPTS[i.cc],
                this.vttCCs,
                i.cc,
                i.start,
                function (t) {
                  r._appendCues(t, i.level),
                    l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                      success: !0,
                      frag: i,
                    });
                },
                function (e) {
                  var a = "Missing initPTS for VTT MPEGTS" === e.message;
                  a ? s.push(t) : r._fallbackToIMSC1(i, n),
                    w.log("Failed to parse VTT cue: " + e),
                    (a && o > i.cc) ||
                      l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                        success: !1,
                        frag: i,
                        error: e,
                      });
                }
              );
            } else s.push(t);
          }),
          (e._fallbackToIMSC1 = function (t, e) {
            var r = this,
              i = this.tracks[t.level];
            i.textCodec ||
              ga(
                e,
                this.initPTS[t.cc],
                function () {
                  (i.textCodec = ha), r._parseIMSC1(t, e);
                },
                function () {
                  i.textCodec = "wvtt";
                }
              );
          }),
          (e._appendCues = function (t, e) {
            var r = this.hls;
            if (this.config.renderTextTracksNatively) {
              var i = this.textTracks[e];
              if (!i || "disabled" === i.mode) return;
              t.forEach(function (t) {
                return Se(i, t);
              });
            } else {
              var n = this.tracks[e];
              if (!n) return;
              var a = n.default ? "default" : "subtitles" + e;
              r.trigger(S.CUES_PARSED, {
                type: "subtitles",
                cues: t,
                track: a,
              });
            }
          }),
          (e.onFragDecrypted = function (t, e) {
            e.frag.type === me && this.onFragLoaded(S.FRAG_LOADED, e);
          }),
          (e.onSubtitleTracksCleared = function () {
            (this.tracks = []), (this.captionsTracks = {});
          }),
          (e.onFragParsingUserdata = function (t, e) {
            var r = this.cea608Parser1,
              i = this.cea608Parser2;
            if (this.enabled && r && i) {
              var n = e.frag,
                a = e.samples;
              if (n.type !== ge || "NONE" !== this.closedCaptionsForLevel(n))
                for (var s = 0; s < a.length; s++) {
                  var o = a[s].bytes;
                  if (o) {
                    var l = this.extractCea608Data(o);
                    r.addData(a[s].pts, l[0]), i.addData(a[s].pts, l[1]);
                  }
                }
            }
          }),
          (e.onBufferFlushing = function (t, e) {
            var r = e.startOffset,
              i = e.endOffset,
              n = e.endOffsetSubtitles,
              a = e.type,
              s = this.media;
            if (s && !(s.currentTime < i)) {
              if (!a || "video" === a) {
                var o = this.captionsTracks;
                Object.keys(o).forEach(function (t) {
                  return Re(o[t], r, i);
                });
              }
              if (
                this.config.renderTextTracksNatively &&
                0 === r &&
                void 0 !== n
              ) {
                var l = this.textTracks;
                Object.keys(l).forEach(function (t) {
                  return Re(l[t], r, n);
                });
              }
            }
          }),
          (e.extractCea608Data = function (t) {
            for (var e = [[], []], r = 31 & t[0], i = 2, n = 0; n < r; n++) {
              var a = t[i++],
                s = 127 & t[i++],
                o = 127 & t[i++];
              if ((0 !== s || 0 !== o) && 0 != (4 & a)) {
                var l = 3 & a;
                (0 !== l && 1 !== l) || (e[l].push(s), e[l].push(o));
              }
            }
            return e;
          }),
          t
        );
      })();
      function La(t, e) {
        return !!t && t.label === e.name && !(t.textTrack1 || t.textTrack2);
      }
      var Ra = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.autoLevelCapping = void 0),
              (this.firstLevel = void 0),
              (this.media = void 0),
              (this.restrictedLevels = void 0),
              (this.timer = void 0),
              (this.clientRect = void 0),
              (this.streamController = void 0),
              (this.hls = t),
              (this.autoLevelCapping = Number.POSITIVE_INFINITY),
              (this.firstLevel = -1),
              (this.media = null),
              (this.restrictedLevels = []),
              (this.timer = void 0),
              (this.clientRect = null),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.setStreamController = function (t) {
              this.streamController = t;
            }),
            (e.destroy = function () {
              this.unregisterListener(),
                this.hls.config.capLevelToPlayerSize && this.stopCapping(),
                (this.media = null),
                (this.clientRect = null),
                (this.hls = this.streamController = null);
            }),
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this);
            }),
            (e.unregisterListener = function () {
              var t = this.hls;
              t.off(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this);
            }),
            (e.onFpsDropLevelCapping = function (t, e) {
              var r = this.hls.levels[e.droppedLevel];
              this.isLevelAllowed(r) &&
                this.restrictedLevels.push({
                  bitrate: r.bitrate,
                  height: r.height,
                  width: r.width,
                });
            }),
            (e.onMediaAttaching = function (t, e) {
              (this.media =
                e.media instanceof HTMLVideoElement ? e.media : null),
                (this.clientRect = null);
            }),
            (e.onManifestParsed = function (t, e) {
              var r = this.hls;
              (this.restrictedLevels = []),
                (this.firstLevel = e.firstLevel),
                r.config.capLevelToPlayerSize && e.video && this.startCapping();
            }),
            (e.onBufferCodecs = function (t, e) {
              this.hls.config.capLevelToPlayerSize &&
                e.video &&
                this.startCapping();
            }),
            (e.onMediaDetaching = function () {
              this.stopCapping();
            }),
            (e.detectPlayerSize = function () {
              if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) {
                var t = this.hls.levels;
                if (t.length) {
                  var e = this.hls;
                  (e.autoLevelCapping = this.getMaxLevel(t.length - 1)),
                    e.autoLevelCapping > this.autoLevelCapping &&
                      this.streamController &&
                      this.streamController.nextLevelSwitch(),
                    (this.autoLevelCapping = e.autoLevelCapping);
                }
              }
            }),
            (e.getMaxLevel = function (e) {
              var r = this,
                i = this.hls.levels;
              if (!i.length) return -1;
              var n = i.filter(function (t, i) {
                return r.isLevelAllowed(t) && i <= e;
              });
              return (
                (this.clientRect = null),
                t.getMaxLevelByMediaSize(n, this.mediaWidth, this.mediaHeight)
              );
            }),
            (e.startCapping = function () {
              this.timer ||
                ((this.autoLevelCapping = Number.POSITIVE_INFINITY),
                (this.hls.firstLevel = this.getMaxLevel(this.firstLevel)),
                self.clearInterval(this.timer),
                (this.timer = self.setInterval(
                  this.detectPlayerSize.bind(this),
                  1e3
                )),
                this.detectPlayerSize());
            }),
            (e.stopCapping = function () {
              (this.restrictedLevels = []),
                (this.firstLevel = -1),
                (this.autoLevelCapping = Number.POSITIVE_INFINITY),
                this.timer &&
                  (self.clearInterval(this.timer), (this.timer = void 0));
            }),
            (e.getDimensions = function () {
              if (this.clientRect) return this.clientRect;
              var t = this.media,
                e = { width: 0, height: 0 };
              if (t) {
                var r = t.getBoundingClientRect();
                (e.width = r.width),
                  (e.height = r.height),
                  e.width ||
                    e.height ||
                    ((e.width = r.right - r.left || t.width || 0),
                    (e.height = r.bottom - r.top || t.height || 0));
              }
              return (this.clientRect = e), e;
            }),
            (e.isLevelAllowed = function (t) {
              return !this.restrictedLevels.some(function (e) {
                return (
                  t.bitrate === e.bitrate &&
                  t.width === e.width &&
                  t.height === e.height
                );
              });
            }),
            (t.getMaxLevelByMediaSize = function (t, e, r) {
              if (null == t || !t.length) return -1;
              for (var i, n, a = t.length - 1, s = 0; s < t.length; s += 1) {
                var o = t[s];
                if (
                  (o.width >= e || o.height >= r) &&
                  ((i = o),
                  !(n = t[s + 1]) ||
                    i.width !== n.width ||
                    i.height !== n.height)
                ) {
                  a = s;
                  break;
                }
              }
              return a;
            }),
            a(t, [
              {
                key: "mediaWidth",
                get: function () {
                  return this.getDimensions().width * this.contentScaleFactor;
                },
              },
              {
                key: "mediaHeight",
                get: function () {
                  return this.getDimensions().height * this.contentScaleFactor;
                },
              },
              {
                key: "contentScaleFactor",
                get: function () {
                  var t = 1;
                  if (!this.hls.config.ignoreDevicePixelRatio)
                    try {
                      t = self.devicePixelRatio;
                    } catch (t) {}
                  return t;
                },
              },
            ]),
            t
          );
        })(),
        Aa = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.isVideoPlaybackQualityAvailable = !1),
              (this.timer = void 0),
              (this.media = null),
              (this.lastTime = void 0),
              (this.lastDroppedFrames = 0),
              (this.lastDecodedFrames = 0),
              (this.streamController = void 0),
              (this.hls = t),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.setStreamController = function (t) {
              this.streamController = t;
            }),
            (e.registerListeners = function () {
              this.hls.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this);
            }),
            (e.destroy = function () {
              this.timer && clearInterval(this.timer),
                this.unregisterListeners(),
                (this.isVideoPlaybackQualityAvailable = !1),
                (this.media = null);
            }),
            (e.onMediaAttaching = function (t, e) {
              var r = this.hls.config;
              if (r.capLevelOnFPSDrop) {
                var i =
                  e.media instanceof self.HTMLVideoElement ? e.media : null;
                (this.media = i),
                  i &&
                    "function" == typeof i.getVideoPlaybackQuality &&
                    (this.isVideoPlaybackQualityAvailable = !0),
                  self.clearInterval(this.timer),
                  (this.timer = self.setInterval(
                    this.checkFPSInterval.bind(this),
                    r.fpsDroppedMonitoringPeriod
                  ));
              }
            }),
            (e.checkFPS = function (t, e, r) {
              var i = performance.now();
              if (e) {
                if (this.lastTime) {
                  var n = i - this.lastTime,
                    a = r - this.lastDroppedFrames,
                    s = e - this.lastDecodedFrames,
                    o = (1e3 * a) / n,
                    l = this.hls;
                  if (
                    (l.trigger(S.FPS_DROP, {
                      currentDropped: a,
                      currentDecoded: s,
                      totalDroppedFrames: r,
                    }),
                    o > 0 && a > l.config.fpsDroppedMonitoringThreshold * s)
                  ) {
                    var u = l.currentLevel;
                    w.warn(
                      "drop FPS ratio greater than max allowed value for currentLevel: " +
                        u
                    ),
                      u > 0 &&
                        (-1 === l.autoLevelCapping ||
                          l.autoLevelCapping >= u) &&
                        ((u -= 1),
                        l.trigger(S.FPS_DROP_LEVEL_CAPPING, {
                          level: u,
                          droppedLevel: l.currentLevel,
                        }),
                        (l.autoLevelCapping = u),
                        this.streamController.nextLevelSwitch());
                  }
                }
                (this.lastTime = i),
                  (this.lastDroppedFrames = r),
                  (this.lastDecodedFrames = e);
              }
            }),
            (e.checkFPSInterval = function () {
              var t = this.media;
              if (t)
                if (this.isVideoPlaybackQualityAvailable) {
                  var e = t.getVideoPlaybackQuality();
                  this.checkFPS(t, e.totalVideoFrames, e.droppedVideoFrames);
                } else
                  this.checkFPS(
                    t,
                    t.webkitDecodedFrameCount,
                    t.webkitDroppedFrameCount
                  );
            }),
            t
          );
        })(),
        ka = "[eme]",
        ba = (function () {
          function t(e) {
            (this.hls = void 0),
              (this.config = void 0),
              (this.media = null),
              (this.keyFormatPromise = null),
              (this.keySystemAccessPromises = {}),
              (this._requestLicenseFailureCount = 0),
              (this.mediaKeySessions = []),
              (this.keyIdToKeySessionPromise = {}),
              (this.setMediaKeysQueue = t.CDMCleanupPromise
                ? [t.CDMCleanupPromise]
                : []),
              (this.onMediaEncrypted = this._onMediaEncrypted.bind(this)),
              (this.onWaitingForKey = this._onWaitingForKey.bind(this)),
              (this.debug = w.debug.bind(w, ka)),
              (this.log = w.log.bind(w, ka)),
              (this.warn = w.warn.bind(w, ka)),
              (this.error = w.error.bind(w, ka)),
              (this.hls = e),
              (this.config = e.config),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              this.unregisterListeners(), this.onMediaDetached();
              var t = this.config;
              (t.requestMediaKeySystemAccessFunc = null),
                (t.licenseXhrSetup = t.licenseResponseCallback = void 0),
                (t.drmSystems = t.drmSystemOptions = {}),
                (this.hls =
                  this.onMediaEncrypted =
                  this.onWaitingForKey =
                  this.keyIdToKeySessionPromise =
                    null),
                (this.config = null);
            }),
            (e.registerListeners = function () {
              this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.MANIFEST_LOADED, this.onManifestLoaded, this);
            }),
            (e.unregisterListeners = function () {
              this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.MANIFEST_LOADED, this.onManifestLoaded, this);
            }),
            (e.getLicenseServerUrl = function (t) {
              var e = this.config,
                r = e.drmSystems,
                i = e.widevineLicenseUrl,
                n = r[t];
              if (n) return n.licenseUrl;
              if (t === j.WIDEVINE && i) return i;
              throw new Error(
                'no license server URL configured for key-system "' + t + '"'
              );
            }),
            (e.getServerCertificateUrl = function (t) {
              var e = this.config.drmSystems[t];
              if (e) return e.serverCertificateUrl;
              this.log(
                'No Server Certificate in config.drmSystems["' + t + '"]'
              );
            }),
            (e.attemptKeySystemAccess = function (t) {
              var e = this,
                r = this.hls.levels,
                i = function (t, e, r) {
                  return !!t && r.indexOf(t) === e;
                },
                n = r
                  .map(function (t) {
                    return t.audioCodec;
                  })
                  .filter(i),
                a = r
                  .map(function (t) {
                    return t.videoCodec;
                  })
                  .filter(i);
              return (
                n.length + a.length === 0 && a.push("avc1.42e01e"),
                new Promise(function (r, i) {
                  !(function t(s) {
                    var o = s.shift();
                    e.getMediaKeysPromise(o, n, a)
                      .then(function (t) {
                        return r({ keySystem: o, mediaKeys: t });
                      })
                      .catch(function (e) {
                        s.length
                          ? t(s)
                          : i(
                              e instanceof Da
                                ? e
                                : new Da(
                                    {
                                      type: L.KEY_SYSTEM_ERROR,
                                      details: R.KEY_SYSTEM_NO_ACCESS,
                                      error: e,
                                      fatal: !0,
                                    },
                                    e.message
                                  )
                            );
                      });
                  })(t);
                })
              );
            }),
            (e.requestMediaKeySystemAccess = function (t, e) {
              var r = this.config.requestMediaKeySystemAccessFunc;
              if ("function" != typeof r) {
                var i =
                  "Configured requestMediaKeySystemAccess is not a function " +
                  r;
                return (
                  null === et &&
                    "http:" === self.location.protocol &&
                    (i =
                      "navigator.requestMediaKeySystemAccess is not available over insecure protocol " +
                      location.protocol),
                  Promise.reject(new Error(i))
                );
              }
              return r(t, e);
            }),
            (e.getMediaKeysPromise = function (t, e, r) {
              var i = this,
                n = (function (t, e, r, i) {
                  var n;
                  switch (t) {
                    case j.FAIRPLAY:
                      n = ["cenc", "sinf"];
                      break;
                    case j.WIDEVINE:
                    case j.PLAYREADY:
                      n = ["cenc"];
                      break;
                    case j.CLEARKEY:
                      n = ["cenc", "keyids"];
                      break;
                    default:
                      throw new Error("Unknown key-system: " + t);
                  }
                  return (function (t, e, r, i) {
                    return [
                      {
                        initDataTypes: t,
                        persistentState: i.persistentState || "not-allowed",
                        distinctiveIdentifier:
                          i.distinctiveIdentifier || "not-allowed",
                        sessionTypes: i.sessionTypes || [
                          i.sessionType || "temporary",
                        ],
                        audioCapabilities: e.map(function (t) {
                          return {
                            contentType: 'audio/mp4; codecs="' + t + '"',
                            robustness: i.audioRobustness || "",
                            encryptionScheme: i.audioEncryptionScheme || null,
                          };
                        }),
                        videoCapabilities: r.map(function (t) {
                          return {
                            contentType: 'video/mp4; codecs="' + t + '"',
                            robustness: i.videoRobustness || "",
                            encryptionScheme: i.videoEncryptionScheme || null,
                          };
                        }),
                      },
                    ];
                  })(n, e, r, i);
                })(t, e, r, this.config.drmSystemOptions),
                a = this.keySystemAccessPromises[t],
                s = null == a ? void 0 : a.keySystemAccess;
              if (!s) {
                this.log(
                  'Requesting encrypted media "' +
                    t +
                    '" key-system access with config: ' +
                    JSON.stringify(n)
                ),
                  (s = this.requestMediaKeySystemAccess(t, n));
                var o = (this.keySystemAccessPromises[t] = {
                  keySystemAccess: s,
                });
                return (
                  s.catch(function (e) {
                    i.log(
                      'Failed to obtain access to key-system "' + t + '": ' + e
                    );
                  }),
                  s.then(function (e) {
                    i.log(
                      'Access for key-system "' + e.keySystem + '" obtained'
                    );
                    var r = i.fetchServerCertificate(t);
                    return (
                      i.log('Create media-keys for "' + t + '"'),
                      (o.mediaKeys = e.createMediaKeys().then(function (e) {
                        return (
                          i.log('Media-keys created for "' + t + '"'),
                          r.then(function (r) {
                            return r
                              ? i.setMediaKeysServerCertificate(e, t, r)
                              : e;
                          })
                        );
                      })),
                      o.mediaKeys.catch(function (e) {
                        i.error(
                          'Failed to create media-keys for "' + t + '"}: ' + e
                        );
                      }),
                      o.mediaKeys
                    );
                  })
                );
              }
              return s.then(function () {
                return a.mediaKeys;
              });
            }),
            (e.createMediaKeySessionContext = function (t) {
              var e = t.decryptdata,
                r = t.keySystem,
                i = t.mediaKeys;
              this.log(
                'Creating key-system session "' +
                  r +
                  '" keyId: ' +
                  Tt(e.keyId || [])
              );
              var n = i.createSession(),
                a = {
                  decryptdata: e,
                  keySystem: r,
                  mediaKeys: i,
                  mediaKeysSession: n,
                  keyStatus: "status-pending",
                };
              return this.mediaKeySessions.push(a), a;
            }),
            (e.renewKeySession = function (t) {
              var e = t.decryptdata;
              if (e.pssh) {
                var r = this.createMediaKeySessionContext(t),
                  i = this.getKeyIdString(e);
                this.keyIdToKeySessionPromise[i] =
                  this.generateRequestWithPreferredKeySession(
                    r,
                    "cenc",
                    e.pssh,
                    "expired"
                  );
              } else
                this.warn(
                  "Could not renew expired session. Missing pssh initData."
                );
              this.removeSession(t);
            }),
            (e.getKeyIdString = function (t) {
              if (!t)
                throw new Error(
                  "Could not read keyId of undefined decryptdata"
                );
              if (null === t.keyId) throw new Error("keyId is null");
              return Tt(t.keyId);
            }),
            (e.updateKeySession = function (t, e) {
              var r,
                i = t.mediaKeysSession;
              return (
                this.log(
                  'Updating key-session "' +
                    i.sessionId +
                    '" for keyID ' +
                    Tt((null == (r = t.decryptdata) ? void 0 : r.keyId) || []) +
                    "\n      } (data length: " +
                    (e ? e.byteLength : e) +
                    ")"
                ),
                i.update(e)
              );
            }),
            (e.selectKeySystemFormat = function (t) {
              var e = Object.keys(t.levelkeys || {});
              return (
                this.keyFormatPromise ||
                  (this.log(
                    "Selecting key-system from fragment (sn: " +
                      t.sn +
                      " " +
                      t.type +
                      ": " +
                      t.level +
                      ") key formats " +
                      e.join(", ")
                  ),
                  (this.keyFormatPromise = this.getKeyFormatPromise(e))),
                this.keyFormatPromise
              );
            }),
            (e.getKeyFormatPromise = function (t) {
              var e = this;
              return new Promise(function (r, i) {
                var n = tt(e.config),
                  a = t.map($).filter(function (t) {
                    return !!t && -1 !== n.indexOf(t);
                  });
                return e
                  .getKeySystemSelectionPromise(a)
                  .then(function (t) {
                    var e = t.keySystem,
                      n = Z(e);
                    n
                      ? r(n)
                      : i(
                          new Error(
                            'Unable to find format for key-system "' + e + '"'
                          )
                        );
                  })
                  .catch(i);
              });
            }),
            (e.loadKey = function (t) {
              var e = this,
                r = t.keyInfo.decryptdata,
                i = this.getKeyIdString(r),
                n =
                  "(keyId: " +
                  i +
                  ' format: "' +
                  r.keyFormat +
                  '" method: ' +
                  r.method +
                  " uri: " +
                  r.uri +
                  ")";
              this.log("Starting session for key " + n);
              var a = this.keyIdToKeySessionPromise[i];
              return (
                a ||
                  (a = this.keyIdToKeySessionPromise[i] =
                    this.getKeySystemForKeyPromise(r).then(function (i) {
                      var a = i.keySystem,
                        s = i.mediaKeys;
                      return (
                        e.throwIfDestroyed(),
                        e.log(
                          "Handle encrypted media sn: " +
                            t.frag.sn +
                            " " +
                            t.frag.type +
                            ": " +
                            t.frag.level +
                            " using key " +
                            n
                        ),
                        e.attemptSetMediaKeys(a, s).then(function () {
                          e.throwIfDestroyed();
                          var t = e.createMediaKeySessionContext({
                            keySystem: a,
                            mediaKeys: s,
                            decryptdata: r,
                          });
                          return e.generateRequestWithPreferredKeySession(
                            t,
                            "cenc",
                            r.pssh,
                            "playlist-key"
                          );
                        })
                      );
                    })).catch(function (t) {
                    return e.handleError(t);
                  }),
                a
              );
            }),
            (e.throwIfDestroyed = function (t) {
              if (!this.hls) throw new Error("invalid state");
            }),
            (e.handleError = function (t) {
              this.hls &&
                (this.error(t.message),
                t instanceof Da
                  ? this.hls.trigger(S.ERROR, t.data)
                  : this.hls.trigger(S.ERROR, {
                      type: L.KEY_SYSTEM_ERROR,
                      details: R.KEY_SYSTEM_NO_KEYS,
                      error: t,
                      fatal: !0,
                    }));
            }),
            (e.getKeySystemForKeyPromise = function (t) {
              var e = this.getKeyIdString(t),
                r = this.keyIdToKeySessionPromise[e];
              if (!r) {
                var i = $(t.keyFormat),
                  n = i ? [i] : tt(this.config);
                return this.attemptKeySystemAccess(n);
              }
              return r;
            }),
            (e.getKeySystemSelectionPromise = function (t) {
              if ((t.length || (t = tt(this.config)), 0 === t.length))
                throw new Da(
                  {
                    type: L.KEY_SYSTEM_ERROR,
                    details: R.KEY_SYSTEM_NO_CONFIGURED_LICENSE,
                    fatal: !0,
                  },
                  "Missing key-system license configuration options " +
                    JSON.stringify({ drmSystems: this.config.drmSystems })
                );
              return this.attemptKeySystemAccess(t);
            }),
            (e._onMediaEncrypted = function (t) {
              var e = this,
                r = t.initDataType,
                i = t.initData;
              if (
                (this.debug(
                  '"' + t.type + '" event: init data type: "' + r + '"'
                ),
                null !== i)
              ) {
                var n, a;
                if ("sinf" === r && this.config.drmSystems[j.FAIRPLAY]) {
                  var s = Rt(new Uint8Array(i));
                  try {
                    var o = V(JSON.parse(s).sinf),
                      l = _t(new Uint8Array(o));
                    if (!l) return;
                    (n = l.subarray(8, 24)), (a = j.FAIRPLAY);
                  } catch (t) {
                    return void this.warn(
                      'Failed to parse sinf "encrypted" event message initData'
                    );
                  }
                } else {
                  var u = (function (t) {
                    if (!(t instanceof ArrayBuffer) || t.byteLength < 32)
                      return null;
                    var e = {
                        version: 0,
                        systemId: "",
                        kids: null,
                        data: null,
                      },
                      r = new DataView(t),
                      i = r.getUint32(0);
                    if (t.byteLength !== i && i > 44) return null;
                    if (1886614376 !== r.getUint32(4)) return null;
                    if (((e.version = r.getUint32(8) >>> 24), e.version > 1))
                      return null;
                    e.systemId = Tt(new Uint8Array(t, 12, 16));
                    var n = r.getUint32(28);
                    if (0 === e.version) {
                      if (i - 32 < n) return null;
                      e.data = new Uint8Array(t, 32, n);
                    } else if (1 === e.version) {
                      e.kids = [];
                      for (var a = 0; a < n; a++)
                        e.kids.push(new Uint8Array(t, 32 + 16 * a, 16));
                    }
                    return e;
                  })(i);
                  if (null === u) return;
                  0 === u.version &&
                    u.systemId === J &&
                    u.data &&
                    (n = u.data.subarray(8, 24)),
                    (a = (function (t) {
                      if (t === J) return j.WIDEVINE;
                    })(u.systemId));
                }
                if (a && n) {
                  for (
                    var h = Tt(n),
                      d = this.keyIdToKeySessionPromise,
                      c = this.mediaKeySessions,
                      f = d[h],
                      g = function () {
                        var t = c[v],
                          a = t.decryptdata;
                        if (a.pssh || !a.keyId) return "continue";
                        var s = Tt(a.keyId);
                        return h === s ||
                          -1 !== a.uri.replace(/-/g, "").indexOf(h)
                          ? ((f = d[s]),
                            delete d[s],
                            (a.pssh = new Uint8Array(i)),
                            (a.keyId = n),
                            (f = d[h] =
                              f.then(function () {
                                return e.generateRequestWithPreferredKeySession(
                                  t,
                                  r,
                                  i,
                                  "encrypted-event-key-match"
                                );
                              })),
                            "break")
                          : void 0;
                      },
                      v = 0;
                    v < c.length;
                    v++
                  ) {
                    var m = g();
                    if ("continue" !== m && "break" === m) break;
                  }
                  f ||
                    (f = d[h] =
                      this.getKeySystemSelectionPromise([a]).then(function (t) {
                        var a,
                          s = t.keySystem,
                          o = t.mediaKeys;
                        e.throwIfDestroyed();
                        var l = new Gt(
                          "ISO-23001-7",
                          h,
                          null != (a = Z(s)) ? a : ""
                        );
                        return (
                          (l.pssh = new Uint8Array(i)),
                          (l.keyId = n),
                          e.attemptSetMediaKeys(s, o).then(function () {
                            e.throwIfDestroyed();
                            var t = e.createMediaKeySessionContext({
                              decryptdata: l,
                              keySystem: s,
                              mediaKeys: o,
                            });
                            return e.generateRequestWithPreferredKeySession(
                              t,
                              r,
                              i,
                              "encrypted-event-no-match"
                            );
                          })
                        );
                      })),
                    f.catch(function (t) {
                      return e.handleError(t);
                    });
                }
              }
            }),
            (e._onWaitingForKey = function (t) {
              this.log('"' + t.type + '" event');
            }),
            (e.attemptSetMediaKeys = function (t, e) {
              var r = this,
                i = this.setMediaKeysQueue.slice();
              this.log('Setting media-keys for "' + t + '"');
              var n = Promise.all(i).then(function () {
                if (!r.media)
                  throw new Error(
                    "Attempted to set mediaKeys without media element attached"
                  );
                return r.media.setMediaKeys(e);
              });
              return (
                this.setMediaKeysQueue.push(n),
                n.then(function () {
                  r.log('Media-keys set for "' + t + '"'),
                    i.push(n),
                    (r.setMediaKeysQueue = r.setMediaKeysQueue.filter(function (
                      t
                    ) {
                      return -1 === i.indexOf(t);
                    }));
                })
              );
            }),
            (e.generateRequestWithPreferredKeySession = function (t, e, r, i) {
              var n,
                a,
                s = this,
                o =
                  null == (n = this.config.drmSystems) ||
                  null == (a = n[t.keySystem])
                    ? void 0
                    : a.generateRequest;
              if (o)
                try {
                  var l = o.call(this.hls, e, r, t);
                  if (!l)
                    throw new Error(
                      "Invalid response from configured generateRequest filter"
                    );
                  (e = l.initDataType),
                    (r = t.decryptdata.pssh =
                      l.initData ? new Uint8Array(l.initData) : null);
                } catch (t) {
                  var u;
                  if (
                    (this.warn(t.message),
                    null != (u = this.hls) && u.config.debug)
                  )
                    throw t;
                }
              if (null === r)
                return (
                  this.log(
                    'Skipping key-session request for "' + i + '" (no initData)'
                  ),
                  Promise.resolve(t)
                );
              var h = this.getKeyIdString(t.decryptdata);
              this.log(
                'Generating key-session request for "' +
                  i +
                  '": ' +
                  h +
                  " (init data type: " +
                  e +
                  " length: " +
                  (r ? r.byteLength : null) +
                  ")"
              );
              var d = new an();
              (t.mediaKeysSession.onmessage = function (e) {
                var r = t.mediaKeysSession;
                if (r) {
                  var i = e.messageType,
                    n = e.message;
                  s.log(
                    '"' +
                      i +
                      '" message event for session "' +
                      r.sessionId +
                      '" message size: ' +
                      n.byteLength
                  ),
                    "license-request" === i || "license-renewal" === i
                      ? s.renewLicense(t, n).catch(function (t) {
                          s.handleError(t), d.emit("error", t);
                        })
                      : "license-release" === i
                      ? t.keySystem === j.FAIRPLAY &&
                        (s.updateKeySession(t, W("acknowledged")),
                        s.removeSession(t))
                      : s.warn('unhandled media key message type "' + i + '"');
                } else d.emit("error", new Error("invalid state"));
              }),
                (t.mediaKeysSession.onkeystatuseschange = function (e) {
                  if (t.mediaKeysSession) {
                    s.onKeyStatusChange(t);
                    var r = t.keyStatus;
                    d.emit("keyStatus", r),
                      "expired" === r &&
                        (s.warn(t.keySystem + " expired for key " + h),
                        s.renewKeySession(t));
                  } else d.emit("error", new Error("invalid state"));
                });
              var c = new Promise(function (t, e) {
                d.on("error", e),
                  d.on("keyStatus", function (r) {
                    r.startsWith("usable")
                      ? t()
                      : "output-restricted" === r
                      ? e(
                          new Da(
                            {
                              type: L.KEY_SYSTEM_ERROR,
                              details: R.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED,
                              fatal: !1,
                            },
                            "HDCP level output restricted"
                          )
                        )
                      : "internal-error" === r
                      ? e(
                          new Da(
                            {
                              type: L.KEY_SYSTEM_ERROR,
                              details: R.KEY_SYSTEM_STATUS_INTERNAL_ERROR,
                              fatal: !0,
                            },
                            'key status changed to "' + r + '"'
                          )
                        )
                      : "expired" === r
                      ? e(new Error("key expired while generating request"))
                      : s.warn('unhandled key status change "' + r + '"');
                  });
              });
              return t.mediaKeysSession
                .generateRequest(e, r)
                .then(function () {
                  var e;
                  s.log(
                    'Request generated for key-session "' +
                      (null == (e = t.mediaKeysSession)
                        ? void 0
                        : e.sessionId) +
                      '" keyId: ' +
                      h
                  );
                })
                .catch(function (t) {
                  throw new Da(
                    {
                      type: L.KEY_SYSTEM_ERROR,
                      details: R.KEY_SYSTEM_NO_SESSION,
                      error: t,
                      fatal: !1,
                    },
                    "Error generating key-session request: " + t
                  );
                })
                .then(function () {
                  return c;
                })
                .catch(function (e) {
                  throw (d.removeAllListeners(), s.removeSession(t), e);
                })
                .then(function () {
                  return d.removeAllListeners(), t;
                });
            }),
            (e.onKeyStatusChange = function (t) {
              var e = this;
              t.mediaKeysSession.keyStatuses.forEach(function (r, i) {
                e.log(
                  'key status change "' +
                    r +
                    '" for keyStatuses keyId: ' +
                    Tt(
                      "buffer" in i
                        ? new Uint8Array(i.buffer, i.byteOffset, i.byteLength)
                        : new Uint8Array(i)
                    ) +
                    " session keyId: " +
                    Tt(new Uint8Array(t.decryptdata.keyId || [])) +
                    " uri: " +
                    t.decryptdata.uri
                ),
                  (t.keyStatus = r);
              });
            }),
            (e.fetchServerCertificate = function (t) {
              var e = this.config,
                r = new (0, e.loader)(e),
                n = this.getServerCertificateUrl(t);
              return n
                ? (this.log('Fetching serverCertificate for "' + t + '"'),
                  new Promise(function (a, s) {
                    var o = { responseType: "arraybuffer", url: n },
                      l = e.certLoadPolicy.default,
                      u = {
                        loadPolicy: l,
                        timeout: l.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0,
                      },
                      h = {
                        onSuccess: function (t, e, r, i) {
                          a(t.data);
                        },
                        onError: function (e, r, a, l) {
                          s(
                            new Da(
                              {
                                type: L.KEY_SYSTEM_ERROR,
                                details:
                                  R.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: a,
                                response: i({ url: o.url, data: void 0 }, e),
                              },
                              '"' +
                                t +
                                '" certificate request failed (' +
                                n +
                                "). Status: " +
                                e.code +
                                " (" +
                                e.text +
                                ")"
                            )
                          );
                        },
                        onTimeout: function (e, r, i) {
                          s(
                            new Da(
                              {
                                type: L.KEY_SYSTEM_ERROR,
                                details:
                                  R.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: i,
                                response: { url: o.url, data: void 0 },
                              },
                              '"' +
                                t +
                                '" certificate request timed out (' +
                                n +
                                ")"
                            )
                          );
                        },
                        onAbort: function (t, e, r) {
                          s(new Error("aborted"));
                        },
                      };
                    r.load(o, u, h);
                  }))
                : Promise.resolve();
            }),
            (e.setMediaKeysServerCertificate = function (t, e, r) {
              var i = this;
              return new Promise(function (n, a) {
                t.setServerCertificate(r)
                  .then(function (a) {
                    i.log(
                      "setServerCertificate " +
                        (a ? "success" : "not supported by CDM") +
                        " (" +
                        (null == r ? void 0 : r.byteLength) +
                        ') on "' +
                        e +
                        '"'
                    ),
                      n(t);
                  })
                  .catch(function (t) {
                    a(
                      new Da(
                        {
                          type: L.KEY_SYSTEM_ERROR,
                          details:
                            R.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED,
                          error: t,
                          fatal: !0,
                        },
                        t.message
                      )
                    );
                  });
              });
            }),
            (e.renewLicense = function (t, e) {
              var r = this;
              return this.requestLicense(t, new Uint8Array(e)).then(function (
                e
              ) {
                return r
                  .updateKeySession(t, new Uint8Array(e))
                  .catch(function (t) {
                    throw new Da(
                      {
                        type: L.KEY_SYSTEM_ERROR,
                        details: R.KEY_SYSTEM_SESSION_UPDATE_FAILED,
                        error: t,
                        fatal: !0,
                      },
                      t.message
                    );
                  });
              });
            }),
            (e.setupLicenseXHR = function (t, e, r, i) {
              var n = this,
                a = this.config.licenseXhrSetup;
              return a
                ? Promise.resolve()
                    .then(function () {
                      if (!r.decryptdata) throw new Error("Key removed");
                      return a.call(n.hls, t, e, r, i);
                    })
                    .catch(function (s) {
                      if (!r.decryptdata) throw s;
                      return t.open("POST", e, !0), a.call(n.hls, t, e, r, i);
                    })
                    .then(function (r) {
                      return (
                        t.readyState || t.open("POST", e, !0),
                        { xhr: t, licenseChallenge: r || i }
                      );
                    })
                : (t.open("POST", e, !0),
                  Promise.resolve({ xhr: t, licenseChallenge: i }));
            }),
            (e.requestLicense = function (t, e) {
              var r = this,
                i = this.config.keyLoadPolicy.default;
              return new Promise(function (n, a) {
                var s = r.getLicenseServerUrl(t.keySystem);
                r.log("Sending license request to URL: " + s);
                var o = new XMLHttpRequest();
                (o.responseType = "arraybuffer"),
                  (o.onreadystatechange = function () {
                    if (!r.hls || !t.mediaKeysSession)
                      return a(new Error("invalid state"));
                    if (4 === o.readyState)
                      if (200 === o.status) {
                        r._requestLicenseFailureCount = 0;
                        var l = o.response;
                        r.log(
                          "License received " +
                            (l instanceof ArrayBuffer ? l.byteLength : l)
                        );
                        var u = r.config.licenseResponseCallback;
                        if (u)
                          try {
                            l = u.call(r.hls, o, s, t);
                          } catch (t) {
                            r.error(t);
                          }
                        n(l);
                      } else {
                        var h = i.errorRetry,
                          d = h ? h.maxNumRetry : 0;
                        if (
                          (r._requestLicenseFailureCount++,
                          r._requestLicenseFailureCount > d ||
                            (o.status >= 400 && o.status < 500))
                        )
                          a(
                            new Da(
                              {
                                type: L.KEY_SYSTEM_ERROR,
                                details: R.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: o,
                                response: {
                                  url: s,
                                  data: void 0,
                                  code: o.status,
                                  text: o.statusText,
                                },
                              },
                              "License Request XHR failed (" +
                                s +
                                "). Status: " +
                                o.status +
                                " (" +
                                o.statusText +
                                ")"
                            )
                          );
                        else {
                          var c = d - r._requestLicenseFailureCount + 1;
                          r.warn(
                            "Retrying license request, " + c + " attempts left"
                          ),
                            r.requestLicense(t, e).then(n, a);
                        }
                      }
                  }),
                  t.licenseXhr &&
                    t.licenseXhr.readyState !== XMLHttpRequest.DONE &&
                    t.licenseXhr.abort(),
                  (t.licenseXhr = o),
                  r.setupLicenseXHR(o, s, t, e).then(function (t) {
                    var e = t.xhr,
                      r = t.licenseChallenge;
                    e.send(r);
                  });
              });
            }),
            (e.onMediaAttached = function (t, e) {
              if (this.config.emeEnabled) {
                var r = e.media;
                (this.media = r),
                  r.addEventListener("encrypted", this.onMediaEncrypted),
                  r.addEventListener("waitingforkey", this.onWaitingForKey);
              }
            }),
            (e.onMediaDetached = function () {
              var e = this,
                r = this.media,
                i = this.mediaKeySessions;
              r &&
                (r.removeEventListener("encrypted", this.onMediaEncrypted),
                r.removeEventListener("waitingforkey", this.onWaitingForKey),
                (this.media = null)),
                (this._requestLicenseFailureCount = 0),
                (this.setMediaKeysQueue = []),
                (this.mediaKeySessions = []),
                (this.keyIdToKeySessionPromise = {}),
                Gt.clearKeyUriToKeyIdMap();
              var n = i.length;
              t.CDMCleanupPromise = Promise.all(
                i
                  .map(function (t) {
                    return e.removeSession(t);
                  })
                  .concat(
                    null == r
                      ? void 0
                      : r.setMediaKeys(null).catch(function (t) {
                          e.log(
                            "Could not clear media keys: " +
                              t +
                              ". media.src: " +
                              (null == r ? void 0 : r.src)
                          );
                        })
                  )
              )
                .then(function () {
                  n &&
                    (e.log(
                      "finished closing key sessions and clearing media keys"
                    ),
                    (i.length = 0));
                })
                .catch(function (t) {
                  e.log(
                    "Could not close sessions and clear media keys: " +
                      t +
                      ". media.src: " +
                      (null == r ? void 0 : r.src)
                  );
                });
            }),
            (e.onManifestLoading = function () {
              this.keyFormatPromise = null;
            }),
            (e.onManifestLoaded = function (t, e) {
              var r = e.sessionKeys;
              if (r && this.config.emeEnabled && !this.keyFormatPromise) {
                var i = r.reduce(function (t, e) {
                  return (
                    -1 === t.indexOf(e.keyFormat) && t.push(e.keyFormat), t
                  );
                }, []);
                this.log(
                  "Selecting key-system from session-keys " + i.join(", ")
                ),
                  (this.keyFormatPromise = this.getKeyFormatPromise(i));
              }
            }),
            (e.removeSession = function (t) {
              var e = this,
                r = t.mediaKeysSession,
                i = t.licenseXhr;
              if (r) {
                this.log(
                  "Remove licenses and keys and close session " + r.sessionId
                ),
                  (r.onmessage = null),
                  (r.onkeystatuseschange = null),
                  i && i.readyState !== XMLHttpRequest.DONE && i.abort(),
                  (t.mediaKeysSession = t.decryptdata = t.licenseXhr = void 0);
                var n = this.mediaKeySessions.indexOf(t);
                return (
                  n > -1 && this.mediaKeySessions.splice(n, 1),
                  r
                    .remove()
                    .catch(function (t) {
                      e.log("Could not remove session: " + t);
                    })
                    .then(function () {
                      return r.close();
                    })
                    .catch(function (t) {
                      e.log("Could not close session: " + t);
                    })
                );
              }
            }),
            t
          );
        })();
      ba.CDMCleanupPromise = void 0;
      var Da = (function (t) {
          function e(e, r) {
            var i;
            return (
              ((i = t.call(this, r) || this).data = void 0),
              e.error || (e.error = new Error(r)),
              (i.data = e),
              (e.err = e.error),
              i
            );
          }
          return l(e, t), e;
        })(f(Error)),
        Ia = "m",
        wa = "a",
        Ca = "v",
        _a = "av",
        Pa = "i",
        xa = "tt",
        Fa = (function () {
          function t(e) {
            var r = this;
            (this.hls = void 0),
              (this.config = void 0),
              (this.media = void 0),
              (this.sid = void 0),
              (this.cid = void 0),
              (this.useHeaders = !1),
              (this.initialized = !1),
              (this.starved = !1),
              (this.buffering = !0),
              (this.audioBuffer = void 0),
              (this.videoBuffer = void 0),
              (this.onWaiting = function () {
                r.initialized && (r.starved = !0), (r.buffering = !0);
              }),
              (this.onPlaying = function () {
                r.initialized || (r.initialized = !0), (r.buffering = !1);
              }),
              (this.applyPlaylistData = function (t) {
                try {
                  r.apply(t, { ot: Ia, su: !r.initialized });
                } catch (t) {
                  w.warn("Could not generate manifest CMCD data.", t);
                }
              }),
              (this.applyFragmentData = function (t) {
                try {
                  var e = t.frag,
                    i = r.hls.levels[e.level],
                    n = r.getObjectType(e),
                    a = { d: 1e3 * e.duration, ot: n };
                  (n !== Ca && n !== wa && n != _a) ||
                    ((a.br = i.bitrate / 1e3),
                    (a.tb = r.getTopBandwidth(n) / 1e3),
                    (a.bl = r.getBufferLength(n))),
                    r.apply(t, a);
                } catch (t) {
                  w.warn("Could not generate segment CMCD data.", t);
                }
              }),
              (this.hls = e);
            var i = (this.config = e.config),
              n = i.cmcd;
            null != n &&
              ((i.pLoader = this.createPlaylistLoader()),
              (i.fLoader = this.createFragmentLoader()),
              (this.sid = n.sessionId || t.uuid()),
              (this.cid = n.contentId),
              (this.useHeaders = !0 === n.useHeaders),
              this.registerListeners());
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this);
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.onMediaDetached(),
                (this.hls =
                  this.config =
                  this.audioBuffer =
                  this.videoBuffer =
                    null);
            }),
            (e.onMediaAttached = function (t, e) {
              (this.media = e.media),
                this.media.addEventListener("waiting", this.onWaiting),
                this.media.addEventListener("playing", this.onPlaying);
            }),
            (e.onMediaDetached = function () {
              this.media &&
                (this.media.removeEventListener("waiting", this.onWaiting),
                this.media.removeEventListener("playing", this.onPlaying),
                (this.media = null));
            }),
            (e.onBufferCreated = function (t, e) {
              var r, i;
              (this.audioBuffer =
                null == (r = e.tracks.audio) ? void 0 : r.buffer),
                (this.videoBuffer =
                  null == (i = e.tracks.video) ? void 0 : i.buffer);
            }),
            (e.createData = function () {
              var t;
              return {
                v: 1,
                sf: "h",
                sid: this.sid,
                cid: this.cid,
                pr: null == (t = this.media) ? void 0 : t.playbackRate,
                mtp: this.hls.bandwidthEstimate / 1e3,
              };
            }),
            (e.apply = function (e, r) {
              void 0 === r && (r = {}), o(r, this.createData());
              var i = r.ot === Pa || r.ot === Ca || r.ot === _a;
              if (
                (this.starved &&
                  i &&
                  ((r.bs = !0), (r.su = !0), (this.starved = !1)),
                null == r.su && (r.su = this.buffering),
                this.useHeaders)
              ) {
                var n = t.toHeaders(r);
                if (!Object.keys(n).length) return;
                e.headers || (e.headers = {}), o(e.headers, n);
              } else {
                var a = t.toQuery(r);
                if (!a) return;
                e.url = t.appendQueryToUri(e.url, a);
              }
            }),
            (e.getObjectType = function (t) {
              var e = t.type;
              return "subtitle" === e
                ? xa
                : "initSegment" === t.sn
                ? Pa
                : "audio" === e
                ? wa
                : "main" === e
                ? this.hls.audioTracks.length
                  ? Ca
                  : _a
                : void 0;
            }),
            (e.getTopBandwidth = function (t) {
              var e,
                r = 0,
                i = this.hls;
              if (t === wa) e = i.audioTracks;
              else {
                var n = i.maxAutoLevel,
                  a = n > -1 ? n + 1 : i.levels.length;
                e = i.levels.slice(0, a);
              }
              for (var s, o = v(e); !(s = o()).done; ) {
                var l = s.value;
                l.bitrate > r && (r = l.bitrate);
              }
              return r > 0 ? r : NaN;
            }),
            (e.getBufferLength = function (t) {
              var e = this.hls.media,
                r = t === wa ? this.audioBuffer : this.videoBuffer;
              return r && e
                ? 1e3 *
                    Ir.bufferInfo(r, e.currentTime, this.config.maxBufferHole)
                      .len
                : NaN;
            }),
            (e.createPlaylistLoader = function () {
              var t = this.config.pLoader,
                e = this.applyPlaylistData,
                r = t || this.config.loader;
              return (function () {
                function t(t) {
                  (this.loader = void 0), (this.loader = new r(t));
                }
                var i = t.prototype;
                return (
                  (i.destroy = function () {
                    this.loader.destroy();
                  }),
                  (i.abort = function () {
                    this.loader.abort();
                  }),
                  (i.load = function (t, r, i) {
                    e(t), this.loader.load(t, r, i);
                  }),
                  a(t, [
                    {
                      key: "stats",
                      get: function () {
                        return this.loader.stats;
                      },
                    },
                    {
                      key: "context",
                      get: function () {
                        return this.loader.context;
                      },
                    },
                  ]),
                  t
                );
              })();
            }),
            (e.createFragmentLoader = function () {
              var t = this.config.fLoader,
                e = this.applyFragmentData,
                r = t || this.config.loader;
              return (function () {
                function t(t) {
                  (this.loader = void 0), (this.loader = new r(t));
                }
                var i = t.prototype;
                return (
                  (i.destroy = function () {
                    this.loader.destroy();
                  }),
                  (i.abort = function () {
                    this.loader.abort();
                  }),
                  (i.load = function (t, r, i) {
                    e(t), this.loader.load(t, r, i);
                  }),
                  a(t, [
                    {
                      key: "stats",
                      get: function () {
                        return this.loader.stats;
                      },
                    },
                    {
                      key: "context",
                      get: function () {
                        return this.loader.context;
                      },
                    },
                  ]),
                  t
                );
              })();
            }),
            (t.uuid = function () {
              var t = URL.createObjectURL(new Blob()),
                e = t.toString();
              return URL.revokeObjectURL(t), e.slice(e.lastIndexOf("/") + 1);
            }),
            (t.serialize = function (t) {
              for (
                var e,
                  r = [],
                  i = function (t) {
                    return (
                      !Number.isNaN(t) && null != t && "" !== t && !1 !== t
                    );
                  },
                  n = function (t) {
                    return Math.round(t);
                  },
                  a = function (t) {
                    return 100 * n(t / 100);
                  },
                  s = {
                    br: n,
                    d: n,
                    bl: a,
                    dl: a,
                    mtp: a,
                    nor: function (t) {
                      return encodeURIComponent(t);
                    },
                    rtp: a,
                    tb: n,
                  },
                  o = v(Object.keys(t || {}).sort());
                !(e = o()).done;

              ) {
                var l = e.value,
                  u = t[l];
                if (
                  i(u) &&
                  !(("v" === l && 1 === u) || ("pr" == l && 1 === u))
                ) {
                  var h = s[l];
                  h && (u = h(u));
                  var d = typeof u,
                    c = void 0;
                  (c =
                    "ot" === l || "sf" === l || "st" === l
                      ? l + "=" + u
                      : "boolean" === d
                      ? l
                      : "number" === d
                      ? l + "=" + u
                      : l + "=" + JSON.stringify(u)),
                    r.push(c);
                }
              }
              return r.join(",");
            }),
            (t.toHeaders = function (e) {
              for (
                var r = {},
                  i = ["Object", "Request", "Session", "Status"],
                  n = [{}, {}, {}, {}],
                  a = {
                    br: 0,
                    d: 0,
                    ot: 0,
                    tb: 0,
                    bl: 1,
                    dl: 1,
                    mtp: 1,
                    nor: 1,
                    nrr: 1,
                    su: 1,
                    cid: 2,
                    pr: 2,
                    sf: 2,
                    sid: 2,
                    st: 2,
                    v: 2,
                    bs: 3,
                    rtp: 3,
                  },
                  s = 0,
                  o = Object.keys(e);
                s < o.length;
                s++
              ) {
                var l = o[s];
                n[null != a[l] ? a[l] : 1][l] = e[l];
              }
              for (var u = 0; u < n.length; u++) {
                var h = t.serialize(n[u]);
                h && (r["CMCD-" + i[u]] = h);
              }
              return r;
            }),
            (t.toQuery = function (e) {
              return "CMCD=" + encodeURIComponent(t.serialize(e));
            }),
            (t.appendQueryToUri = function (t, e) {
              if (!e) return t;
              var r = t.includes("?") ? "&" : "?";
              return "" + t + r + e;
            }),
            t
          );
        })(),
        Ma = (function () {
          function t(t) {
            (this.hls = void 0),
              (this.log = void 0),
              (this.loader = null),
              (this.uri = null),
              (this.pathwayId = "."),
              (this.pathwayPriority = null),
              (this.timeToLoad = 300),
              (this.reloadTimer = -1),
              (this.updated = 0),
              (this.started = !1),
              (this.enabled = !0),
              (this.levels = null),
              (this.audioTracks = null),
              (this.subtitleTracks = null),
              (this.penalizedPathways = {}),
              (this.hls = t),
              (this.log = w.log.bind(w, "[content-steering]:")),
              this.registerListeners();
          }
          var e = t.prototype;
          return (
            (e.registerListeners = function () {
              var t = this.hls;
              t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.ERROR, this.onError, this);
            }),
            (e.unregisterListeners = function () {
              var t = this.hls;
              t &&
                (t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.ERROR, this.onError, this));
            }),
            (e.startLoad = function () {
              if (
                ((this.started = !0),
                self.clearTimeout(this.reloadTimer),
                this.enabled && this.uri)
              )
                if (this.updated) {
                  var t = Math.max(
                    1e3 * this.timeToLoad - (performance.now() - this.updated),
                    0
                  );
                  this.scheduleRefresh(this.uri, t);
                } else this.loadSteeringManifest(this.uri);
            }),
            (e.stopLoad = function () {
              (this.started = !1),
                this.loader && (this.loader.destroy(), (this.loader = null)),
                self.clearTimeout(this.reloadTimer);
            }),
            (e.destroy = function () {
              this.unregisterListeners(),
                this.stopLoad(),
                (this.hls = null),
                (this.levels = this.audioTracks = this.subtitleTracks = null);
            }),
            (e.removeLevel = function (t) {
              var e = this.levels;
              e &&
                (this.levels = e.filter(function (e) {
                  return e !== t;
                }));
            }),
            (e.onManifestLoading = function () {
              this.stopLoad(),
                (this.enabled = !0),
                (this.timeToLoad = 300),
                (this.updated = 0),
                (this.uri = null),
                (this.pathwayId = "."),
                (this.levels = this.audioTracks = this.subtitleTracks = null);
            }),
            (e.onManifestLoaded = function (t, e) {
              var r = e.contentSteering;
              null !== r &&
                ((this.pathwayId = r.pathwayId),
                (this.uri = r.uri),
                this.started && this.startLoad());
            }),
            (e.onManifestParsed = function (t, e) {
              (this.audioTracks = e.audioTracks),
                (this.subtitleTracks = e.subtitleTracks);
            }),
            (e.onError = function (t, e) {
              var r = e.errorAction;
              if ((null == r ? void 0 : r.action) === ir && r.flags === sr) {
                var i = this.pathwayPriority,
                  n = this.pathwayId;
                this.penalizedPathways[n] ||
                  (this.penalizedPathways[n] = performance.now()),
                  !i &&
                    this.levels &&
                    (i = this.levels.reduce(function (t, e) {
                      return (
                        -1 === t.indexOf(e.pathwayId) && t.push(e.pathwayId), t
                      );
                    }, [])),
                  i &&
                    i.length > 1 &&
                    (this.updatePathwayPriority(i),
                    (r.resolved = this.pathwayId !== n));
              }
            }),
            (e.filterParsedLevels = function (t) {
              this.levels = t;
              var e = this.getLevelsForPathway(this.pathwayId);
              if (0 === e.length) {
                var r = t[0].pathwayId;
                this.log(
                  "No levels found in Pathway " +
                    this.pathwayId +
                    '. Setting initial Pathway to "' +
                    r +
                    '"'
                ),
                  (e = this.getLevelsForPathway(r)),
                  (this.pathwayId = r);
              }
              return e.length !== t.length
                ? (this.log(
                    "Found " +
                      e.length +
                      "/" +
                      t.length +
                      ' levels in Pathway "' +
                      this.pathwayId +
                      '"'
                  ),
                  e)
                : t;
            }),
            (e.getLevelsForPathway = function (t) {
              return null === this.levels
                ? []
                : this.levels.filter(function (e) {
                    return t === e.pathwayId;
                  });
            }),
            (e.updatePathwayPriority = function (t) {
              var e;
              this.pathwayPriority = t;
              var r = this.penalizedPathways,
                i = performance.now();
              Object.keys(r).forEach(function (t) {
                i - r[t] > 3e5 && delete r[t];
              });
              for (var n = 0; n < t.length; n++) {
                var a = t[n];
                if (!r[a]) {
                  if (a === this.pathwayId) return;
                  var s = this.hls.nextLoadLevel,
                    o = this.hls.levels[s];
                  if ((e = this.getLevelsForPathway(a)).length > 0) {
                    this.log('Setting Pathway to "' + a + '"'),
                      (this.pathwayId = a),
                      this.hls.trigger(S.LEVELS_UPDATED, { levels: e });
                    var l = this.hls.levels[s];
                    o &&
                      l &&
                      this.levels &&
                      (l.attrs["STABLE-VARIANT-ID"] !==
                        o.attrs["STABLE-VARIANT-ID"] &&
                        l.bitrate !== o.bitrate &&
                        this.log(
                          "Unstable Pathways change from bitrate " +
                            o.bitrate +
                            " to " +
                            l.bitrate
                        ),
                      (this.hls.nextLoadLevel = s));
                    break;
                  }
                }
              }
            }),
            (e.clonePathways = function (t) {
              var e = this,
                r = this.levels;
              if (r) {
                var i = {},
                  n = {};
                t.forEach(function (t) {
                  var a = t.ID,
                    s = t["BASE-ID"],
                    l = t["URI-REPLACEMENT"];
                  if (
                    !r.some(function (t) {
                      return t.pathwayId === a;
                    })
                  ) {
                    var u = e.getLevelsForPathway(s).map(function (t) {
                      var e = o({}, t);
                      (e.details = void 0),
                        (e.url = Na(
                          t.uri,
                          t.attrs["STABLE-VARIANT-ID"],
                          "PER-VARIANT-URIS",
                          l
                        ));
                      var r = new P(t.attrs);
                      r["PATHWAY-ID"] = a;
                      var s = r.AUDIO && r.AUDIO + "_clone_" + a,
                        u = r.SUBTITLES && r.SUBTITLES + "_clone_" + a;
                      s && ((i[r.AUDIO] = s), (r.AUDIO = s)),
                        u && ((n[r.SUBTITLES] = u), (r.SUBTITLES = u)),
                        (e.attrs = r);
                      var h = new Ne(e);
                      return dr(h, "audio", s), dr(h, "text", u), h;
                    });
                    r.push.apply(r, u),
                      Oa(e.audioTracks, i, l, a),
                      Oa(e.subtitleTracks, n, l, a);
                  }
                });
              }
            }),
            (e.loadSteeringManifest = function (t) {
              var e,
                r = this,
                i = this.hls.config,
                n = i.loader;
              this.loader && this.loader.destroy(), (this.loader = new n(i));
              try {
                e = new self.URL(t);
              } catch (e) {
                return (
                  (this.enabled = !1),
                  void this.log("Failed to parse Steering Manifest URI: " + t)
                );
              }
              if ("data:" !== e.protocol) {
                var a =
                  0 | (this.hls.bandwidthEstimate || i.abrEwmaDefaultEstimate);
                e.searchParams.set("_HLS_pathway", this.pathwayId),
                  e.searchParams.set("_HLS_throughput", "" + a);
              }
              var s = { responseType: "json", url: e.href },
                o = i.steeringManifestLoadPolicy.default,
                l = o.errorRetry || o.timeoutRetry || {},
                u = {
                  loadPolicy: o,
                  timeout: o.maxLoadTimeMs,
                  maxRetry: l.maxNumRetry || 0,
                  retryDelay: l.retryDelayMs || 0,
                  maxRetryDelay: l.maxRetryDelayMs || 0,
                },
                h = {
                  onSuccess: function (t, i, n, a) {
                    r.log('Loaded steering manifest: "' + e + '"');
                    var s = t.data;
                    if (1 === s.VERSION) {
                      (r.updated = performance.now()), (r.timeToLoad = s.TTL);
                      var o = s["RELOAD-URI"],
                        l = s["PATHWAY-CLONES"],
                        u = s["PATHWAY-PRIORITY"];
                      if (o)
                        try {
                          r.uri = new self.URL(o, e).href;
                        } catch (t) {
                          return (
                            (r.enabled = !1),
                            void r.log(
                              "Failed to parse Steering Manifest RELOAD-URI: " +
                                o
                            )
                          );
                        }
                      r.scheduleRefresh(r.uri || n.url),
                        l && r.clonePathways(l),
                        u && r.updatePathwayPriority(u);
                    } else
                      r.log(
                        "Steering VERSION " + s.VERSION + " not supported!"
                      );
                  },
                  onError: function (t, e, i, n) {
                    if (
                      (r.log(
                        "Error loading steering manifest: " +
                          t.code +
                          " " +
                          t.text +
                          " (" +
                          e.url +
                          ")"
                      ),
                      r.stopLoad(),
                      410 === t.code)
                    )
                      return (
                        (r.enabled = !1),
                        void r.log(
                          "Steering manifest " + e.url + " no longer available"
                        )
                      );
                    var a = 1e3 * r.timeToLoad;
                    if (429 !== t.code) r.scheduleRefresh(r.uri || e.url, a);
                    else {
                      var s = r.loader;
                      if (
                        "function" ==
                        typeof (null == s ? void 0 : s.getResponseHeader)
                      ) {
                        var o = s.getResponseHeader("Retry-After");
                        o && (a = 1e3 * parseFloat(o));
                      }
                      r.log("Steering manifest " + e.url + " rate limited");
                    }
                  },
                  onTimeout: function (t, e, i) {
                    r.log("Timeout loading steering manifest (" + e.url + ")"),
                      r.scheduleRefresh(r.uri || e.url);
                  },
                };
              this.log("Requesting steering manifest: " + e),
                this.loader.load(s, u, h);
            }),
            (e.scheduleRefresh = function (t, e) {
              var r = this;
              void 0 === e && (e = 1e3 * this.timeToLoad),
                self.clearTimeout(this.reloadTimer),
                (this.reloadTimer = self.setTimeout(function () {
                  r.loadSteeringManifest(t);
                }, e));
            }),
            t
          );
        })();
      function Oa(t, e, r, i) {
        t &&
          Object.keys(e).forEach(function (n) {
            var a = t
              .filter(function (t) {
                return t.groupId === n;
              })
              .map(function (t) {
                var a = o({}, t);
                return (
                  (a.details = void 0),
                  (a.attrs = new P(a.attrs)),
                  (a.url = a.attrs.URI =
                    Na(
                      t.url,
                      t.attrs["STABLE-RENDITION-ID"],
                      "PER-RENDITION-URIS",
                      r
                    )),
                  (a.groupId = a.attrs["GROUP-ID"] = e[n]),
                  (a.attrs["PATHWAY-ID"] = i),
                  a
                );
              });
            t.push.apply(t, a);
          });
      }
      function Na(t, e, r, i) {
        var n,
          a = i.HOST,
          s = i.PARAMS,
          o = i[r];
        e && (n = null == o ? void 0 : o[e]) && (t = n);
        var l = new self.URL(t);
        return (
          a && !n && (l.host = a),
          s &&
            Object.keys(s)
              .sort()
              .forEach(function (t) {
                t && l.searchParams.set(t, s[t]);
              }),
          l.href
        );
      }
      var Ua = /^age:\s*[\d.]+\s*$/im,
        Ba = (function () {
          function t(t) {
            (this.xhrSetup = void 0),
              (this.requestTimeout = void 0),
              (this.retryTimeout = void 0),
              (this.retryDelay = void 0),
              (this.config = null),
              (this.callbacks = null),
              (this.context = void 0),
              (this.loader = null),
              (this.stats = void 0),
              (this.xhrSetup = (t && t.xhrSetup) || null),
              (this.stats = new M()),
              (this.retryDelay = 0);
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.callbacks = null),
                this.abortInternal(),
                (this.loader = null),
                (this.config = null);
            }),
            (e.abortInternal = function () {
              var t = this.loader;
              self.clearTimeout(this.requestTimeout),
                self.clearTimeout(this.retryTimeout),
                t &&
                  ((t.onreadystatechange = null),
                  (t.onprogress = null),
                  4 !== t.readyState && ((this.stats.aborted = !0), t.abort()));
            }),
            (e.abort = function () {
              var t;
              this.abortInternal(),
                null != (t = this.callbacks) &&
                  t.onAbort &&
                  this.callbacks.onAbort(this.stats, this.context, this.loader);
            }),
            (e.load = function (t, e, r) {
              if (this.stats.loading.start)
                throw new Error("Loader can only be used once.");
              (this.stats.loading.start = self.performance.now()),
                (this.context = t),
                (this.config = e),
                (this.callbacks = r),
                this.loadInternal();
            }),
            (e.loadInternal = function () {
              var t = this,
                e = this.config,
                r = this.context;
              if (e) {
                var i = (this.loader = new self.XMLHttpRequest()),
                  n = this.stats;
                (n.loading.first = 0), (n.loaded = 0), (n.aborted = !1);
                var a = this.xhrSetup;
                a
                  ? Promise.resolve()
                      .then(function () {
                        if (!t.stats.aborted) return a(i, r.url);
                      })
                      .catch(function (t) {
                        return i.open("GET", r.url, !0), a(i, r.url);
                      })
                      .then(function () {
                        t.stats.aborted || t.openAndSendXhr(i, r, e);
                      })
                      .catch(function (e) {
                        t.callbacks.onError(
                          { code: i.status, text: e.message },
                          r,
                          i,
                          n
                        );
                      })
                  : this.openAndSendXhr(i, r, e);
              }
            }),
            (e.openAndSendXhr = function (t, e, r) {
              t.readyState || t.open("GET", e.url, !0);
              var i = this.context.headers,
                n = r.loadPolicy,
                a = n.maxTimeToFirstByteMs,
                s = n.maxLoadTimeMs;
              if (i) for (var o in i) t.setRequestHeader(o, i[o]);
              e.rangeEnd &&
                t.setRequestHeader(
                  "Range",
                  "bytes=" + e.rangeStart + "-" + (e.rangeEnd - 1)
                ),
                (t.onreadystatechange = this.readystatechange.bind(this)),
                (t.onprogress = this.loadprogress.bind(this)),
                (t.responseType = e.responseType),
                self.clearTimeout(this.requestTimeout),
                (r.timeout = a && E(a) ? a : s),
                (this.requestTimeout = self.setTimeout(
                  this.loadtimeout.bind(this),
                  r.timeout
                )),
                t.send();
            }),
            (e.readystatechange = function () {
              var t = this.context,
                e = this.loader,
                r = this.stats;
              if (t && e) {
                var i = e.readyState,
                  n = this.config;
                if (
                  !r.aborted &&
                  i >= 2 &&
                  (0 === r.loading.first &&
                    ((r.loading.first = Math.max(
                      self.performance.now(),
                      r.loading.start
                    )),
                    n.timeout !== n.loadPolicy.maxLoadTimeMs &&
                      (self.clearTimeout(this.requestTimeout),
                      (n.timeout = n.loadPolicy.maxLoadTimeMs),
                      (this.requestTimeout = self.setTimeout(
                        this.loadtimeout.bind(this),
                        n.loadPolicy.maxLoadTimeMs -
                          (r.loading.first - r.loading.start)
                      )))),
                  4 === i)
                ) {
                  self.clearTimeout(this.requestTimeout),
                    (e.onreadystatechange = null),
                    (e.onprogress = null);
                  var a = e.status,
                    s = "text" !== e.responseType;
                  if (
                    a >= 200 &&
                    a < 300 &&
                    ((s && e.response) || null !== e.responseText)
                  ) {
                    r.loading.end = Math.max(
                      self.performance.now(),
                      r.loading.first
                    );
                    var o = s ? e.response : e.responseText,
                      l =
                        "arraybuffer" === e.responseType
                          ? o.byteLength
                          : o.length;
                    if (
                      ((r.loaded = r.total = l),
                      (r.bwEstimate =
                        (8e3 * r.total) / (r.loading.end - r.loading.first)),
                      !this.callbacks)
                    )
                      return;
                    var u = this.callbacks.onProgress;
                    if ((u && u(r, t, o, e), !this.callbacks)) return;
                    var h = { url: e.responseURL, data: o, code: a };
                    this.callbacks.onSuccess(h, r, t, e);
                  } else {
                    var d = n.loadPolicy.errorRetry;
                    ze(d, r.retry, !1, a)
                      ? this.retry(d)
                      : (w.error(a + " while loading " + t.url),
                        this.callbacks.onError(
                          { code: a, text: e.statusText },
                          t,
                          e,
                          r
                        ));
                  }
                }
              }
            }),
            (e.loadtimeout = function () {
              var t,
                e =
                  null == (t = this.config)
                    ? void 0
                    : t.loadPolicy.timeoutRetry;
              if (ze(e, this.stats.retry, !0)) this.retry(e);
              else {
                w.warn("timeout while loading " + this.context.url);
                var r = this.callbacks;
                r &&
                  (this.abortInternal(),
                  r.onTimeout(this.stats, this.context, this.loader));
              }
            }),
            (e.retry = function (t) {
              var e = this.context,
                r = this.stats;
              (this.retryDelay = qe(t, r.retry)),
                r.retry++,
                w.warn(
                  (status ? "HTTP Status " + status : "Timeout") +
                    " while loading " +
                    e.url +
                    ", retrying " +
                    r.retry +
                    "/" +
                    t.maxNumRetry +
                    " in " +
                    this.retryDelay +
                    "ms"
                ),
                this.abortInternal(),
                (this.loader = null),
                self.clearTimeout(this.retryTimeout),
                (this.retryTimeout = self.setTimeout(
                  this.loadInternal.bind(this),
                  this.retryDelay
                ));
            }),
            (e.loadprogress = function (t) {
              var e = this.stats;
              (e.loaded = t.loaded), t.lengthComputable && (e.total = t.total);
            }),
            (e.getCacheAge = function () {
              var t = null;
              if (this.loader && Ua.test(this.loader.getAllResponseHeaders())) {
                var e = this.loader.getResponseHeader("age");
                t = e ? parseFloat(e) : null;
              }
              return t;
            }),
            (e.getResponseHeader = function (t) {
              return this.loader &&
                new RegExp("^" + t + ":\\s*[\\d.]+\\s*$", "im").test(
                  this.loader.getAllResponseHeaders()
                )
                ? this.loader.getResponseHeader(t)
                : null;
            }),
            t
          );
        })(),
        Ga = /(\d+)-(\d+)\/(\d+)/,
        Ka = (function () {
          function t(t) {
            (this.fetchSetup = void 0),
              (this.requestTimeout = void 0),
              (this.request = void 0),
              (this.response = void 0),
              (this.controller = void 0),
              (this.context = void 0),
              (this.config = null),
              (this.callbacks = null),
              (this.stats = void 0),
              (this.loader = null),
              (this.fetchSetup = t.fetchSetup || Ha),
              (this.controller = new self.AbortController()),
              (this.stats = new M());
          }
          var e = t.prototype;
          return (
            (e.destroy = function () {
              (this.loader = this.callbacks = null), this.abortInternal();
            }),
            (e.abortInternal = function () {
              var t = this.response;
              (null != t && t.ok) ||
                ((this.stats.aborted = !0), this.controller.abort());
            }),
            (e.abort = function () {
              var t;
              this.abortInternal(),
                null != (t = this.callbacks) &&
                  t.onAbort &&
                  this.callbacks.onAbort(
                    this.stats,
                    this.context,
                    this.response
                  );
            }),
            (e.load = function (t, e, r) {
              var i = this,
                n = this.stats;
              if (n.loading.start)
                throw new Error("Loader can only be used once.");
              n.loading.start = self.performance.now();
              var a = (function (t, e) {
                  var r = {
                    method: "GET",
                    mode: "cors",
                    credentials: "same-origin",
                    signal: e,
                    headers: new self.Headers(o({}, t.headers)),
                  };
                  return (
                    t.rangeEnd &&
                      r.headers.set(
                        "Range",
                        "bytes=" + t.rangeStart + "-" + String(t.rangeEnd - 1)
                      ),
                    r
                  );
                })(t, this.controller.signal),
                s = r.onProgress,
                l = "arraybuffer" === t.responseType,
                u = l ? "byteLength" : "length",
                h = e.loadPolicy,
                d = h.maxTimeToFirstByteMs,
                c = h.maxLoadTimeMs;
              (this.context = t),
                (this.config = e),
                (this.callbacks = r),
                (this.request = this.fetchSetup(t, a)),
                self.clearTimeout(this.requestTimeout),
                (e.timeout = d && E(d) ? d : c),
                (this.requestTimeout = self.setTimeout(function () {
                  i.abortInternal(), r.onTimeout(n, t, i.response);
                }, e.timeout)),
                self
                  .fetch(this.request)
                  .then(function (a) {
                    i.response = i.loader = a;
                    var o = Math.max(self.performance.now(), n.loading.start);
                    if (
                      (self.clearTimeout(i.requestTimeout),
                      (e.timeout = c),
                      (i.requestTimeout = self.setTimeout(function () {
                        i.abortInternal(), r.onTimeout(n, t, i.response);
                      }, c - (o - n.loading.start))),
                      !a.ok)
                    ) {
                      var u = a.status,
                        h = a.statusText;
                      throw new Va(h || "fetch, bad network response", u, a);
                    }
                    return (
                      (n.loading.first = o),
                      (n.total =
                        (function (t) {
                          var e = t.get("Content-Range");
                          if (e) {
                            var r = (function (t) {
                              var e = Ga.exec(t);
                              if (e) return parseInt(e[2]) - parseInt(e[1]) + 1;
                            })(e);
                            if (E(r)) return r;
                          }
                          var i = t.get("Content-Length");
                          if (i) return parseInt(i);
                        })(a.headers) || n.total),
                      s && E(e.highWaterMark)
                        ? i.loadProgressively(a, n, t, e.highWaterMark, s)
                        : l
                        ? a.arrayBuffer()
                        : "json" === t.responseType
                        ? a.json()
                        : a.text()
                    );
                  })
                  .then(function (a) {
                    var o = i.response;
                    self.clearTimeout(i.requestTimeout),
                      (n.loading.end = Math.max(
                        self.performance.now(),
                        n.loading.first
                      ));
                    var l = a[u];
                    l && (n.loaded = n.total = l);
                    var h = { url: o.url, data: a, code: o.status };
                    s && !E(e.highWaterMark) && s(n, t, a, o),
                      r.onSuccess(h, n, t, o);
                  })
                  .catch(function (e) {
                    if ((self.clearTimeout(i.requestTimeout), !n.aborted)) {
                      var a = (e && e.code) || 0,
                        s = e ? e.message : null;
                      r.onError(
                        { code: a, text: s },
                        t,
                        e ? e.details : null,
                        n
                      );
                    }
                  });
            }),
            (e.getCacheAge = function () {
              var t = null;
              if (this.response) {
                var e = this.response.headers.get("age");
                t = e ? parseFloat(e) : null;
              }
              return t;
            }),
            (e.getResponseHeader = function (t) {
              return this.response ? this.response.headers.get(t) : null;
            }),
            (e.loadProgressively = function (t, e, r, i, n) {
              void 0 === i && (i = 0);
              var a = new mn(),
                s = t.body.getReader();
              return (function o() {
                return s
                  .read()
                  .then(function (s) {
                    if (s.done)
                      return (
                        a.dataLength && n(e, r, a.flush(), t),
                        Promise.resolve(new ArrayBuffer(0))
                      );
                    var l = s.value,
                      u = l.length;
                    return (
                      (e.loaded += u),
                      u < i || a.dataLength
                        ? (a.push(l),
                          a.dataLength >= i && n(e, r, a.flush(), t))
                        : n(e, r, l, t),
                      o()
                    );
                  })
                  .catch(function () {
                    return Promise.reject();
                  });
              })();
            }),
            t
          );
        })();
      function Ha(t, e) {
        return new self.Request(t.url, e);
      }
      var Va = (function (t) {
          function e(e, r, i) {
            var n;
            return (
              ((n = t.call(this, e) || this).code = void 0),
              (n.details = void 0),
              (n.code = r),
              (n.details = i),
              n
            );
          }
          return l(e, t), e;
        })(f(Error)),
        Ya = /\s/,
        Wa = i(
          i(
            {
              autoStartLoad: !0,
              startPosition: -1,
              defaultAudioCodec: void 0,
              debug: !1,
              capLevelOnFPSDrop: !1,
              capLevelToPlayerSize: !1,
              ignoreDevicePixelRatio: !1,
              initialLiveManifestSize: 1,
              maxBufferLength: 30,
              backBufferLength: 1 / 0,
              maxBufferSize: 6e7,
              maxBufferHole: 0.1,
              highBufferWatchdogPeriod: 2,
              nudgeOffset: 0.1,
              nudgeMaxRetry: 3,
              maxFragLookUpTolerance: 0.25,
              liveSyncDurationCount: 3,
              liveMaxLatencyDurationCount: 1 / 0,
              liveSyncDuration: void 0,
              liveMaxLatencyDuration: void 0,
              maxLiveSyncPlaybackRate: 1,
              liveDurationInfinity: !1,
              liveBackBufferLength: null,
              maxMaxBufferLength: 600,
              enableWorker: !0,
              workerPath: null,
              enableSoftwareAES: !0,
              startLevel: void 0,
              startFragPrefetch: !1,
              fpsDroppedMonitoringPeriod: 5e3,
              fpsDroppedMonitoringThreshold: 0.2,
              appendErrorMaxRetry: 3,
              loader: Ba,
              fLoader: void 0,
              pLoader: void 0,
              xhrSetup: void 0,
              licenseXhrSetup: void 0,
              licenseResponseCallback: void 0,
              abrController: vn,
              bufferController: In,
              capLevelController: Ra,
              errorController: lr,
              fpsController: Aa,
              stretchShortVideoTrack: !1,
              maxAudioFramesDrift: 1,
              forceKeyFrameOnDiscontinuity: !0,
              abrEwmaFastLive: 3,
              abrEwmaSlowLive: 9,
              abrEwmaFastVoD: 3,
              abrEwmaSlowVoD: 9,
              abrEwmaDefaultEstimate: 5e5,
              abrBandWidthFactor: 0.95,
              abrBandWidthUpFactor: 0.7,
              abrMaxWithRealBitrate: !1,
              maxStarvationDelay: 4,
              maxLoadingDelay: 4,
              minAutoBitrate: 0,
              emeEnabled: !1,
              widevineLicenseUrl: void 0,
              drmSystems: {},
              drmSystemOptions: {},
              requestMediaKeySystemAccessFunc: et,
              testBandwidth: !0,
              progressive: !1,
              lowLatencyMode: !0,
              cmcd: void 0,
              enableDateRangeMetadataCues: !0,
              enableEmsgMetadataCues: !0,
              enableID3MetadataCues: !0,
              certLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 8e3,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: null,
                  errorRetry: null,
                },
              },
              keyLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 8e3,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 2e4,
                    backoff: "linear",
                  },
                  errorRetry: {
                    maxNumRetry: 8,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 2e4,
                    backoff: "linear",
                  },
                },
              },
              manifestLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1 / 0,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              playlistLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              fragLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 12e4,
                  timeoutRetry: {
                    maxNumRetry: 4,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 6,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              steeringManifestLoadPolicy: {
                default: {
                  maxTimeToFirstByteMs: 1e4,
                  maxLoadTimeMs: 2e4,
                  timeoutRetry: {
                    maxNumRetry: 2,
                    retryDelayMs: 0,
                    maxRetryDelayMs: 0,
                  },
                  errorRetry: {
                    maxNumRetry: 1,
                    retryDelayMs: 1e3,
                    maxRetryDelayMs: 8e3,
                  },
                },
              },
              manifestLoadingTimeOut: 1e4,
              manifestLoadingMaxRetry: 1,
              manifestLoadingRetryDelay: 1e3,
              manifestLoadingMaxRetryTimeout: 64e3,
              levelLoadingTimeOut: 1e4,
              levelLoadingMaxRetry: 4,
              levelLoadingRetryDelay: 1e3,
              levelLoadingMaxRetryTimeout: 64e3,
              fragLoadingTimeOut: 2e4,
              fragLoadingMaxRetry: 6,
              fragLoadingRetryDelay: 1e3,
              fragLoadingMaxRetryTimeout: 64e3,
            },
            {
              cueHandler: {
                newCue: function (t, e, r, i) {
                  for (
                    var n,
                      a,
                      s,
                      o,
                      l,
                      u = [],
                      h = self.VTTCue || self.TextTrackCue,
                      d = 0;
                    d < i.rows.length;
                    d++
                  )
                    if (
                      ((s = !0), (o = 0), (l = ""), !(n = i.rows[d]).isEmpty())
                    ) {
                      for (var c, f = 0; f < n.chars.length; f++)
                        Ya.test(n.chars[f].uchar) && s
                          ? o++
                          : ((l += n.chars[f].uchar), (s = !1));
                      (n.cueStartTime = e),
                        e === r && (r += 1e-4),
                        o >= 16 ? o-- : o++;
                      var g = ia(l.trim()),
                        v = la(e, r, g);
                      (null != t && null != (c = t.cues) && c.getCueById(v)) ||
                        (((a = new h(e, r, g)).id = v),
                        (a.line = d + 1),
                        (a.align = "left"),
                        (a.position =
                          10 + Math.min(80, 10 * Math.floor((8 * o) / 32))),
                        u.push(a));
                    }
                  return (
                    t &&
                      u.length &&
                      (u.sort(function (t, e) {
                        return "auto" === t.line || "auto" === e.line
                          ? 0
                          : t.line > 8 && e.line > 8
                          ? e.line - t.line
                          : t.line - e.line;
                      }),
                      u.forEach(function (e) {
                        return Se(t, e);
                      })),
                    u
                  );
                },
              },
              enableWebVTT: !0,
              enableIMSC1: !0,
              enableCEA708Captions: !0,
              captionsTextTrack1Label: "English",
              captionsTextTrack1LanguageCode: "en",
              captionsTextTrack2Label: "Spanish",
              captionsTextTrack2LanguageCode: "es",
              captionsTextTrack3Label: "Unknown CC",
              captionsTextTrack3LanguageCode: "",
              captionsTextTrack4Label: "Unknown CC",
              captionsTextTrack4LanguageCode: "",
              renderTextTracksNatively: !0,
            }
          ),
          {},
          {
            subtitleStreamController: Sn,
            subtitleTrackController: Rn,
            timelineController: Sa,
            audioStreamController: pn,
            audioTrackController: yn,
            emeController: ba,
            cmcdController: Fa,
            contentSteeringController: Ma,
          }
        );
      function ja(t) {
        return t && "object" == typeof t
          ? Array.isArray(t)
            ? t.map(ja)
            : Object.keys(t).reduce(function (e, r) {
                return (e[r] = ja(t[r])), e;
              }, {})
          : t;
      }
      function qa(t) {
        var e = t.loader;
        e !== Ka && e !== Ba
          ? (w.log(
              "[config]: Custom loader detected, cannot enable progressive streaming"
            ),
            (t.progressive = !1))
          : (function () {
              if (
                self.fetch &&
                self.AbortController &&
                self.ReadableStream &&
                self.Request
              )
                try {
                  return new self.ReadableStream({}), !0;
                } catch (t) {}
              return !1;
            })() &&
            ((t.loader = Ka),
            (t.progressive = !0),
            (t.enableSoftwareAES = !0),
            w.log(
              "[config]: Progressive streaming enabled, using FetchLoader"
            ));
      }
      var Xa = (function () {
        function t(e) {
          void 0 === e && (e = {}),
            (this.config = void 0),
            (this.userConfig = void 0),
            (this.coreComponents = void 0),
            (this.networkControllers = void 0),
            (this._emitter = new an()),
            (this._autoLevelCapping = void 0),
            (this._maxHdcpLevel = null),
            (this.abrController = void 0),
            (this.bufferController = void 0),
            (this.capLevelController = void 0),
            (this.latencyController = void 0),
            (this.levelController = void 0),
            (this.streamController = void 0),
            (this.audioTrackController = void 0),
            (this.subtitleTrackController = void 0),
            (this.emeController = void 0),
            (this.cmcdController = void 0),
            (this._media = null),
            (this.url = null),
            I(e.debug || !1, "Hls instance");
          var r = (this.config = (function (t, e) {
            if (
              (e.liveSyncDurationCount || e.liveMaxLatencyDurationCount) &&
              (e.liveSyncDuration || e.liveMaxLatencyDuration)
            )
              throw new Error(
                "Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration"
              );
            if (
              void 0 !== e.liveMaxLatencyDurationCount &&
              (void 0 === e.liveSyncDurationCount ||
                e.liveMaxLatencyDurationCount <= e.liveSyncDurationCount)
            )
              throw new Error(
                'Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"'
              );
            if (
              void 0 !== e.liveMaxLatencyDuration &&
              (void 0 === e.liveSyncDuration ||
                e.liveMaxLatencyDuration <= e.liveSyncDuration)
            )
              throw new Error(
                'Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"'
              );
            var r = ja(t),
              n = ["TimeOut", "MaxRetry", "RetryDelay", "MaxRetryTimeout"];
            return (
              ["manifest", "level", "frag"].forEach(function (t) {
                var i = ("level" === t ? "playlist" : t) + "LoadPolicy",
                  a = void 0 === e[i],
                  s = [];
                n.forEach(function (n) {
                  var o = t + "Loading" + n,
                    l = e[o];
                  if (void 0 !== l && a) {
                    s.push(o);
                    var u = r[i].default;
                    switch (((e[i] = { default: u }), n)) {
                      case "TimeOut":
                        (u.maxLoadTimeMs = l), (u.maxTimeToFirstByteMs = l);
                        break;
                      case "MaxRetry":
                        (u.errorRetry.maxNumRetry = l),
                          (u.timeoutRetry.maxNumRetry = l);
                        break;
                      case "RetryDelay":
                        (u.errorRetry.retryDelayMs = l),
                          (u.timeoutRetry.retryDelayMs = l);
                        break;
                      case "MaxRetryTimeout":
                        (u.errorRetry.maxRetryDelayMs = l),
                          (u.timeoutRetry.maxRetryDelayMs = l);
                    }
                  }
                }),
                  s.length &&
                    w.warn(
                      'hls.js config: "' +
                        s.join('", "') +
                        '" setting(s) are deprecated, use "' +
                        i +
                        '": ' +
                        JSON.stringify(e[i])
                    );
              }),
              i(i({}, r), e)
            );
          })(t.DefaultConfig, e));
          (this.userConfig = e),
            (this._autoLevelCapping = -1),
            r.progressive && qa(r);
          var n = r.abrController,
            a = r.bufferController,
            s = r.capLevelController,
            o = r.errorController,
            l = r.fpsController,
            u = new o(this),
            h = (this.abrController = new n(this)),
            d = (this.bufferController = new a(this)),
            c = (this.capLevelController = new s(this)),
            f = new l(this),
            g = new Te(this),
            v = new Ce(this),
            m = r.contentSteeringController,
            p = m ? new m(this) : null,
            y = (this.levelController = new hr(this, p)),
            T = new pr(this),
            E = new kr(this.config),
            L = (this.streamController = new cn(this, T, E));
          c.setStreamController(L), f.setStreamController(L);
          var R = [g, y, L];
          p && R.splice(1, 0, p), (this.networkControllers = R);
          var A = [h, d, c, f, v, T];
          this.audioTrackController = this.createController(
            r.audioTrackController,
            R
          );
          var k = r.audioStreamController;
          k && R.push(new k(this, T, E)),
            (this.subtitleTrackController = this.createController(
              r.subtitleTrackController,
              R
            ));
          var b = r.subtitleStreamController;
          b && R.push(new b(this, T, E)),
            this.createController(r.timelineController, A),
            (E.emeController = this.emeController =
              this.createController(r.emeController, A)),
            (this.cmcdController = this.createController(r.cmcdController, A)),
            (this.latencyController = this.createController(_e, A)),
            (this.coreComponents = A),
            R.push(u);
          var D = u.onErrorOut;
          "function" == typeof D && this.on(S.ERROR, D, u);
        }
        t.isSupported = function () {
          return (function () {
            var t = qt();
            if (!t) return !1;
            var e = Zr(),
              r =
                t &&
                "function" == typeof t.isTypeSupported &&
                t.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
              i =
                !e ||
                (e.prototype &&
                  "function" == typeof e.prototype.appendBuffer &&
                  "function" == typeof e.prototype.remove);
            return !!r && !!i;
          })();
        };
        var e = t.prototype;
        return (
          (e.createController = function (t, e) {
            if (t) {
              var r = new t(this);
              return e && e.push(r), r;
            }
            return null;
          }),
          (e.on = function (t, e, r) {
            void 0 === r && (r = this), this._emitter.on(t, e, r);
          }),
          (e.once = function (t, e, r) {
            void 0 === r && (r = this), this._emitter.once(t, e, r);
          }),
          (e.removeAllListeners = function (t) {
            this._emitter.removeAllListeners(t);
          }),
          (e.off = function (t, e, r, i) {
            void 0 === r && (r = this), this._emitter.off(t, e, r, i);
          }),
          (e.listeners = function (t) {
            return this._emitter.listeners(t);
          }),
          (e.emit = function (t, e, r) {
            return this._emitter.emit(t, e, r);
          }),
          (e.trigger = function (t, e) {
            if (this.config.debug) return this.emit(t, t, e);
            try {
              return this.emit(t, t, e);
            } catch (e) {
              w.error(
                "An internal error happened while handling event " +
                  t +
                  '. Error message: "' +
                  e.message +
                  '". Here is a stacktrace:',
                e
              ),
                this.trigger(S.ERROR, {
                  type: L.OTHER_ERROR,
                  details: R.INTERNAL_EXCEPTION,
                  fatal: !1,
                  event: t,
                  error: e,
                });
            }
            return !1;
          }),
          (e.listenerCount = function (t) {
            return this._emitter.listenerCount(t);
          }),
          (e.destroy = function () {
            w.log("destroy"),
              this.trigger(S.DESTROYING, void 0),
              this.detachMedia(),
              this.removeAllListeners(),
              (this._autoLevelCapping = -1),
              (this.url = null),
              this.networkControllers.forEach(function (t) {
                return t.destroy();
              }),
              (this.networkControllers.length = 0),
              this.coreComponents.forEach(function (t) {
                return t.destroy();
              }),
              (this.coreComponents.length = 0);
            var t = this.config;
            (t.xhrSetup = t.fetchSetup = void 0), (this.userConfig = null);
          }),
          (e.attachMedia = function (t) {
            w.log("attachMedia"),
              (this._media = t),
              this.trigger(S.MEDIA_ATTACHING, { media: t });
          }),
          (e.detachMedia = function () {
            w.log("detachMedia"),
              this.trigger(S.MEDIA_DETACHING, void 0),
              (this._media = null);
          }),
          (e.loadSource = function (t) {
            this.stopLoad();
            var e = this.media,
              r = this.url,
              i = (this.url = T.buildAbsoluteURL(self.location.href, t, {
                alwaysNormalize: !0,
              }));
            w.log("loadSource:" + i),
              e &&
                r &&
                (r !== i || this.bufferController.hasSourceTypes()) &&
                (this.detachMedia(), this.attachMedia(e)),
              this.trigger(S.MANIFEST_LOADING, { url: t });
          }),
          (e.startLoad = function (t) {
            void 0 === t && (t = -1),
              w.log("startLoad(" + t + ")"),
              this.networkControllers.forEach(function (e) {
                e.startLoad(t);
              });
          }),
          (e.stopLoad = function () {
            w.log("stopLoad"),
              this.networkControllers.forEach(function (t) {
                t.stopLoad();
              });
          }),
          (e.swapAudioCodec = function () {
            w.log("swapAudioCodec"), this.streamController.swapAudioCodec();
          }),
          (e.recoverMediaError = function () {
            w.log("recoverMediaError");
            var t = this._media;
            this.detachMedia(), t && this.attachMedia(t);
          }),
          (e.removeLevel = function (t, e) {
            void 0 === e && (e = 0), this.levelController.removeLevel(t, e);
          }),
          a(
            t,
            [
              {
                key: "levels",
                get: function () {
                  var t = this.levelController.levels;
                  return t || [];
                },
              },
              {
                key: "currentLevel",
                get: function () {
                  return this.streamController.currentLevel;
                },
                set: function (t) {
                  w.log("set currentLevel:" + t),
                    (this.loadLevel = t),
                    this.abrController.clearTimer(),
                    this.streamController.immediateLevelSwitch();
                },
              },
              {
                key: "nextLevel",
                get: function () {
                  return this.streamController.nextLevel;
                },
                set: function (t) {
                  w.log("set nextLevel:" + t),
                    (this.levelController.manualLevel = t),
                    this.streamController.nextLevelSwitch();
                },
              },
              {
                key: "loadLevel",
                get: function () {
                  return this.levelController.level;
                },
                set: function (t) {
                  w.log("set loadLevel:" + t),
                    (this.levelController.manualLevel = t);
                },
              },
              {
                key: "nextLoadLevel",
                get: function () {
                  return this.levelController.nextLoadLevel;
                },
                set: function (t) {
                  this.levelController.nextLoadLevel = t;
                },
              },
              {
                key: "firstLevel",
                get: function () {
                  return Math.max(
                    this.levelController.firstLevel,
                    this.minAutoLevel
                  );
                },
                set: function (t) {
                  w.log("set firstLevel:" + t),
                    (this.levelController.firstLevel = t);
                },
              },
              {
                key: "startLevel",
                get: function () {
                  return this.levelController.startLevel;
                },
                set: function (t) {
                  w.log("set startLevel:" + t),
                    -1 !== t && (t = Math.max(t, this.minAutoLevel)),
                    (this.levelController.startLevel = t);
                },
              },
              {
                key: "capLevelToPlayerSize",
                get: function () {
                  return this.config.capLevelToPlayerSize;
                },
                set: function (t) {
                  var e = !!t;
                  e !== this.config.capLevelToPlayerSize &&
                    (e
                      ? this.capLevelController.startCapping()
                      : (this.capLevelController.stopCapping(),
                        (this.autoLevelCapping = -1),
                        this.streamController.nextLevelSwitch()),
                    (this.config.capLevelToPlayerSize = e));
                },
              },
              {
                key: "autoLevelCapping",
                get: function () {
                  return this._autoLevelCapping;
                },
                set: function (t) {
                  this._autoLevelCapping !== t &&
                    (w.log("set autoLevelCapping:" + t),
                    (this._autoLevelCapping = t));
                },
              },
              {
                key: "bandwidthEstimate",
                get: function () {
                  var t = this.abrController.bwEstimator;
                  return t ? t.getEstimate() : NaN;
                },
              },
              {
                key: "ttfbEstimate",
                get: function () {
                  var t = this.abrController.bwEstimator;
                  return t ? t.getEstimateTTFB() : NaN;
                },
              },
              {
                key: "maxHdcpLevel",
                get: function () {
                  return this._maxHdcpLevel;
                },
                set: function (t) {
                  Pe.indexOf(t) > -1 && (this._maxHdcpLevel = t);
                },
              },
              {
                key: "autoLevelEnabled",
                get: function () {
                  return -1 === this.levelController.manualLevel;
                },
              },
              {
                key: "manualLevel",
                get: function () {
                  return this.levelController.manualLevel;
                },
              },
              {
                key: "minAutoLevel",
                get: function () {
                  var t = this.levels,
                    e = this.config.minAutoBitrate;
                  if (!t) return 0;
                  for (var r = t.length, i = 0; i < r; i++)
                    if (t[i].maxBitrate >= e) return i;
                  return 0;
                },
              },
              {
                key: "maxAutoLevel",
                get: function () {
                  var t,
                    e = this.levels,
                    r = this.autoLevelCapping,
                    i = this.maxHdcpLevel;
                  if (((t = -1 === r && e && e.length ? e.length - 1 : r), i))
                    for (var n = t; n--; ) {
                      var a = e[n].attrs["HDCP-LEVEL"];
                      if (a && a <= i) return n;
                    }
                  return t;
                },
              },
              {
                key: "nextAutoLevel",
                get: function () {
                  return Math.min(
                    Math.max(
                      this.abrController.nextAutoLevel,
                      this.minAutoLevel
                    ),
                    this.maxAutoLevel
                  );
                },
                set: function (t) {
                  this.abrController.nextAutoLevel = Math.max(
                    this.minAutoLevel,
                    t
                  );
                },
              },
              {
                key: "playingDate",
                get: function () {
                  return this.streamController.currentProgramDateTime;
                },
              },
              {
                key: "mainForwardBufferInfo",
                get: function () {
                  return this.streamController.getMainFwdBufferInfo();
                },
              },
              {
                key: "audioTracks",
                get: function () {
                  var t = this.audioTrackController;
                  return t ? t.audioTracks : [];
                },
              },
              {
                key: "audioTrack",
                get: function () {
                  var t = this.audioTrackController;
                  return t ? t.audioTrack : -1;
                },
                set: function (t) {
                  var e = this.audioTrackController;
                  e && (e.audioTrack = t);
                },
              },
              {
                key: "subtitleTracks",
                get: function () {
                  var t = this.subtitleTrackController;
                  return t ? t.subtitleTracks : [];
                },
              },
              {
                key: "subtitleTrack",
                get: function () {
                  var t = this.subtitleTrackController;
                  return t ? t.subtitleTrack : -1;
                },
                set: function (t) {
                  var e = this.subtitleTrackController;
                  e && (e.subtitleTrack = t);
                },
              },
              {
                key: "media",
                get: function () {
                  return this._media;
                },
              },
              {
                key: "subtitleDisplay",
                get: function () {
                  var t = this.subtitleTrackController;
                  return !!t && t.subtitleDisplay;
                },
                set: function (t) {
                  var e = this.subtitleTrackController;
                  e && (e.subtitleDisplay = t);
                },
              },
              {
                key: "lowLatencyMode",
                get: function () {
                  return this.config.lowLatencyMode;
                },
                set: function (t) {
                  this.config.lowLatencyMode = t;
                },
              },
              {
                key: "liveSyncPosition",
                get: function () {
                  return this.latencyController.liveSyncPosition;
                },
              },
              {
                key: "latency",
                get: function () {
                  return this.latencyController.latency;
                },
              },
              {
                key: "maxLatency",
                get: function () {
                  return this.latencyController.maxLatency;
                },
              },
              {
                key: "targetLatency",
                get: function () {
                  return this.latencyController.targetLatency;
                },
              },
              {
                key: "drift",
                get: function () {
                  return this.latencyController.drift;
                },
              },
              {
                key: "forceStartLoad",
                get: function () {
                  return this.streamController.forceStartLoad;
                },
              },
            ],
            [
              {
                key: "version",
                get: function () {
                  return "1.4.10";
                },
              },
              {
                key: "Events",
                get: function () {
                  return S;
                },
              },
              {
                key: "ErrorTypes",
                get: function () {
                  return L;
                },
              },
              {
                key: "ErrorDetails",
                get: function () {
                  return R;
                },
              },
              {
                key: "DefaultConfig",
                get: function () {
                  return t.defaultConfig ? t.defaultConfig : Wa;
                },
                set: function (e) {
                  t.defaultConfig = e;
                },
              },
            ]
          ),
          t
        );
      })();
      return (Xa.defaultConfig = void 0), Xa;
    }),
    "object" == typeof exports && "undefined" != typeof module
      ? (module.exports = i())
      : "function" == typeof define && define.amd
      ? define(i)
      : ((r = "undefined" != typeof globalThis ? globalThis : r || self).Hls =
          i());
})(!1);
